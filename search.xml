<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Secure Code [TODO]]]></title>
      <url>http://idler1229.github.io/2016/08/13/Recommendation/Tools/Secure-Code/</url>
      <content type="html"><![CDATA[<h2 id="Writing-Secure-Code"><a href="#Writing-Secure-Code" class="headerlink" title="Writing Secure Code"></a>Writing Secure Code</h2><h3 id="STRIDE-Threat-Model"><a href="#STRIDE-Threat-Model" class="headerlink" title="STRIDE Threat Model"></a>STRIDE Threat Model</h3><ul>
<li>Spoofing identity</li>
<li>Tampering with data</li>
<li>Repudiation</li>
<li>Information disclosure</li>
<li>Denial of service.</li>
<li>Elevation of privilege</li>
</ul>
<h3 id="Top-10-Most-Dangerous-Software-Errors"><a href="#Top-10-Most-Dangerous-Software-Errors" class="headerlink" title="Top 10 Most Dangerous Software Errors"></a>Top 10 Most Dangerous Software Errors</h3><ol>
<li>Improper Neutralization of Special Elements used in an SQL Command<br>(&#x2018;SQL Injection&#x2019;)</li>
<li>Improper Neutralization of Special Elements used in an OS Command (&#x2018;OS<br>Command Injection&#x2019;)</li>
<li><strong>Buffer Copy without Checking Size of Input (&#x2018;Classic Buffer Overflow&#x2019;) </strong></li>
<li>Improper Neutralization of Input During Web Page Generation (&#x2018;Cross-site<br>Scripting&#x2019;)</li>
<li>Missing Authentication for Critical Function</li>
<li>Missing Authorization</li>
<li>Use of Hard-coded Credentials</li>
<li>Missing Encryption of Sensitive Data</li>
<li>Unrestricted Upload of File with Dangerous Type</li>
<li>Reliance on Untrusted Inputs in a Security Decision</li>
</ol>
<h3 id="Thanks-to-TrendMirco&#x2019;s-Stanley-Liu"><a href="#Thanks-to-TrendMirco&#x2019;s-Stanley-Liu" class="headerlink" title="Thanks to TrendMirco&#x2019;s Stanley Liu"></a>Thanks to TrendMirco&#x2019;s Stanley Liu</h3><p>TrendMicro: <a href="http://www.trendmicro.com.cn/cn/" target="_blank" rel="external">http://www.trendmicro.com.cn/cn/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Geek Tools]]></title>
      <url>http://idler1229.github.io/2016/08/13/Recommendation/Tools/Geek-Tools/</url>
      <content type="html"><![CDATA[<h2 id="Some-Geek-Tools-Recommendation"><a href="#Some-Geek-Tools-Recommendation" class="headerlink" title="Some Geek Tools Recommendation"></a>Some Geek Tools Recommendation</h2><h3 id="Enhanced-Desktop"><a href="#Enhanced-Desktop" class="headerlink" title="Enhanced Desktop"></a>Enhanced Desktop</h3><h4 id="Ditto"><a href="#Ditto" class="headerlink" title="Ditto"></a>Ditto</h4><p>Enhance Clipboard (Platform: Windows)<br><img src="/2016/08/13/Recommendation/Tools/Geek-Tools/./geektools--4.jpg" alt="ditto"></p>
<h4 id="AutoHotKey"><a href="#AutoHotKey" class="headerlink" title="AutoHotKey"></a>AutoHotKey</h4><p>Enhance Keyboard (Platform: Windows)<br><img src="/2016/08/13/Recommendation/Tools/Geek-Tools/./geektools--5.jpg" alt="autohotkey"></p>
<h3 id="Searching-Optimization"><a href="#Searching-Optimization" class="headerlink" title="Searching Optimization"></a>Searching Optimization</h3><h4 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h4><p>Search Repository (Platform: Windows)<br>example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d:|e: *jpg dm:xxx-xxx</span><br><span class="line">c:|d: *.pdf|*.ppt da:thisweek</span><br></pre></td></tr></table></figure></p>
<h4 id="Listary-free"><a href="#Listary-free" class="headerlink" title="Listary (free)"></a>Listary (free)</h4><p>(Platform: Windows)</p>
<h4 id="Google-Desktop-Search"><a href="#Google-Desktop-Search" class="headerlink" title="Google Desktop Search"></a>Google Desktop Search</h4><p>(Platform: Windows)<br><img src="/2016/08/13/Recommendation/Tools/Geek-Tools/./geektools--7.jpg" alt="rep"></p>
<h4 id="Hack-Google"><a href="#Hack-Google" class="headerlink" title="Hack Google"></a>Hack Google</h4><p><img src="/2016/08/13/Recommendation/Tools/Geek-Tools/./geektools--8.jpg" alt="hack"></p>
<h3 id="Knowledge-Management"><a href="#Knowledge-Management" class="headerlink" title="Knowledge Management"></a>Knowledge Management</h3><h4 id="Evernote-Geeknote"><a href="#Evernote-Geeknote" class="headerlink" title="Evernote, Geeknote"></a>Evernote, Geeknote</h4><p><img src="/2016/08/13/Recommendation/Tools/Geek-Tools/./geektools--10.jpg" alt="eg"></p>
<h4 id="Socialized-Knowledge"><a href="#Socialized-Knowledge" class="headerlink" title="Socialized Knowledge"></a>Socialized Knowledge</h4><p><img src="/2016/08/13/Recommendation/Tools/Geek-Tools/./geektools--11.jpg" alt="sk"></p>
<h3 id="Coding-Tools"><a href="#Coding-Tools" class="headerlink" title="Coding Tools"></a>Coding Tools</h3><h4 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a>Sublime Text</h4><p>SublimeCodeIntel</p>
<h4 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h4><p>ELECTION </p>
<h4 id="VisualStudio-Code"><a href="#VisualStudio-Code" class="headerlink" title="VisualStudio Code"></a>VisualStudio Code</h4><h3 id="Design-amp-Diagram-Tools"><a href="#Design-amp-Diagram-Tools" class="headerlink" title="Design &amp; Diagram Tools"></a>Design &amp; Diagram Tools</h3><h4 id="js-sequence-diagrams-js-flowchart-js"><a href="#js-sequence-diagrams-js-flowchart-js" class="headerlink" title="js-sequence-diagrams.js flowchart.js"></a>js-sequence-diagrams.js flowchart.js</h4><p><img src="/2016/08/13/Recommendation/Tools/Geek-Tools/./geektools--18.jpg" alt="js"></p>
<h4 id="Graphviz-DOT"><a href="#Graphviz-DOT" class="headerlink" title="Graphviz (DOT)"></a>Graphviz (DOT)</h4><p><img src="/2016/08/13/Recommendation/Tools/Geek-Tools/./geektools--19.jpg" alt="gd"></p>
<h4 id="PlantUML"><a href="#PlantUML" class="headerlink" title="PlantUML"></a>PlantUML</h4><p><img src="/2016/08/13/Recommendation/Tools/Geek-Tools/./geektools--20.jpg" alt="uml"></p>
<h3 id="Idea-amp-Mind-Tools"><a href="#Idea-amp-Mind-Tools" class="headerlink" title="Idea &amp; Mind Tools"></a>Idea &amp; Mind Tools</h3><h4 id="MindMap"><a href="#MindMap" class="headerlink" title="MindMap"></a>MindMap</h4><h4 id="Blumind"><a href="#Blumind" class="headerlink" title="Blumind"></a>Blumind</h4><h4 id="The-Brain-Personal-Brain"><a href="#The-Brain-Personal-Brain" class="headerlink" title="The Brain (Personal Brain)"></a>The Brain (Personal Brain)</h4><h3 id="Document-Tools"><a href="#Document-Tools" class="headerlink" title="Document Tools"></a>Document Tools</h3><h4 id="DocBook"><a href="#DocBook" class="headerlink" title="DocBook"></a>DocBook</h4><h4 id="DITA"><a href="#DITA" class="headerlink" title="DITA"></a>DITA</h4><h4 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h4><h4 id="RestructuringText"><a href="#RestructuringText" class="headerlink" title="RestructuringText"></a>RestructuringText</h4><h3 id="Other-Handy-Tools"><a href="#Other-Handy-Tools" class="headerlink" title="Other Handy Tools"></a>Other Handy Tools</h3><h4 id="Visualize-Regex"><a href="#Visualize-Regex" class="headerlink" title="Visualize Regex"></a>Visualize Regex</h4><p><img src="/2016/08/13/Recommendation/Tools/Geek-Tools/./geektools--30.jpg" alt="vr"></p>
<h4 id="Pandoc"><a href="#Pandoc" class="headerlink" title="Pandoc"></a>Pandoc</h4><h4 id="Diffcount-Utility"><a href="#Diffcount-Utility" class="headerlink" title="Diffcount Utility"></a>Diffcount Utility</h4><h3 id="Thanks-to-TrendMicro&#x2019;s-Charlie-Cao"><a href="#Thanks-to-TrendMicro&#x2019;s-Charlie-Cao" class="headerlink" title="Thanks to TrendMicro&#x2019;s Charlie Cao"></a>Thanks to TrendMicro&#x2019;s Charlie Cao</h3><p>TrendMicro: <a href="http://www.trendmicro.com.cn/cn/" target="_blank" rel="external">http://www.trendmicro.com.cn/cn/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git Errors]]></title>
      <url>http://idler1229.github.io/2016/08/10/Git/git-error/</url>
      <content type="html"><![CDATA[<h2 id="Git-Errors-Solution"><a href="#Git-Errors-Solution" class="headerlink" title="Git Errors Solution"></a>Git Errors Solution</h2><h3 id="Fatal-loose-object&#x2026;is-corrupt"><a href="#Fatal-loose-object&#x2026;is-corrupt" class="headerlink" title="Fatal: loose object&#x2026;is corrupt"></a>Fatal: loose object&#x2026;is corrupt</h3><h4 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error: object file .git/objects/9a/83e9c5b3d697d12a2e315e1777ceaf27ea1bab is empty </span><br><span class="line">fatal: loose object 9a83e9c5b3d697d12a2e315e1777ceaf27ea1bab (stored <span class="keyword">in</span> .git/objects/9a/83e9c5b3d697d12a2e315e1777ceaf27ea1bab) is corrupt</span><br></pre></td></tr></table></figure>
<h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rm -fr .git  </span><br><span class="line">git init  </span><br><span class="line">git remote add origin your-git-remote-url  </span><br><span class="line">git fetch  </span><br><span class="line">git reset --hard origin/master  </span><br><span class="line">git branch --set-upstream-to=origin/master master</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Registration]]></title>
      <url>http://idler1229.github.io/2016/08/08/Project/Registration/</url>
      <content type="html"><![CDATA[<h2 id="Developer"><a href="#Developer" class="headerlink" title="Developer"></a>Developer</h2><p><img src="/2016/08/08/Project/Registration/./IDLER.png" alt="pic"></p>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>This procedure implemented by C plus plus with Open Soure Library <strong>OpenCV</strong>, <strong>PCL</strong>, and <strong>Realsense Developer SDK</strong>.</p>
<p><strong>Project On Github</strong>: <a href="https://github.com/IDLER1229/Registration" target="_blank" rel="external">https://github.com/IDLER1229/Registration</a>  </p>
<h2 id="Intel-Realsense-F200"><a href="#Intel-Realsense-F200" class="headerlink" title="Intel Realsense F200"></a>Intel Realsense F200</h2><h3 id="Official-Statement"><a href="#Official-Statement" class="headerlink" title="Official Statement"></a>Official Statement</h3><p><strong>Intel&#xAE; RealSense&#x2122;</strong> camera fits remarkable technology into a small package. There are three cameras that act like one&#x2014;a 1080p HD camera, an infrared camera, and an infrared laser projector&#x2014;they &#x201C;see&#x201D; like the human eye to sense depth and track human motion. Intel&#xAE; RealSense&#x2122; technology1 redefines how we interact with our devices for a more natural, intuitive and immersive experience, supported by the powerful performance of Intel&#xAE; processors.</p>
<h3 id="More-details"><a href="#More-details" class="headerlink" title="More details"></a>More details</h3><p>And you can find more details with Realsense on <a href="https://software.intel.com/en-us/intel-realsense-sdk/download" target="_blank" rel="external">https://software.intel.com/en-us/intel-realsense-sdk/download</a></p>
<h2 id="Procedure"><a href="#Procedure" class="headerlink" title="Procedure"></a>Procedure</h2><p>This program consists of four parts: Segmentation, classification, registration and reflection. First, depth data can be divided into serval regions with improved region-growing segmentation. Then classifly region catergory with a classic linear svm with HOG as feature. Next, regist mesh generated by Realsense with 3D-model which we built by 3D scanner inadvance. Last but not least, reflect Points Cloud to 2D-color-image. Finally, we can see <strong>purple point</strong> in folowing picture. </p>
<h3 id="Segmentation"><a href="#Segmentation" class="headerlink" title="Segmentation"></a>Segmentation</h3><p>An improved region-growing segmentation efficiently divide depth data into <strong>topk</strong> main regions. </p>
<h3 id="Classification"><a href="#Classification" class="headerlink" title="Classification"></a>Classification</h3><p>An classic <strong>Support Vector Machine (SVM)</strong> with <strong>Histogram of Oriented Gradient (HOG)</strong> as feature rapidly select regions contained objects.</p>
<h3 id="Registration"><a href="#Registration" class="headerlink" title="Registration"></a>Registration</h3><p>Regist Point Cloud (3D mesh) with pre-built 3D-model, by <strong>RANSAC</strong> and <strong>ICP</strong>.</p>
<h3 id="Reflection"><a href="#Reflection" class="headerlink" title="Reflection"></a>Reflection</h3><p>Reflect points into 2D image. </p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><h3 id="Interpretion"><a href="#Interpretion" class="headerlink" title="Interpretion"></a>Interpretion</h3><p><strong>color</strong> and <strong>depth</strong> are soure data captured by Realsense. <strong>before merging</strong> is raw result with region-growing and <strong>segmentation</strong> merge small regions into representive regions as main regions. <strong>regions</strong> show the bounding boxes with convex hulls of main regions. And <strong>classification</strong> show region which probably contains object. The 3D Point Cloud window show the registration and <strong>reflect</strong> demonstrate the final result.<br>HAHA, the <strong>yellow point region</strong> means  <strong>grasping points</strong> of Bottle. This is the real purpose of registration which can localize object grasping region</p>
<h3 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h3><p><img src="/2016/08/08/Project/Registration/./res0.png" alt="Example"><br><img src="/2016/08/08/Project/Registration/./res1.png" alt="Example"><br><img src="/2016/08/08/Project/Registration/./Point-Cloud.gif" alt="Point-Cloud"></p>
<h2 id="ERROR-amp-SOLUTION"><a href="#ERROR-amp-SOLUTION" class="headerlink" title="ERROR &amp; SOLUTION"></a>ERROR &amp; SOLUTION</h2><p>We just add some solutions which we have finished off into <a href="https://github.com/IDLER1229/Registration/issues" target="_blank" rel="external"><strong>Issues</strong></a>. Welcome You to push problems you faced with.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hide User in Ubuntu]]></title>
      <url>http://idler1229.github.io/2016/08/07/Linux/Solution/Hide-User-in-Ubuntu/</url>
      <content type="html"><![CDATA[<h2 id="Hide-User"><a href="#Hide-User" class="headerlink" title="Hide User"></a>Hide User</h2><p>If your system uses AccountsService, you cannot hide a user from the greeter screen by reconfiguring lightdm because it defers to AccountsService. That is stated very clearly in the comments in:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/lightdm/users.conf</span><br></pre></td></tr></table></figure></p>
<p>What you need to do instead is to reconfigure AccountsService. To hide a user named XXX, create a file named<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/lib/AccountsService/users/XXX</span><br></pre></td></tr></table></figure></p>
<p>containing two lines:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[User]</span><br><span class="line">SystemAccount=<span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="http://askubuntu.com/questions/92349/how-do-i-hide-a-particular-user-from-the-login-screen" target="_blank" rel="external">http://askubuntu.com/questions/92349/how-do-i-hide-a-particular-user-from-the-login-screen</a></p>
<h3 id="Thanks-to"><a href="#Thanks-to" class="headerlink" title="Thanks to"></a>Thanks to</h3><p>Yu Zhang, who is my  senior fellow apprentice.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Regular Expressions]]></title>
      <url>http://idler1229.github.io/2016/08/04/Cheat%20Sheet/Regular-Expressions/</url>
      <content type="html"><![CDATA[<h2 id="Regular-Expressions-Cheat-Sheet"><a href="#Regular-Expressions-Cheat-Sheet" class="headerlink" title="Regular Expressions Cheat Sheet"></a>Regular Expressions Cheat Sheet</h2><h3 id="Sheet"><a href="#Sheet" class="headerlink" title="Sheet"></a>Sheet</h3><p><img src="/2016/08/04/Cheat Sheet/Regular-Expressions/./re-sheet.jpg" alt="pic"></p>
<h3 id="BTW"><a href="#BTW" class="headerlink" title="BTW"></a>BTW</h3><p>Also, there is a good website to visualize Regular Expressions: <a href="https://jex.im/regulex/#!embed=false&amp;flags=&amp;re=^%28a|b%29*%3F%24" target="_blank" rel="external">https://jex.im/regulex/#!embed=false&amp;flags=&amp;re=^%28a|b%29*%3F%24</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SQL]]></title>
      <url>http://idler1229.github.io/2016/07/04/Cheat%20Sheet/SQL/</url>
      <content type="html"><![CDATA[<h2 id="SQL-Cheat-Sheet"><a href="#SQL-Cheat-Sheet" class="headerlink" title="SQL Cheat Sheet"></a>SQL Cheat Sheet</h2><h3 id="Sheet"><a href="#Sheet" class="headerlink" title="Sheet"></a>Sheet</h3><p><img src="/2016/07/04/Cheat Sheet/SQL/./sql-sheet.png" alt="pic"></p>
<h3 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h3><p><a href="https://zeroturnaround.com/rebellabs/sql-cheat-sheet/" target="_blank" rel="external">https://zeroturnaround.com/rebellabs/sql-cheat-sheet/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Recommendation -- Awesome C++]]></title>
      <url>http://idler1229.github.io/2016/06/26/Programming/C++/Recommendation/Awesome-C++/</url>
      <content type="html"><![CDATA[<h2 id="Awesome-C"><a href="#Awesome-C" class="headerlink" title="Awesome C++"></a>Awesome C++</h2><p>A curated list of awesome C/C++ frameworks, libraries, resources, and shiny things.<br>We can freely search all kinds of C++ libraries we need on <a href="https://github.com/IDLER1229/awesome-cpp" target="_blank" rel="external">https://github.com/IDLER1229/awesome-cpp</a><br><img src="/2016/06/26/Programming/C++/Recommendation/Awesome-C++/./awesome.jpg" alt="pic"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Top 10 Mistakes Java Developers Make]]></title>
      <url>http://idler1229.github.io/2016/06/26/Programming/JAVA/Top10-Mistakes/</url>
      <content type="html"><![CDATA[<h2 id="Top-10-Mistakes-Java-Developers-Make"><a href="#Top-10-Mistakes-Java-Developers-Make" class="headerlink" title="Top 10 Mistakes Java Developers Make"></a>Top 10 Mistakes Java Developers Make</h2><p>Reoriganize From <a href="http://www.programcreek.com/2014/05/top-10-mistakes-java-developers-make/" target="_blank" rel="external">http://www.programcreek.com/2014/05/top-10-mistakes-java-developers-make/</a></p>
<h3 id="Convert-Array-to-ArrayList"><a href="#Convert-Array-to-ArrayList" class="headerlink" title="Convert Array to ArrayList"></a>Convert Array to ArrayList</h3><p>&#x7528;&#x4EE5;&#x4E0B;&#x65B9;&#x5F0F;&#x5C06;&#x6570;&#x7EC4;&#x8F6C;&#x6210;ArrayList<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(arr);</span><br></pre></td></tr></table></figure></p>
<p><code>Arrays.asList()</code>&#x8FD4;&#x56DE;&#x7684;<code>Arrays</code>&#x7684;&#x4E00;&#x4E2A;&#x5185;&#x90E8;&#x9759;&#x6001;&#x7C7B;<code>ArrayList</code>, &#x800C;&#x4E0D;&#x662F;<code>java.util.ArrayList</code>. <code>java.util.Arrays.ArrayList</code>&#x4F1A;&#x6709;&#x4E00;&#x4E9B;&#x8BF8;&#x5982;<code>set(), get(), contains()</code>&#x7684;&#x65B9;&#x6CD5;, &#x4F46;&#x662F;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x6DFB;&#x52A0;&#x5143;&#x7D20;&#x7684;&#x65B9;&#x6CD5;, &#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x7C7B;&#x662F;&#x5B9A;&#x957F;&#x7684;. &#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;&#x5982;&#x4E0B;:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;String&gt;(Arrays.asList(arr));</span><br></pre></td></tr></table></figure></p>
<p><code>ArrayList</code> &#x662F;&#x5141;&#x8BB8;&#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x7C7B;&#x4E3A;&#x53C2;&#x6570;&#x7684;, &#x6240;&#x4EE5;&#x8981;&#x628A;<code>java.util.Arrays.ArrayList</code>&#x518D;&#x901A;&#x8FC7;<code>ArrayList</code>&#x7ED9;&#x6784;&#x9020;&#x4E00;&#x4E0B;.</p>
<h3 id="Check-If-an-Array-Contains-a-Value"><a href="#Check-If-an-Array-Contains-a-Value" class="headerlink" title="Check If an Array Contains a Value"></a>Check If an Array Contains a Value</h3><p>&#x6709;&#x4EBA;&#x603B;&#x559C;&#x6B22;&#x8FD9;&#x4E48;&#x505A;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;String&gt;(Arrays.asList(arr));</span><br><span class="line"><span class="keyword">return</span> set.contains(targetValue);</span><br></pre></td></tr></table></figure></p>
<p>&#x4F46;&#x662F;&#x6CA1;&#x5FC5;&#x8981;, &#x56E0;&#x4E3A;&#x76F4;&#x63A5;&#x7528;&#x4E5F;&#x80FD;&#x770B;&#x6709;&#x65E0;&#x5305;&#x542B;&#x5143;&#x7D20;. &#x8F6C;&#x6210;Set&#x6CA1;&#x6709;&#x5FC5;&#x8981;, &#x8FD8;&#x8981;&#x6D6A;&#x8D39;&#x6784;&#x9020;&#x5F00;&#x9500;.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Arrays.asList(arr).contains(targetValue);</span><br></pre></td></tr></table></figure></p>
<p>&#x751A;&#x81F3;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(String s: arr){</span><br><span class="line">	<span class="keyword">if</span>(s.equals(targetValue))</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure></p>
<p>&#x4F46;&#x7B2C;&#x4E00;&#x4E2A;&#x53EF;&#x8BFB;&#x6027;&#x597D;&#x4E00;&#x70B9;</p>
<h3 id="Remove-an-Element-from-a-List-Inside-a-Loop"><a href="#Remove-an-Element-from-a-List-Inside-a-Loop" class="headerlink" title="Remove an Element from a List Inside a Loop"></a>Remove an Element from a List Inside a Loop</h3><p>size&#x4F1A;&#x53D8;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;(Arrays.asList(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) {</span><br><span class="line">	list.remove(i);</span><br><span class="line">}</span><br><span class="line">System.out.println(list);</span><br></pre></td></tr></table></figure></p>
<p>&#x8FED;&#x4EE3;&#x5668;&#x5F02;&#x5E38;, &#x4F1A;&#x7206;<a href="http://www.programcreek.com/2014/01/java-util-concurrentmodificationexception/" target="_blank" rel="external">ConcurrentModificationException.</a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;(Arrays.asList(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (String s : list) {</span><br><span class="line">	<span class="keyword">if</span> (s.equals(<span class="string">&quot;a&quot;</span>))</span><br><span class="line">		list.remove(s);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x6B63;&#x786E;&#x7684;&#x65B9;&#x5F0F;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;(Arrays.asList(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>));</span><br><span class="line">Iterator&lt;String&gt; iter = list.iterator();</span><br><span class="line"><span class="keyword">while</span> (iter.hasNext()) {</span><br><span class="line">	String s = iter.next();</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">if</span> (s.equals(<span class="string">&quot;a&quot;</span>)) {</span><br><span class="line">		iter.remove();</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x56E0;&#x4E3A;&#x5728;foreach&#x5FAA;&#x73AF;&#x91CC;, &#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x81EA;&#x52A8;&#x5C06;&#x5220;&#x9664;&#x5143;&#x7D20;&#x540E;&#x518D;&#x8FDB;&#x884C;&#x8FED;&#x4EE3;&#x5668;&#x7684;<code>next()</code>&#x64CD;&#x4F5C;, &#x8FD9;&#x5C31;&#x4F1A;&#x5F15;&#x8D77;<a href="http://www.programcreek.com/2014/01/java-util-concurrentmodificationexception/" target="_blank" rel="external">ConcurrentModificationException.</a>&#x5F02;&#x5E38;. &#x53EF;&#x4EE5;&#x5BF9;&#x6BD4;&#x4E00;&#x4E0B;<a href="http://www.programcreek.com/2014/01/deep-understanding-of-arraylist-iterator/" target="_blank" rel="external">Iterator</a>&#x7684;&#x6E90;&#x7801;.</p>
<h3 id="Hashtable-vs-HashMap"><a href="#Hashtable-vs-HashMap" class="headerlink" title="Hashtable vs HashMap"></a>Hashtable vs HashMap</h3><p><code>Hashtable</code> &#x548C; <code>HashMap</code> &#x6700;&#x5927;&#x7684;&#x533A;&#x522B;&#x662F;&#x540C;&#x6B65;&#x5316;.</p>
<h3 id="Use-Raw-Type-of-Collection"><a href="#Use-Raw-Type-of-Collection" class="headerlink" title="Use Raw Type of Collection"></a>Use Raw Type of Collection</h3><p>Java&#x91CC;, &#x539F;&#x751F;&#x6001;&#x578B;(raw type)&#x548C;&#x901A;&#x914D;&#x7B26;(wildcard type)&#x53EF;&#x4EE5;&#x6DF7;&#x7528;. &#x6BD4;&#x5982; Set&lt;?&gt;.<br>&#x4F46;&#x5982;&#x4E0B;&#x4EE3;&#x7801;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(List list, Object o)</span></span>{</span><br><span class="line">	list.add(o);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>{</span><br><span class="line">	List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">	add(list, <span class="number">10</span>);</span><br><span class="line">	String s = list.get(<span class="number">0</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x4F1A;&#x7206;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread <span class="string">&quot;main&quot;</span> java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String at ...</span><br></pre></td></tr></table></figure></p>
<p>&#x56E0;&#x4E3A;&#x539F;&#x751F;&#x6001;&#x578B;&#x7684;&#x96C6;&#x5408;&#x7C7B;&#x8DF3;&#x8FC7;&#x4E86;&#x6CDB;&#x578B;&#x68C0;&#x67E5;, <code>Set</code>, <code>Set&lt;?&gt;</code>, &#x548C; <code>Set&lt;Object&gt;</code> &#x662F;&#x5B58;&#x5728;&#x5F88;&#x5927;&#x5DEE;&#x522B;&#x7684;. More details in <a href="http://www.programcreek.com/2013/12/raw-type-set-vs-unbounded-wildcard-set/" target="_blank" rel="external">Raw type vs. Unbounded wildcard</a> .</p>
<h3 id="Access-Level"><a href="#Access-Level" class="headerlink" title="Access Level"></a>Access Level</h3><p>public&#x5F88;&#x65B9;&#x4FBF;, &#x4F46;&#x662F;&#x8FD9;&#x6837;&#x8BBE;&#x8BA1;&#x5F88;&#x4E11;&#x964B;.<br>&#x5982;&#x4F55;&#x4F18;&#x96C5;&#x8BBE;&#x8BA1;, &#x53C2;&#x89C1;<a href="http://www.programcreek.com/2011/11/java-access-level-public-protected-private/" target="_blank" rel="external">public, default, protected, and private</a>.</p>
<h3 id="ArrayList-vs-LinkedList"><a href="#ArrayList-vs-LinkedList" class="headerlink" title="ArrayList vs. LinkedList"></a>ArrayList vs. LinkedList</h3><p>LinkedList &#x5927;&#x91CF;&#x5220;&#x9664;&#x63D2;&#x5165;, &#x5C11;&#x91CF;&#x968F;&#x673A;&#x8BBF;&#x95EE;<br>ArrayList &#x6B63;&#x597D;&#x76F8;&#x53CD;.</p>
<h3 id="Mutable-vs-Immutable"><a href="#Mutable-vs-Immutable" class="headerlink" title="Mutable vs. Immutable"></a>Mutable vs. Immutable</h3><p><code>mutable</code>&#x901A;&#x5E38;&#x7528;&#x6765;&#x907F;&#x514D;&#x8FC7;&#x591A;&#x7684;&#x4E2D;&#x95F4;&#x5BF9;&#x8C61;. &#x4E00;&#x4E2A;&#x7ECF;&#x5178;&#x7684;&#x4F8B;&#x5B50;&#x5C31;&#x662F;&#x5927;&#x6570;&#x5B57;&#x7B26;&#x4E32;, &#x5982;&#x679C;&#x4F7F;&#x7528;<code>immutable</code>&#x7684;&#x5B57;&#x7B26;&#x4E32;, &#x90A3;&#x5C31;&#x5C06;&#x4EA7;&#x751F;&#x5927;&#x91CF;&#x4E2D;&#x95F4;&#x5BF9;&#x8C61;, &#x65E2;&#x8017;&#x7A7A;&#x95F4;&#x53C8;&#x6D6A;&#x8D39;&#x65F6;&#x95F4;, &#x8FD8;&#x8981;&#x5783;&#x573E;&#x7ACB;&#x5373;&#x56DE;&#x6536;.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String result=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(String s: arr){</span><br><span class="line">	result = result + s;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x56E0;&#x6B64;&#x4F7F;&#x7528;<code>StringBuffer</code>&#x8FD9;&#x79CD;<code>mutable</code>&#x7684;&#x7C7B;&#x6BD4;&#x8F83;&#x5408;&#x9002;.<br>more details in <a href="http://www.programcreek.com/2013/04/why-string-is-immutable-in-java/" target="_blank" rel="external">Why String is immutable in Java ? </a></p>
<h3 id="Constructor-of-Super-and-Sub"><a href="#Constructor-of-Super-and-Sub" class="headerlink" title="Constructor of Super and Sub"></a>Constructor of Super and Sub</h3><p><a href="./Implicit-super-constructor-is-undefined-for-default-constructor.png">!pic</a><br>&#x7236;&#x7C7B;&#x9ED8;&#x8BA4;&#x6784;&#x9020;&#x672A;&#x5B9A;&#x4E49;, &#x4F46;&#x662F;&#x5B50;&#x7C7B;&#x5B9A;&#x4E49;&#x4E86;. Java&#x91CC;, &#x4E00;&#x4E2A;&#x7C7B;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5B9A;&#x4E49;&#x6784;&#x9020;&#x65B9;&#x6CD5;, &#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x81EA;&#x52A8;&#x63D2;&#x4E00;&#x4E2A;&#x65E0;&#x53C2;&#x7684;, &#x4F46;&#x662F;&#x5982;&#x679C;&#x663E;&#x793A;&#x5B9A;&#x4E49;&#x4E86;&#x90A3;&#x5C31;&#x4E0D;&#x63D2;&#x4E86;(&#x8FD9;&#x548C;C++&#x4E0D;&#x4E00;&#x6837;).<br>&#x800C;&#x6B64;&#x65F6;&#x5B50;&#x7C7B;&#x7684;&#x65E0;&#x53C2;&#x6784;&#x9020;&#x9700;&#x8981;&#x8C03;&#x7528;&#x7236;&#x7C7B;&#x7684;&#x65E0;&#x53C2;&#x6784;&#x9020;, &#x4F46;&#x662F;&#x53D1;&#x73B0;&#x4E0D;&#x5B58;&#x5728;, &#x56E0;&#x6B64;&#x8981;&#x62A5;&#x9519;.<br>&#x8981;&#x60F3;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;, &#x8981;&#x4E48;&#x7ED9;&#x7236;&#x7C7B;&#x52A0;&#x4E00;&#x4E2A;&#x65E0;&#x53C2;&#x7684;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Super</span><span class="params">()</span></span>{</span><br><span class="line">    System.out.println(<span class="string">&quot;Super&quot;</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x8981;&#x4E48;&#x628A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x7236;&#x7C7B;&#x6784;&#x9020;&#x7ED9;&#x53BB;&#x4E86;, &#x518D;&#x8981;&#x4E48;&#x76F4;&#x63A5;&#x628A;<code>super(value)</code>&#x585E;&#x5B50;&#x7C7B;&#x6784;&#x9020;&#x91CC;.</p>
<h3 id="const-or-Constructor"><a href="#const-or-Constructor" class="headerlink" title="const or Constructor?"></a>const or Constructor?</h3><p>&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x521B;&#x5EFA;String<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. use double quotes</span></span><br><span class="line">String x = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="comment">//2. use constructor</span></span><br><span class="line">String y = <span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br></pre></td></tr></table></figure></p>
<p>&#x4F46;&#x662F;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">String a = <span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">String b = <span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">System.out.println(a == b);  <span class="comment">// True</span></span><br><span class="line">System.out.println(a.equals(b)); <span class="comment">// True</span></span><br><span class="line"> </span><br><span class="line">String c = <span class="keyword">new</span> String(<span class="string">&quot;abcd&quot;</span>);</span><br><span class="line">String d = <span class="keyword">new</span> String(<span class="string">&quot;abcd&quot;</span>);</span><br><span class="line">System.out.println(c == d);  <span class="comment">// False</span></span><br><span class="line">System.out.println(c.equals(d)); <span class="comment">// True</span></span><br></pre></td></tr></table></figure></p>
<p>&#x5B57;&#x7B26;&#x4E32;&#x76F4;&#x63A5;&#x8D4B;&#x503C;&#x662F;&#x5E38;&#x91CF;, &#x56E0;&#x6B64;&#x90FD;&#x76F8;&#x7B49;; &#x4F46;new&#x7684;&#x65F6;&#x5019;&#x662F;&#x5404;&#x81EA;&#x5F00;&#x8F9F;&#x7A7A;&#x95F4;, == &#x6BD4;&#x8F83;&#x7684;&#x662F;&#x5BF9;&#x8C61;&#x662F;&#x5426;&#x76F8;&#x7B49;, &#x56E0;&#x800C;&#x4E0D;&#x7B49;; equals&#x6BD4;&#x8F83;&#x7684;&#x662F;&#x503C;&#x90A3;&#x5C31;&#x76F8;&#x7B49;.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Leetcode -- Valid Number]]></title>
      <url>http://idler1229.github.io/2016/06/14/Toys/Leetcode/ValidNumber/</url>
      <content type="html"><![CDATA[<h2 id="Valid-Number"><a href="#Valid-Number" class="headerlink" title="Valid Number"></a><a href="https://leetcode.com/problems/valid-number/" target="_blank" rel="external">Valid Number</a></h2><h3 id="Solve-with-Automata"><a href="#Solve-with-Automata" class="headerlink" title="Solve with Automata"></a>Solve with Automata</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Solution {</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">initPos</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="built_in">memset</span>(pos, <span class="number">-1</span>, <span class="number">128</span>);</span><br><span class="line">    	<span class="built_in">memset</span>(pos + <span class="number">48</span>, <span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line">    	pos[<span class="string">&apos;+&apos;</span>] = pos[<span class="string">&apos;-&apos;</span>] = <span class="number">0</span>;</span><br><span class="line">    	pos[<span class="string">&apos;e&apos;</span>] = pos[<span class="string">&apos;E&apos;</span>] = <span class="number">3</span>;</span><br><span class="line">    	pos[<span class="string">&apos;.&apos;</span>] = <span class="number">2</span>;</span><br><span class="line">    	pos[<span class="string">&apos; &apos;</span>] = <span class="number">4</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isNumber</span><span class="params">(<span class="built_in">string</span> s)</span> </span>{</span><br><span class="line">    	<span class="keyword">int</span> state = <span class="number">0</span>;</span><br><span class="line">    	initPos();</span><br><span class="line">    	<span class="keyword">for</span>(<span class="keyword">char</span> c: s)</span><br><span class="line">    		<span class="keyword">if</span> (!(pos[c] &gt;= <span class="number">0</span> &amp;&amp; <span class="number">0</span> &lt;= (state = trans[state][pos[c]])))</span><br><span class="line">    		    return <span class="literal">false</span>;</span><br><span class="line">    	return trans[state][<span class="number">5</span>];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">//	+/- d . e/E space can_accept</span></span><br><span class="line">    <span class="keyword">int</span> trans[<span class="number">11</span>][<span class="number">6</span>] = {</span><br><span class="line">    	{  <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> },</span><br><span class="line">    	{ <span class="number">-1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span> },</span><br><span class="line">    	{ <span class="number">-1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">1</span> },</span><br><span class="line">    	{ <span class="number">-1</span>, <span class="number">4</span>, <span class="number">-1</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">1</span> },</span><br><span class="line">    	{ <span class="number">-1</span>, <span class="number">4</span>, <span class="number">-1</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">1</span> },</span><br><span class="line">    	{  <span class="number">6</span>, <span class="number">7</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span> },</span><br><span class="line">    	{ <span class="number">-1</span>, <span class="number">7</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">10</span>, <span class="number">0</span> },</span><br><span class="line">    	{ <span class="number">-1</span>, <span class="number">7</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">10</span>, <span class="number">1</span> },</span><br><span class="line">    	{ <span class="number">-1</span>, <span class="number">9</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span> },</span><br><span class="line">    	{ <span class="number">-1</span>, <span class="number">9</span>, <span class="number">-1</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">1</span> },</span><br><span class="line">    	{ <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">10</span> ,<span class="number">1</span>}</span><br><span class="line">    }; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> pos[<span class="number">128</span>];</span><br><span class="line">};</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[No loop]]></title>
      <url>http://idler1229.github.io/2016/06/13/Toys/C/Noloop/</url>
      <content type="html"><![CDATA[<h2 id="Without-if-if&#x2026;else-for-while-do&#x2026;while-goto-to-solve-Factorial"><a href="#Without-if-if&#x2026;else-for-while-do&#x2026;while-goto-to-solve-Factorial" class="headerlink" title="Without if, if&#x2026;else, ?:, for, while, do&#x2026;while, goto to solve Factorial"></a>Without <strong>if, if&#x2026;else, ?:, for, while, do&#x2026;while, goto</strong> to solve Factorial</h2><a id="more"></a>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************************************************************</span><br><span class="line">	&gt; File Name: noloop.c</span><br><span class="line">	&gt; Author: _IDLER_</span><br><span class="line">	&gt; Website: http://idler1229.top</span><br><span class="line"> ************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long </span></span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">Factorial</span><span class="params">(LL n)</span></span><br><span class="line"></span>{</span><br><span class="line">    LL part = <span class="number">1</span>;  </span><br><span class="line">    n &amp;&amp; (part = n * Factorial(n<span class="number">-1</span>)); </span><br><span class="line">    return part; </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span><br><span class="line"></span>{</span><br><span class="line">    <span class="keyword">for</span> (LL i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">	    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, Factorial(i)); </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span><br><span class="line"></span>{</span><br><span class="line">    test(); </span><br><span class="line">    return <span class="number">0</span>; </span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Shortcuts Backup]]></title>
      <url>http://idler1229.github.io/2016/06/03/Linux/Solution/Shortcuts-Backup/</url>
      <content type="html"><![CDATA[<h2 id="Shortcuts-Backup-on-My-Laptop"><a href="#Shortcuts-Backup-on-My-Laptop" class="headerlink" title="Shortcuts Backup on My Laptop"></a>Shortcuts Backup on My Laptop</h2><table>
<thead>
<tr>
<th style="text-align:center">Shortcuts</th>
<th style="text-align:center">Command</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ALT + O</td>
<td style="text-align:center">modprobe psmouse</td>
</tr>
<tr>
<td style="text-align:center">ALT + F</td>
<td style="text-align:center">modprobe -r psmouse</td>
</tr>
<tr>
<td style="text-align:center">ALT + Y</td>
<td style="text-align:center">docky</td>
</tr>
<tr>
<td style="text-align:center">ALT + B</td>
<td style="text-align:center">rfkill unblock bluetooth</td>
</tr>
<tr>
<td style="text-align:center">ALT + N</td>
<td style="text-align:center">rfkill block bluetooth</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Refresh Page]]></title>
      <url>http://idler1229.github.io/2016/06/01/Toys/Html/Refresh-Page/</url>
      <content type="html"><![CDATA[<h2 id="Refresh-Page-html-script"><a href="#Refresh-Page-html-script" class="headerlink" title="Refresh Page - html script"></a>Refresh Page - html script</h2><a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">frameset</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;http://xxx.xxx.xxx.cn&quot;</span> <span class="attr">name</span>=<span class="string">&quot;iframe&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Cmd Send E-mail]]></title>
      <url>http://idler1229.github.io/2016/06/01/Toys/Shell/Send-Email/</url>
      <content type="html"><![CDATA[<h2 id="Cmd-Send-E-mail"><a href="#Cmd-Send-E-mail" class="headerlink" title="Cmd Send E-mail"></a>Cmd Send E-mail</h2><p>With this Shell script, we can upload <em>.mobi</em>  to <strong>Kindle</strong></p>
<a id="more"></a>
<p>If without <code>-xp</code>, you need input pass of your E-mail.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">FROM=<span class="string">&quot;binder@gmail.com&quot;</span></span><br><span class="line">TO=<span class="string">&quot;xxx@kindle.cn&quot;</span></span><br><span class="line">ATTACH=<span class="string">&quot;./xxx.mobi&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> <span class="_">-gt</span> 0 ]; <span class="keyword">then</span></span><br><span class="line">	FROM=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> <span class="_">-gt</span> 1 ]; <span class="keyword">then</span></span><br><span class="line">	TO=<span class="variable">$2</span>	</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> <span class="_">-gt</span> 3 ]; <span class="keyword">then</span></span><br><span class="line">	ATTACH=<span class="variable">$3</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sendemail 	<span class="_">-s</span> smtp.nju.edu.cn \</span><br><span class="line">			<span class="_">-f</span> mg1433094@smail.nju.edu.cn \</span><br><span class="line">			-t <span class="variable">$TO</span> \</span><br><span class="line">			-u <span class="string">&quot;Idler&apos;s Books&quot;</span> \</span><br><span class="line">			-m $<span class="string">&quot;Idle About&quot;</span> \</span><br><span class="line">			-xu <span class="variable">$FROM</span>	\ </span><br><span class="line">			<span class="comment">#-xp $PASS \</span></span><br><span class="line">			-o tls=auto \</span><br><span class="line">			<span class="_">-a</span> <span class="variable">$ATTACH</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Cmd Login]]></title>
      <url>http://idler1229.github.io/2016/06/01/Toys/Shell/Cmd-Login/</url>
      <content type="html"><![CDATA[<h2 id="Cmd-Login-Network"><a href="#Cmd-Login-Network" class="headerlink" title="Cmd Login Network"></a>Cmd Login Network</h2><p>Post account and password with <em>curl</em> or <em>wget</em>.</p>
<a id="more"></a>
<h3 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[Usage]&quot;</span>  </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\t&quot;</span><span class="string">&apos;./Login $ACC $PASS&apos;</span></span><br><span class="line">ACCOUNT=<span class="variable">$1</span></span><br><span class="line">PASS=<span class="variable">$2</span></span><br><span class="line">curl <span class="_">-d</span> <span class="string">&quot;username=<span class="variable">$ACCOUNT</span>&amp;password=<span class="variable">$PASS</span>&quot;</span> http://p.nju.edu.cn/portal_io/login</span><br></pre></td></tr></table></figure>
<h3 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[Usage]&quot;</span>  </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\t&quot;</span><span class="string">&apos;./Login $ACC $PASS&apos;</span></span><br><span class="line">ACCOUNT=<span class="variable">$1</span></span><br><span class="line">PASS=<span class="variable">$2</span></span><br><span class="line">wget -O /dev/null --post-data <span class="string">&quot;username=<span class="variable">$ACCOUNT</span>&amp;password=<span class="variable">$PASS</span>&quot;</span> http://p.nju.edu.cn/portal_io/login</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Convert]]></title>
      <url>http://idler1229.github.io/2016/06/01/Linux/Shell/Convert/</url>
      <content type="html"><![CDATA[<h2 id="Imagemagick-Command-&#x2013;-Convert"><a href="#Imagemagick-Command-&#x2013;-Convert" class="headerlink" title="Imagemagick Command &#x2013; Convert"></a>Imagemagick Command &#x2013; Convert</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## get image info</span></span><br><span class="line">identify <span class="variable">$filename</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># resize</span></span><br><span class="line"><span class="comment">## ! can force-cast to the required size  </span></span><br><span class="line">convert -resize 160x80! <span class="variable">$infile</span> <span class="variable">$outfile</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># quality</span></span><br><span class="line"><span class="comment">## compress with quality, generally 60 -80  </span></span><br><span class="line">convert -quality [0-100] <span class="variable">$infile</span> <span class="variable">$outfile</span></span><br></pre></td></tr></table></figure>
<h3 id="e-g-resize-jpg-in-current-file"><a href="#e-g-resize-jpg-in-current-file" class="headerlink" title="e.g, resize jpg in current file"></a>e.g, resize jpg in current file</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `ls *.jpg`; <span class="keyword">do</span></span><br><span class="line">	convert <span class="variable">$file</span> -resize 256x160! -quality 30 <span class="variable">$file</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Markdown Note]]></title>
      <url>http://idler1229.github.io/2016/05/31/Writer/Markdown/Markdown-Note/</url>
      <content type="html"><![CDATA[<h2 id="Some-Markdown-Syntax"><a href="#Some-Markdown-Syntax" class="headerlink" title="Some Markdown Syntax"></a>Some Markdown Syntax</h2><h3 id="Common-Syntax"><a href="#Common-Syntax" class="headerlink" title="Common Syntax"></a>Common Syntax</h3><h4 id="Escape"><a href="#Escape" class="headerlink" title="Escape"></a>Escape</h4><p>These characters cannot be directly printed. Must prefixed with <code>\</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">\</span><br><span class="line">`</span><br><span class="line">*</span><br><span class="line">_</span><br><span class="line">{}</span><br><span class="line">[]</span><br><span class="line">()</span><br><span class="line">#</span><br><span class="line">+</span><br><span class="line">-</span><br><span class="line">.</span><br><span class="line">!</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h5 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*IDLER*</span><br><span class="line">\*IDLER\*</span><br></pre></td></tr></table></figure>
<h5 id="e-g"><a href="#e-g" class="headerlink" title="e.g."></a>e.g.</h5><p><em>IDLER</em><br>*IDLER*</p>
<h3 id="Extension-Syntax"><a href="#Extension-Syntax" class="headerlink" title="Extension Syntax"></a>Extension Syntax</h3><h4 id="Strikethrough"><a href="#Strikethrough" class="headerlink" title="Strikethrough"></a>Strikethrough</h4><h5 id="Syntax-1"><a href="#Syntax-1" class="headerlink" title="Syntax"></a>Syntax</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~Strikethrough~~</span><br></pre></td></tr></table></figure>
<h5 id="e-g-1"><a href="#e-g-1" class="headerlink" title="e.g."></a>e.g.</h5><p><del>Strikethrough</del></p>
<h4 id="Code-Highlights"><a href="#Code-Highlights" class="headerlink" title="Code Highlights"></a>Code Highlights</h4><h5 id="Syntax-2"><a href="#Syntax-2" class="headerlink" title="Syntax"></a>Syntax</h5><p>``` [c/c++/sh/js &#x2026;]<br>    <em>CODE</em><br>``` </p>
<h5 id="e-g-2"><a href="#e-g-2" class="headerlink" title="e.g."></a>e.g.</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class Markdown {</span><br><span class="line">	long long version;</span><br><span class="line">	....</span><br><span class="line">	....</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="TaskList"><a href="#TaskList" class="headerlink" title="TaskList"></a>TaskList</h4><h5 id="Syntax-3"><a href="#Syntax-3" class="headerlink" title="Syntax"></a>Syntax</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>[x] Code</span><br><span class="line"><span class="code">	- [x] C&#x8279; </span></span><br><span class="line"><span class="bullet">- </span>[ ] Sleep</span><br></pre></td></tr></table></figure>
<h5 id="e-g-3"><a href="#e-g-3" class="headerlink" title="e.g."></a>e.g.</h5><ul>
<li>[x] Code<ul>
<li>[x] C&#x8279; <blockquote>
<p>(Sigh&#x2026; Hexo can not parse indent tasklist)</p>
</blockquote>
</li>
</ul>
</li>
<li>[ ] Sleep</li>
</ul>
<h4 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h4><h5 id="Syntax-4"><a href="#Syntax-4" class="headerlink" title="Syntax"></a>Syntax</h5><p>Split by <code>|</code> and <code>-</code><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">book | id </span><br><span class="line">-----| --- </span><br><span class="line">SICP | 1123 </span><br><span class="line">CLRS | 12312</span><br></pre></td></tr></table></figure></p>
<h5 id="e-g-4"><a href="#e-g-4" class="headerlink" title="e.g."></a>e.g.</h5><table>
<thead>
<tr>
<th>book</th>
<th>id </th>
</tr>
</thead>
<tbody>
<tr>
<td> SICP</td>
<td>1123 </td>
</tr>
<tr>
<td> CLRS</td>
<td>12312 </td>
</tr>
</tbody>
</table>
<h5 id="Syntax-5"><a href="#Syntax-5" class="headerlink" title="Syntax"></a>Syntax</h5><p>For clarity, prefer to reverse blank with two sides of <code>|</code> and <code>-</code>.<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| book | id |</span><br><span class="line">| ---- | --- |</span><br><span class="line">| SICP | 1123 |</span><br><span class="line">| CLRS | 12312 |</span><br></pre></td></tr></table></figure></p>
<h5 id="e-g-5"><a href="#e-g-5" class="headerlink" title="e.g."></a>e.g.</h5><table>
<thead>
<tr>
<th>book</th>
<th>id</th>
</tr>
</thead>
<tbody>
<tr>
<td>SICP</td>
<td>1123</td>
</tr>
<tr>
<td>CLRS</td>
<td>12312</td>
</tr>
</tbody>
</table>
<h5 id="Syntax-6"><a href="#Syntax-6" class="headerlink" title="Syntax"></a>Syntax</h5><ul>
<li><code>:---</code> align left</li>
<li><code>:--:</code> align center</li>
<li><code>---:</code> align right</li>
</ul>
<p>Without align mark <code>:---</code>, <code>:--:</code> and <code>---:</code>, the default configuration is that,  head cells with <code>:--:</code> and table cells with <code>:---</code>.</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| left | center | right |</span><br><span class="line">| :--- | :----: | ----: |</span><br><span class="line">| aaaa | bbbbbb | ccccc |</span><br><span class="line">| a    | b      | c     |</span><br></pre></td></tr></table></figure>
<h5 id="e-g-6"><a href="#e-g-6" class="headerlink" title="e.g."></a>e.g.</h5><table>
<thead>
<tr>
<th style="text-align:left">left</th>
<th style="text-align:center">center</th>
<th style="text-align:right">right</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">aaaa</td>
<td style="text-align:center">bbbbbb</td>
<td style="text-align:right">ccccc</td>
</tr>
<tr>
<td style="text-align:left">a</td>
<td style="text-align:center">b</td>
<td style="text-align:right">c</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AWK NOTE]]></title>
      <url>http://idler1229.github.io/2016/05/31/Programming/AWK/awk/</url>
      <content type="html"><![CDATA[<h2 id="AWK-SUMMARY"><a href="#AWK-SUMMARY" class="headerlink" title="AWK SUMMARY"></a>AWK SUMMARY</h2><p>Reading Notes from classic book &#x2013; <a href="https://book.douban.com/subject/1876898/" target="_blank" rel="external">The AWK Programming Language</a></p>
<blockquote>
<p><img src="https://img3.doubanio.com/mpic/s3252374.jpg" alt="PIC"></p>
</blockquote>
<a id="more"></a>
<h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk [-Fs] <span class="string">&apos;program&apos;</span> optional list of filenames</span><br><span class="line">awk [-Fs] <span class="_">-f</span> progfile optional list of filenames</span><br></pre></td></tr></table></figure>
<p>&#x53C2;&#x6570; -Fs &#x628A;&#x5B57;&#x6BB5;&#x5206;&#x9694;&#x7B26; FS &#x8BBE;&#x7F6E;&#x6210; s, &#x5982;&#x679C;&#x6CA1;&#x6709;&#x63D0;&#x4F9B;&#x6587;&#x4EF6;&#x540D;, awk &#x5C31;&#x4ECE;&#x6807;&#x51C6;&#x8F93;&#x5165;&#x8BFB;&#x53D6;&#x6570;&#x636E;. &#x6587;&#x4EF6;&#x540D;&#x7684;&#x5F62;&#x5F0F;<br>&#x53EF;&#x4EE5;&#x662F; var=text, &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;, &#x76F8;&#x5F53;&#x4E8E;&#x628A; text &#x8D4B;&#x503C;&#x7ED9;&#x53D8;&#x91CF; var, &#x5F53;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x88AB;&#x5F53;&#x4F5C;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x800C;&#x88AB;&#x8BBF;&#x95EE;<br>&#x65F6;, &#x6267;&#x884C;&#x8D4B;&#x503C;&#x64CD;&#x4F5C;.</p>
<h3 id="Program-Structure"><a href="#Program-Structure" class="headerlink" title="Program Structure"></a>Program Structure</h3><p>&#x4E00;&#x4E2A; awk &#x7A0B;&#x5E8F;&#x7531;&#x4E00;&#x7CFB;&#x5217;&#x7684; &#x6A21;&#x5F0F;&#x2013;&#x52A8;&#x4F5C; &#x8BED;&#x53E5;&#x548C;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x7EC4;&#x6210;. &#x4E00;&#x4E2A; &#x6A21;&#x5F0F;&#x2013;&#x52A8;&#x4F5C; &#x8BED;&#x53E5;&#x5177;&#x6709;&#x5F62;&#x5F0F;:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pattern { action }</span><br></pre></td></tr></table></figure></p>
<p>&#x5982;&#x679C;&#x67D0;&#x4E2A;&#x52A8;&#x4F5C;&#x7701;&#x7565;&#x4E86;&#x6A21;&#x5F0F;, &#x5219;&#x9ED8;&#x8BA4;&#x5339;&#x914D;&#x6240;&#x6709;&#x8F93;&#x5165;&#x884C;; &#x5982;&#x679C;&#x67D0;&#x4E2A;&#x6A21;&#x5F0F;&#x7701;&#x7565;&#x4E86;&#x52A8;&#x4F5C;, &#x5219;&#x9ED8;&#x8BA4;&#x6253;&#x5370;&#x5339;&#x914D;&#x884C;. &#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x5177;&#x6709;&#x5F62;&#x5F0F;:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> name(parameter-list) { statement }</span><br></pre></td></tr></table></figure></p>
<p>&#x6A21;&#x5F0F;&#x2013;&#x52A8;&#x4F5C; &#x8BED;&#x53E5;&#x548C;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x7531;&#x6362;&#x884C;&#x7B26;&#x6216;&#x5206;&#x53F7;&#x5206;&#x9694;, &#x5E76;&#x4E14;&#x8FD9;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x53EF;&#x4EE5;&#x6DF7;&#x5408;&#x4F7F;&#x7528;.</p>
<h4 id="Pattern"><a href="#Pattern" class="headerlink" title="Pattern"></a>Pattern</h4><ul>
<li>BEGIN</li>
<li>END</li>
<li>expression</li>
<li>/regular expression/</li>
<li>pattern &amp;&amp; pattern</li>
<li>pattern || pattern</li>
<li>!pattern</li>
<li>(pattern)</li>
</ul>
<p>&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6A21;&#x5F0F;&#x662F;&#x8303;&#x56F4;&#x6A21;&#x5F0F;, &#x5B83;&#x4E0D;&#x80FD;&#x4F5C;&#x4E3A;&#x5176;&#x4ED6;&#x6A21;&#x5F0F;&#x7684;&#x7EC4;&#x6210;&#x90E8;&#x5206;. &#x7C7B;&#x4F3C;&#x5730;, BEGIN &#x548C; END &#x4E5F;&#x4E0D;&#x80FD;&#x548C;&#x5176;&#x4ED6;<br>&#x6A21;&#x5F0F;&#x7ED3;&#x5408;.</p>
<h4 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h4><ul>
<li>break</li>
<li>continue</li>
<li>delete array-element</li>
<li>do statement while (expression)</li>
<li>exit[expression]</li>
<li>expression</li>
<li>if (expression) statement [else statement]</li>
<li>input-output statement</li>
<li>for (expression; expression ; expression) statement</li>
<li>for (variable in array) statement</li>
<li>next</li>
<li>return [expression]</li>
<li>while (expression) statement</li>
<li>{ statement }</li>
</ul>
<p>&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x5206;&#x53F7;&#x8868;&#x793A;&#x7A7A;&#x8BED;&#x53E5;. &#x5728;&#x4E00;&#x4E2A; if-else &#x8BED;&#x53E5;&#x4E2D;, &#x5982;&#x679C;&#x7B2C;&#x4E00;&#x4E2A; statement &#x548C; else &#x51FA;&#x73B0;&#x5728;&#x540C;&#x4E00;&#x884C;,<br>&#x90A3;&#x4E48;&#x5B83;&#x5FC5;&#x987B;&#x4EE5;&#x5206;&#x53F7;&#x7ED3;&#x5C3E;, &#x6216;&#x8005;&#x7528;&#x82B1;&#x62EC;&#x53F7;&#x5305;&#x56F4;&#x8D77;&#x6765;. &#x7C7B;&#x4F3C;&#x5730;, &#x5728; do &#x8BED;&#x53E5;&#x4E2D;, &#x5982;&#x679C; statement &#x548C; while &#x51FA;&#x73B0;<br>&#x5728;&#x540C;&#x4E00;&#x884C;, &#x90A3;&#x4E48;&#x5B83;&#x5FC5;&#x987B;&#x4EE5;&#x5206;&#x53F7;&#x7ED3;&#x5C3E;, &#x6216;&#x8005;&#x7528;&#x82B1;&#x62EC;&#x53F7;&#x5305;&#x56F4;&#x8D77;&#x6765;.</p>
<h4 id="Format"><a href="#Format" class="headerlink" title="Format"></a>Format</h4><p>&#x8BED;&#x53E5;&#x901A;&#x8FC7;&#x6362;&#x884C;&#x7B26;&#x6216; (&#x548C;) &#x5206;&#x53F7;&#x9694;&#x5F00;. &#x7A7A;&#x884C;&#x53EF;&#x4EE5;&#x51FA;&#x73B0;&#x5728;&#x4EFB;&#x4F55;&#x8BED;&#x53E5;, &#x6A21;&#x5F0F;&#x2013;&#x52A8;&#x4F5C; &#x8BED;&#x53E5;, &#x6216;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x7684;&#x524D;&#x9762;<br>&#x6216;&#x540E;&#x9762;. &#x7A7A;&#x683C;&#x4E0E;&#x5236;&#x8868;&#x7B26;&#x53EF;&#x4EE5;&#x63D2;&#x5165;&#x5230;&#x8FD0;&#x7B97;&#x7B26;&#x6216;&#x64CD;&#x4F5C;&#x6570;&#x7684;&#x5468;&#x56F4;. &#x4E00;&#x6761;&#x957F;&#x8BED;&#x53E5;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x53CD;&#x659C;&#x6760;&#x5EF6;&#x7EED;&#x5230;&#x4E0B;&#x4E00;&#x884C;.<br>&#x53E6;&#x5916;, &#x5982;&#x679C;&#x4E00;&#x6761;&#x8BED;&#x53E5;&#x5728;&#x9017;&#x53F7;, &#x5DE6;&#x82B1;&#x62EC;&#x53F7;, &amp;&amp;, ||, do, else, if &#x6216; for &#x7684;&#x53F3;&#x62EC;&#x53F7;&#x540E;&#x65AD;&#x884C;, &#x5219;&#x4E0D;&#x9700;&#x8981;&#x53CD;&#x659C;&#x6760;.<br>&#x7531; # &#x5F00;&#x59CB;&#x7684;&#x6CE8;&#x91CA;&#x53EF;&#x4EE5;&#x51FA;&#x73B0;&#x5728;&#x4EFB;&#x610F;&#x4E00;&#x884C;&#x7684;&#x672B;&#x5C3E;.</p>
<h4 id="Input-Output"><a href="#Input-Output" class="headerlink" title="Input/Output"></a>Input/Output</h4><table>
<thead>
<tr>
<th style="text-align:center">I/O Functions</th>
<th style="text-align:right">Interpretation</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">close(expr)</td>
<td style="text-align:right">&#x5173;&#x95ED;&#x7531; expr &#x6307;&#x793A;&#x7684;&#x6587;&#x4EF6;&#x6216;&#x7BA1;&#x9053;</td>
</tr>
<tr>
<td style="text-align:center">getline</td>
<td style="text-align:right">&#x628A; $0 &#x8BBE;&#x7F6E;&#x6210;&#x4E0B;&#x4E00;&#x6761;&#x8BB0;&#x5F55;; &#x540C;&#x65F6;&#x8BBE;&#x7F6E; NF, NR, FNR</td>
</tr>
<tr>
<td style="text-align:center">getline &lt;file</td>
<td style="text-align:right">&#x628A; $0 &#x8BBE;&#x7F6E;&#x6210;&#x6587;&#x4EF6; file &#x7684;&#x4E0B;&#x4E00;&#x6761;&#x8BB0;&#x5F55;; &#x540C;&#x65F6;&#x8BBE;&#x7F6E; NF</td>
</tr>
<tr>
<td style="text-align:center">getline var</td>
<td style="text-align:right">&#x628A; var &#x8BBE;&#x7F6E;&#x6210;&#x4E0B;&#x4E00;&#x6761;&#x8BB0;&#x5F55;; &#x540C;&#x65F6;&#x8BBE;&#x7F6E; NR, FNR</td>
</tr>
<tr>
<td style="text-align:center">getline var &lt;file</td>
<td style="text-align:right">&#x628A; var &#x8BBE;&#x7F6E;&#x6210;&#x6587;&#x4EF6; file &#x7684;&#x4E0B;&#x4E00;&#x6761;&#x8BB0;&#x5F55;.</td>
</tr>
<tr>
<td style="text-align:center">print</td>
<td style="text-align:right">&#x6253;&#x5370;&#x5F53;&#x524D;&#x8BB0;&#x5F55;</td>
</tr>
<tr>
<td style="text-align:center">print expr-list</td>
<td style="text-align:right">&#x6253;&#x5370; expr-list &#x6240;&#x8868;&#x793A;&#x7684;&#x8868;&#x8FBE;&#x5F0F;</td>
</tr>
<tr>
<td style="text-align:center">print expr-list &gt;file</td>
<td style="text-align:right">&#x628A;&#x8868;&#x8FBE;&#x5F0F;&#x8F93;&#x51FA;&#x5230;&#x6587;&#x4EF6; file &#x4E2D;</td>
</tr>
<tr>
<td style="text-align:center">printf fmt, expr-list</td>
<td style="text-align:right">&#x683C;&#x5F0F;&#x5316;&#x5E76;&#x8F93;&#x51FA;</td>
</tr>
<tr>
<td style="text-align:center">printf fmt, expr-list &gt; file</td>
<td style="text-align:right">&#x683C;&#x5F0F;&#x5316;&#x5E76;&#x8F93;&#x51FA;&#x5230;&#x6587;&#x4EF6; file &#x4E2D;</td>
</tr>
<tr>
<td style="text-align:center">system(cmd-line)</td>
<td style="text-align:right">&#x6267;&#x884C;&#x547D;&#x4EE4; cmd-line, &#x8FD4;&#x56DE;&#x547D;&#x4EE4;&#x7684;&#x9000;&#x51FA;&#x72B6;&#x6001;</td>
</tr>
</tbody>
</table>
<p>print &#x540E;&#x9762;&#x7684; expr-list, &#x4EE5;&#x53CA; printf &#x540E;&#x9762;&#x7684; fmt, expr-list &#x53EF;&#x4EE5;&#x7528;&#x62EC;&#x53F7;&#x62EC;&#x8D77;&#x6765;. &#x5728; print &#x548C;<br>printf &#x4E2D;, &gt;&gt;file &#x8868;&#x793A;&#x628A;&#x8F93;&#x51FA;&#x8FFD;&#x52A0;&#x5230;&#x6587;&#x4EF6; file &#x7684;&#x672B;&#x5C3E;, | command &#x8868;&#x793A;&#x628A;&#x8F93;&#x51FA;&#x5199;&#x5230;&#x4E00;&#x4E2A;&#x7BA1;&#x9053;&#x4E2D;. &#x7C7B;<br>&#x4F3C;&#x7684;, command | getline &#x8868;&#x793A;&#x628A;&#x547D;&#x4EE4; command &#x7684;&#x8F93;&#x51FA;&#x4EE5;&#x7BA1;&#x9053;&#x7684;&#x65B9;&#x5F0F;&#x8F93;&#x9001;&#x7ED9; getline. &#x51FD;&#x6570;<br>getline &#x5728;&#x9047;&#x5230;&#x6587;&#x4EF6;&#x672B;&#x5C3E;&#x65F6;&#x8FD4;&#x56DE; 0, &#x51FA;&#x9519;&#x65F6;&#x8FD4;&#x56DE; -1.</p>
<h3 id="Build-in"><a href="#Build-in" class="headerlink" title="Build-in"></a>Build-in</h3><h4 id="variables"><a href="#variables" class="headerlink" title="variables"></a>variables</h4><table>
<thead>
<tr>
<th>Variables</th>
<th>Interpretation</th>
</tr>
</thead>
<tbody>
<tr>
<td>ARGC</td>
<td>&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x7684;&#x4E2A;&#x6570;</td>
</tr>
<tr>
<td>ARGV</td>
<td>&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x7EC4;&#x6210;&#x7684;&#x6570;&#x7EC4; (ARGV[0..ARGC-1])</td>
</tr>
<tr>
<td>FILENAME</td>
<td>&#x5F53;&#x524D;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x540D;</td>
</tr>
<tr>
<td>FNR</td>
<td>&#x5F53;&#x524D;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5DF2;&#x8BFB;&#x53D6;&#x7684;&#x8BB0;&#x5F55;&#x4E2A;&#x6570;</td>
</tr>
<tr>
<td>FS</td>
<td>&#x8F93;&#x5165;&#x6570;&#x636E;&#x7684;&#x5B57;&#x6BB5;&#x5206;&#x9694;&#x7B26; (&#x9ED8;&#x8BA4;&#x662F;&#x7A7A;&#x683C;)</td>
</tr>
<tr>
<td>NF</td>
<td>&#x5F53;&#x524D;&#x8F93;&#x5165;&#x8BB0;&#x5F55;&#x7684;&#x5B57;&#x6BB5;&#x4E2A;&#x6570;</td>
</tr>
<tr>
<td>NR</td>
<td>&#x4ECE;&#x7A0B;&#x5E8F;&#x5F00;&#x59CB;&#x5230;&#x73B0;&#x5728;, &#x8BFB;&#x53D6;&#x5230;&#x7684;&#x8BB0;&#x5F55;&#x4E2A;&#x6570;</td>
</tr>
<tr>
<td>OFMT</td>
<td>&#x6570;&#x5B57;&#x7684;&#x8F93;&#x51FA;&#x683C;&#x5F0F; (&#x9ED8;&#x8BA4;&#x662F; &#x201C;%.6g&#x201D;)</td>
</tr>
<tr>
<td>OFS</td>
<td>&#x8F93;&#x51FA;&#x5B57;&#x6BB5;&#x5206;&#x9694;&#x7B26; (&#x9ED8;&#x8BA4;&#x662F;&#x7A7A;&#x683C;)</td>
</tr>
<tr>
<td>ORS</td>
<td>&#x8F93;&#x51FA;&#x8BB0;&#x5F55;&#x5206;&#x9694;&#x7B26; (&#x9ED8;&#x8BA4;&#x662F;&#x6362;&#x884C;&#x7B26;)</td>
</tr>
<tr>
<td>RLENGTH</td>
<td>&#x88AB;&#x51FD;&#x6570; match &#x4E2D;&#x7684;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;</td>
</tr>
<tr>
<td>RS</td>
<td>&#x8F93;&#x5165;&#x6570;&#x636E;&#x7684;&#x8BB0;&#x5F55;&#x5206;&#x9694;&#x7B26; (&#x9ED8;&#x8BA4;&#x662F;&#x6362;&#x884C;&#x7B26;)</td>
</tr>
<tr>
<td>RSTART</td>
<td>&#x88AB;&#x51FD;&#x6570; match &#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5728;&#x539F;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E;</td>
</tr>
<tr>
<td>SUBSEP</td>
<td>&#x5177;&#x6709;&#x5F62;&#x5F0F; [i,j,&#x2026;] &#x7684;&#x6570;&#x7EC4;&#x4E0B;&#x6807;&#x7684;&#x5206;&#x9694;&#x7B26; (&#x9ED8;&#x8BA4;&#x662F; &#x201C;\034&#x201D;)</td>
</tr>
</tbody>
</table>
<p>ARGC &#x548C; ARGV &#x5305;&#x542B;&#x88AB;&#x6267;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#x7684;&#x540D;&#x5B57; (&#x901A;&#x5E38;&#x662F; awk), &#x4F46;&#x662F;&#x4E0D;&#x5305;&#x62EC;&#x51FA;&#x73B0;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x7684; awk &#x7A0B;&#x5E8F;&#x6216;&#x9009;<br>&#x9879;. RLENGTH &#x540C;&#x65F6;&#x4E5F;&#x662F; match &#x7684;&#x8FD4;&#x56DE;&#x503C;.</p>
<h4 id="String-Functions"><a href="#String-Functions" class="headerlink" title="String Functions"></a>String Functions</h4><h4 id="Arithmetic-Functions"><a href="#Arithmetic-Functions" class="headerlink" title="Arithmetic Functions"></a>Arithmetic Functions</h4><table>
<thead>
<tr>
<th>Functions</th>
<th>Interpretation</th>
</tr>
</thead>
<tbody>
<tr>
<td>atan2(y,cos(x)</td>
<td>y/x &#x7684;&#x53CD;&#x6B63;&#x5207;&#x503C;, &#x5F27;&#x5EA6;&#x5236;, &#x5B9A;&#x4E49;&#x57DF;&#x4ECE; &#x2212;&#x3C0; &#x5230; &#x3C0;</td>
</tr>
<tr>
<td>exp(x)</td>
<td>&#x4F59;&#x5F26; (&#x5F27;&#x5EA6;&#x5236;)</td>
</tr>
<tr>
<td>int(x)</td>
<td>&#x6307;&#x6570; ex</td>
</tr>
<tr>
<td>log(x)</td>
<td>&#x53D6;&#x6574;</td>
</tr>
<tr>
<td>rand()</td>
<td>&#x81EA;&#x7136;&#x5BF9;&#x6570;</td>
</tr>
<tr>
<td>sin(x)</td>
<td>&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x4F2A;&#x968F;&#x673A;&#x6570; r (0 &#x2A7D; r &lt; 1 )</td>
</tr>
<tr>
<td>x)</td>
<td>&#x6B63;&#x5F26; (&#x5F27;&#x5EA6;&#x5236;)</td>
</tr>
<tr>
<td>sqrt(x)</td>
<td>&#x5E73;&#x65B9;&#x6839;</td>
</tr>
<tr>
<td>srand(x)</td>
<td>&#x8BBE;&#x7F6E;&#x968F;&#x673A;&#x6570;&#x79CD;&#x5B50;, &#x5982;&#x679C;&#x7701;&#x7565; x, &#x5219;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x5F53;&#x5929;&#x7684;&#x65F6;&#x95F4;</td>
</tr>
</tbody>
</table>
<h3 id="Regular-Expressions"><a href="#Regular-Expressions" class="headerlink" title="Regular Expressions"></a>Regular Expressions</h3><p>&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x5143;&#x5B57;&#x7B26;&#x5305;&#x62EC;: \ ^ $ . [ ] | ( ) * + ?<br>&#x4E0B;&#x9762;&#x7684;&#x8868;&#x683C;&#x603B;&#x7ED3;&#x4E86;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x53CA;&#x5176;&#x6240;&#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;:</p>
<table>
<thead>
<tr>
<th>Regex</th>
<th>Interpretation</th>
</tr>
</thead>
<tbody>
<tr>
<td>c</td>
<td>&#x5339;&#x914D;&#x4E00;&#x4E2A;&#x975E;&#x5143;&#x5B57;&#x7B26; c</td>
</tr>
<tr>
<td>\c</td>
<td>&#x5339;&#x914D;&#x4E00;&#x4E2A;&#x8F6C;&#x4E49;&#x5E8F;&#x5217;, &#x6216;&#x4E00;&#x4E2A;&#x5B57;&#x9762;&#x4E0A;&#x7684;&#x5B57;&#x7B26; c</td>
</tr>
<tr>
<td>&#x2C6;</td>
<td>&#x5339;&#x914D;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5F00;&#x59CB;</td>
</tr>
<tr>
<td>$</td>
<td>&#x5339;&#x914D;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x7ED3;&#x675F;</td>
</tr>
<tr>
<td>.</td>
<td>&#x5339;&#x914D;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;</td>
</tr>
<tr>
<td>[&#x2C6;abc&#x2026;]</td>
<td>&#x5B57;&#x7B26;&#x96C6;&#x5408;: &#x5339;&#x914D; abc&#x2026; &#x4E2D;&#x7684;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;</td>
</tr>
<tr>
<td>r1 | r2</td>
<td>&#x9009;&#x62E9;: &#x5339;&#x914D;&#x4E00;&#x4E2A;&#x80FD;&#x88AB; r1 &#x6216; r2 &#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;</td>
</tr>
<tr>
<td>(r1 )(r2 )</td>
<td>&#x62FC;&#x63A5;: &#x5339;&#x914D;&#x5B57;&#x7B26;&#x4E32; xy, &#x5176;&#x4E2D; x &#x88AB; r1 &#x5339;&#x914D;, y &#x88AB; r2 &#x5339;&#x914D;</td>
</tr>
<tr>
<td>(r)*</td>
<td>&#x5339;&#x914D; 0 &#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x8FDE;&#x7EED;&#x51FA;&#x73B0;&#x7684;&#x88AB; r &#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;</td>
</tr>
<tr>
<td>(r)+</td>
<td>&#x5339;&#x914D; 1 &#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x8FDE;&#x7EED;&#x51FA;&#x73B0;&#x7684;&#x88AB; r &#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;</td>
</tr>
<tr>
<td>(r)?</td>
<td>&#x5339;&#x914D; 0 &#x4E2A;&#x6216; 1 &#x4E2A;&#x88AB; r &#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;</td>
</tr>
<tr>
<td>(r)</td>
<td>&#x7EC4;&#x5408;: &#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4E0E; r &#x6240;&#x5339;&#x914D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x76F8;&#x540C;</td>
</tr>
</tbody>
</table>
<h3 id="Escape-Sequences"><a href="#Escape-Sequences" class="headerlink" title="Escape Sequences"></a>Escape Sequences</h3><table>
<thead>
<tr>
<th>Escape</th>
<th>Interpretation</th>
</tr>
</thead>
<tbody>
<tr>
<td>\b</td>
<td>&#x9000;&#x683C;</td>
</tr>
<tr>
<td>\f</td>
<td>&#x6362;&#x9875;</td>
</tr>
<tr>
<td>\n</td>
<td>&#x6362;&#x884C;</td>
</tr>
<tr>
<td>\r</td>
<td>&#x56DE;&#x8F66;</td>
</tr>
<tr>
<td>\t</td>
<td>&#x5236;&#x8868;</td>
</tr>
<tr>
<td>\ddd</td>
<td>&#x516B;&#x8FDB;&#x5236;&#x6570;, ddd &#x662F; 1 &#x5230; 3 &#x4E2A;&#x6570;&#x5B57;, &#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x503C;&#x5728; 0 &#x5230; 7 &#x4E4B;&#x95F4;</td>
</tr>
<tr>
<td>\c</td>
<td>&#x5176;&#x4ED6;&#x5B57;&#x9762;&#x4E0A;&#x7684;&#x5B57;&#x7B26; c, &#x6BD4;&#x5982; \&#x201D; &#x8868;&#x793A; &#x201C;, \ &#x8868;&#x793A; \</td>
</tr>
</tbody>
</table>
<h3 id="Limits"><a href="#Limits" class="headerlink" title="Limits"></a>Limits</h3><ul>
<li>100 &#x4E2A;&#x5B57;&#x6BB5;</li>
<li>&#x6BCF;&#x6761;&#x8F93;&#x5165;&#x8BB0;&#x5F55; 3000 &#x4E2A;&#x5B57;&#x7B26;</li>
<li>&#x6BCF;&#x6761;&#x8F93;&#x51FA;&#x8BB0;&#x5F55; 3000 &#x4E2A;&#x5B57;&#x7B26;</li>
<li>&#x6BCF;&#x4E2A;&#x5B57;&#x6BB5; 1024 &#x4E2A;&#x5B57;&#x7B26;</li>
<li>&#x6BCF;&#x4E2A; printf &#x5B57;&#x7B26;&#x4E32; 3000 &#x4E2A;&#x5B57;&#x7B26;</li>
<li>&#x5B57;&#x9762;&#x5B57;&#x7B26;&#x4E32; 400 &#x4E2A;&#x5B57;&#x7B26;</li>
<li>&#x5B57;&#x7B26;&#x96C6;&#x5408; 400 &#x4E2A;&#x5B57;&#x7B26;</li>
<li>15 &#x4E2A;&#x6253;&#x5F00;&#x6587;&#x4EF6;, 1 &#x4E2A;&#x7BA1;&#x9053;</li>
<li>&#x53CC;&#x7CBE;&#x5EA6;&#x6D6E;&#x70B9;&#x6570;</li>
</ul>
<p>&#x6570;&#x503C;&#x7684;&#x9650;&#x5236;&#x4E0E;&#x672C;&#x5730;&#x7CFB;&#x7EDF;&#x6240;&#x80FD;&#x8868;&#x793A;&#x7684;&#x6570;&#x503C;&#x8303;&#x56F4;&#x6709;&#x5173;, &#x6BD4;&#x5982;&#x67D0;&#x4E2A;&#x673A;&#x5668;&#x6240;&#x80FD;&#x8868;&#x793A;&#x7684;&#x6570;&#x503C;&#x8303;&#x56F4;&#x662F; 10&#x2212;38 &#x5230; 1038 ,&#x8D85;&#x8FC7;&#x8FD9;&#x4E2A;&#x8303;&#x56F4;&#x7684;&#x6570;&#x503C;&#x53EA;&#x62E5;&#x6709;&#x5B57;&#x7B26;&#x4E32;&#x5F62;&#x5F0F;.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Idle-About]]></title>
      <url>http://idler1229.github.io/2016/04/30/Project/Crawl/</url>
      <content type="html"><![CDATA[<h2 id="Idle-About"><a href="#Idle-About" class="headerlink" title="Idle-About"></a>Idle-About</h2><p>Show books order by rank</p>
<h3 id="Project-on-Github"><a href="#Project-on-Github" class="headerlink" title="Project on Github"></a>Project on Github</h3><p><a href="https://github.com/IDLER1229/Crawl" target="_blank" rel="external">https://github.com/IDLER1229/Crawl</a></p>
<h3 id="DEVELOPER"><a href="#DEVELOPER" class="headerlink" title="DEVELOPER"></a>DEVELOPER</h3><p><img src="/2016/04/30/Project/Crawl/./IDLER.png" alt="pic"></p>
<h3 id="DEPENDENCY"><a href="#DEPENDENCY" class="headerlink" title="DEPENDENCY"></a>DEPENDENCY</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">libhtmlcxx-dev</span><br><span class="line">libboost-dev</span><br><span class="line">pandoc</span><br><span class="line">libopencv-dev</span><br></pre></td></tr></table></figure>
<h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[USAGE]</span><br><span class="line">	[-b browser] <span class="comment">#Browser you want to display result</span></span><br><span class="line">	[-k keyword] <span class="comment">#Field you intend to search</span></span><br><span class="line">	[-t number] <span class="comment">#TOP-K you wish to show</span></span><br><span class="line">	[-p percent] <span class="comment">#TOP k% you mean to show</span></span><br><span class="line">	[-n filename] <span class="comment">#File name you are desirous to output</span></span><br><span class="line">	[<span class="_">-a</span>] <span class="comment">#Display all book in this field</span></span><br><span class="line">	[-r] <span class="comment">#No matter cache exist or not, re-download pages</span></span><br><span class="line">	[-N] <span class="comment">#Don&apos;t output markdown file</span></span><br><span class="line">	[-D] <span class="comment">#Don&apos;t display html with browser</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="Default-Configuration"><a href="#Default-Configuration" class="headerlink" title="Default Configuration"></a>Default Configuration</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[CONFIG]</span><br><span class="line">	Browser: firefox</span><br><span class="line">	Keyword: C++</span><br><span class="line">	Output File: Booklist.html</span><br><span class="line">	Top-K: ALL</span><br><span class="line">	Percent: 100% </span><br><span class="line">	Reload: NO</span><br><span class="line">	Display: YES</span><br><span class="line">	Save Markdown: YES</span><br></pre></td></tr></table></figure>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><h4 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./Crawl -k &#x673A;&#x5668;&#x5B66;&#x4E60; -n &#x673A;&#x5668;&#x5B66;&#x4E60;</span><br></pre></td></tr></table></figure>
<h4 id="Reslut"><a href="#Reslut" class="headerlink" title="Reslut"></a>Reslut</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">----------------------------------------------------------------------</span><br><span class="line"> [Crawl] Developed By</span><br><span class="line">                                      E           I                   </span><br><span class="line">   ERIDLERIDLE IDLERIDLERI         IDLER      DLERIDL  IDLERIDLERID   </span><br><span class="line">  LERIDLERIDL RIDLER DLERID      ERIDLERI    ID ERIDL RIDLER DLERIDL  </span><br><span class="line"> DLE   LER   ERI LERI  ERIDL     ERI LER    RIDL  ID ERI  ERI   RIDL  </span><br><span class="line">      DLE   LER  LER     IDL    LER         RIDL     ER  LERI   RIDL  </span><br><span class="line">      DLE        LER     IDL   DLER         RIDLERI      LER   ERID   </span><br><span class="line">      DLE        LER     IDL   DLE           IDLER       LERIDLERI    </span><br><span class="line">     IDLE       DLER     IDL   DLE          RID          LERIDLE      </span><br><span class="line">     IDL        DLE     RID   IDLE         ERI          DLERIDLER     </span><br><span class="line">     IDL        DLE   LERI    IDL      RIDLERI    ID    DLE  DLER     </span><br><span class="line">  LERIDLERIDL  IDLERIDLER     IDLERIDLERI LERID ERID    DLE   LERI LE </span><br><span class="line">IDLERIDLERID  RIDLERIDL      RIDLERIDLERI LERIDLERI    IDL    LERIDLE </span><br><span class="line">                                                                      </span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">[USAGE]</span><br><span class="line">	[-b browser] <span class="comment">#Browser you want to display result</span></span><br><span class="line">	[-k keyword] <span class="comment">#Field you intend to search</span></span><br><span class="line">	[-t number] <span class="comment">#TOP-K you wish to show</span></span><br><span class="line">	[-p percent] <span class="comment">#TOP k% you mean to show</span></span><br><span class="line">	[-n filename] <span class="comment">#File name you are desirous to output</span></span><br><span class="line">	[<span class="_">-a</span>] <span class="comment">#Display all book in this field</span></span><br><span class="line">	[-r] <span class="comment">#No matter cache exist or not, re-download pages</span></span><br><span class="line">	[-N] <span class="comment">#Don&apos;t output markdown file</span></span><br><span class="line">	[-D] <span class="comment">#Don&apos;t display html with browser</span></span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">[CONFIG]</span><br><span class="line">	Browser: firefox</span><br><span class="line">	Keyword: &#x673A;&#x5668;&#x5B66;&#x4E60;</span><br><span class="line">	Output File: &#x673A;&#x5668;&#x5B66;&#x4E60;.html</span><br><span class="line">	Top-K: ALL</span><br><span class="line">	Percent: 100% </span><br><span class="line">	Reload: NO</span><br><span class="line">	Display: YES</span><br><span class="line">	Save Markdown: YES</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">[Show Configuration]   0.062ms</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">[Analysis Parameters]   0.07ms</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">[Download Htmls]   0.014ms</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">[Parse Htmls]   96.105ms</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">[Total Time]   100.089ms</span><br><span class="line">----------------------------------------------------------------------</span><br></pre></td></tr></table></figure>
<h4 id="Snapshot"><a href="#Snapshot" class="headerlink" title="Snapshot"></a>Snapshot</h4><p><img src="/2016/04/30/Project/Crawl/./EX.png" alt="pic"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[STL ALLOCATOR CONSTRCUT]]></title>
      <url>http://idler1229.github.io/2016/04/30/STL/STL-ALLOCATOR-CONSTRCUT/</url>
      <content type="html"><![CDATA[<h2 id="CONSTRCUT"><a href="#CONSTRCUT" class="headerlink" title="CONSTRCUT"></a>CONSTRCUT</h2><pre><code>In &lt;stl_construct.h&gt;
</code></pre><a id="more"></a>
<h3 id="Construct"><a href="#Construct" class="headerlink" title="Construct"></a>Construct</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _T1, <span class="keyword">class</span> _T2&gt;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> _Construct(_T1* __p, <span class="keyword">const</span> _T2&amp; __value) {</span><br><span class="line">  new ((void*) __p) _T1(__value);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _T1&gt;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> _Construct(_T1* __p) {</span><br><span class="line">  new ((void*) __p) _T1();</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[STL ALLOCATOR]]></title>
      <url>http://idler1229.github.io/2016/04/30/STL/STL-ALLOCATOR/</url>
      <content type="html"><![CDATA[<h2 id="Allocator"><a href="#Allocator" class="headerlink" title="Allocator"></a>Allocator</h2><pre><code>In &lt;stl_alloc.h&gt;
</code></pre><a id="more"></a>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[STL ALGO FUNCTOR]]></title>
      <url>http://idler1229.github.io/2016/04/29/STL/STL-ALGO-FUNCTOR/</url>
      <content type="html"><![CDATA[<h2 id="Functors"><a href="#Functors" class="headerlink" title="Functors"></a>Functors</h2><pre><code>In &lt;stl_function.h&gt;
</code></pre><p>SGI STL has defined unary/binary operation templete with traits.<br><a id="more"></a></p>
<h3 id="Unary-Function"><a href="#Unary-Function" class="headerlink" title="Unary Function"></a>Unary Function</h3><h4 id="templates"><a href="#templates" class="headerlink" title="templates"></a>templates</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Arg, <span class="keyword">class</span> _Result&gt;</span><br><span class="line"><span class="keyword">struct</span> unary_function {</span><br><span class="line">  <span class="keyword">typedef</span> _Arg argument_type;</span><br><span class="line">  <span class="keyword">typedef</span> _Result result_type;</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="Identity-Select"><a href="#Identity-Select" class="headerlink" title="Identity, Select"></a>Identity, Select</h4><p>identity is an extensions: it is not part of the standard.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> _Identity : <span class="keyword">public</span> unary_function&lt;_Tp,_Tp&gt; {</span><br><span class="line">  <span class="keyword">const</span> _<span class="function">Tp&amp; <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x)</span> <span class="keyword">const</span> </span>{ return __x; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt; <span class="keyword">struct</span> identity : <span class="keyword">public</span> _Identity&lt;_Tp&gt; {};</span><br><span class="line"></span><br><span class="line"><span class="comment">// select1st and select2nd are extensions: they are not part of the standard.</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Pair&gt;</span><br><span class="line"><span class="keyword">struct</span> _Select1st : <span class="keyword">public</span> unary_function&lt;_Pair, <span class="keyword">typename</span> _Pair::first_type&gt; {</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">typename</span> _Pair::<span class="function">first_type&amp; <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Pair&amp; __x)</span> <span class="keyword">const</span> </span>{</span><br><span class="line">    return __x.first;</span><br><span class="line">  }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Pair&gt;</span><br><span class="line"><span class="keyword">struct</span> _Select2nd : <span class="keyword">public</span> unary_function&lt;_Pair, <span class="keyword">typename</span> _Pair::second_type&gt;</span><br><span class="line">{</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">typename</span> _Pair::<span class="function">second_type&amp; <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Pair&amp; __x)</span> <span class="keyword">const</span> </span>{</span><br><span class="line">    return __x.second;</span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p>
<h3 id="Binary-Function"><a href="#Binary-Function" class="headerlink" title="Binary Function"></a>Binary Function</h3><h4 id="templates-1"><a href="#templates-1" class="headerlink" title="templates"></a>templates</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Arg1, <span class="keyword">class</span> _Arg2, <span class="keyword">class</span> _Result&gt;</span><br><span class="line"><span class="keyword">struct</span> binary_function {</span><br><span class="line">  <span class="keyword">typedef</span> _Arg1 first_argument_type;</span><br><span class="line">  <span class="keyword">typedef</span> _Arg2 second_argument_type;</span><br><span class="line">  <span class="keyword">typedef</span> _Result result_type;</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="Arithmetic"><a href="#Arithmetic" class="headerlink" title="Arithmetic"></a>Arithmetic</h4><p>plus, minus, multipies, divides, modulus, negate<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> plus : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,_Tp&gt; {</span><br><span class="line">  _<span class="function">Tp <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x + __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> minus : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,_Tp&gt; {</span><br><span class="line">  _<span class="function">Tp <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x - __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> multiplies : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,_Tp&gt; {</span><br><span class="line">  _<span class="function">Tp <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x * __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> divides : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,_Tp&gt; {</span><br><span class="line">  _<span class="function">Tp <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x / __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> modulus : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,_Tp&gt; </span><br><span class="line">{</span><br><span class="line">  _<span class="function">Tp <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x % __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> negate : <span class="keyword">public</span> unary_function&lt;_Tp,_Tp&gt; </span><br><span class="line">{</span><br><span class="line">  _<span class="function">Tp <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x)</span> <span class="keyword">const</span> </span>{ return -__x; }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p>
<h4 id="Relational"><a href="#Relational" class="headerlink" title="Relational"></a>Relational</h4><p>equal, not equal, greater, greater equal, less, less equal<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> equal_to : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,<span class="keyword">bool</span>&gt; </span><br><span class="line">{</span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x == __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> not_equal_to : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,<span class="keyword">bool</span>&gt; </span><br><span class="line">{</span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x != __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> greater : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,<span class="keyword">bool</span>&gt; </span><br><span class="line">{</span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x &gt; __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> less : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,<span class="keyword">bool</span>&gt; </span><br><span class="line">{</span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x &lt; __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> greater_equal : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,<span class="keyword">bool</span>&gt;</span><br><span class="line">{</span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x &gt;= __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> less_equal : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,<span class="keyword">bool</span>&gt; </span><br><span class="line">{</span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x &lt;= __y; }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p>
<h4 id="Logical"><a href="#Logical" class="headerlink" title="Logical"></a>Logical</h4><p>and, or, not. not is unary function.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> logical_and : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,<span class="keyword">bool</span>&gt;</span><br><span class="line">{</span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x &amp;&amp; __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> logical_or : <span class="keyword">public</span> binary_function&lt;_Tp,_Tp,<span class="keyword">bool</span>&gt;</span><br><span class="line">{</span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x, <span class="keyword">const</span> _Tp&amp; __y)</span> <span class="keyword">const</span> </span>{ return __x || __y; }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">struct</span> logical_not : <span class="keyword">public</span> unary_function&lt;_Tp,<span class="keyword">bool</span>&gt;</span><br><span class="line">{</span><br><span class="line">  <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __x)</span> <span class="keyword">const</span> </span>{ return !__x; }</span><br><span class="line">};</span><br></pre></td></tr></table></figure></p>
<h3 id="Additional"><a href="#Additional" class="headerlink" title="Additional"></a>Additional</h3><h4 id="Identity-Element"><a href="#Identity-Element" class="headerlink" title="Identity Element"></a>Identity Element</h4><p>identity_element is not part of the C++ standard.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt; <span class="keyword">inline</span> _<span class="function">Tp <span class="title">identity_element</span><span class="params">(plus&lt;_Tp&gt;)</span> </span>{</span><br><span class="line">  return _Tp(<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt; <span class="keyword">inline</span> _<span class="function">Tp <span class="title">identity_element</span><span class="params">(multiplies&lt;_Tp&gt;)</span> </span>{</span><br><span class="line">  return _Tp(<span class="number">1</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Qt Creator Shotcuts]]></title>
      <url>http://idler1229.github.io/2016/04/29/Linux/Software/Qt-Creator-Shotcuts/</url>
      <content type="html"><![CDATA[<h2 id="Qt-Creator-Shotcuts"><a href="#Qt-Creator-Shotcuts" class="headerlink" title="Qt Creator Shotcuts"></a>Qt Creator Shotcuts</h2><p>Ctrl + Tab<br>Alt + Enter<br>Shift + F2<br><a id="more"></a></p>
<table>
<thead>
<tr>
<th style="text-align:center">No</th>
<th style="text-align:center">Shortcuts</th>
<th style="text-align:right">Interpretation</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">Esc</td>
<td style="text-align:right">&#x5207;&#x6362;&#x5230;&#x4EE3;&#x7801;&#x7F16;&#x8F91;&#x72B6;&#x6001;</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">F1</td>
<td style="text-align:right">&#x67E5;&#x770B;&#x5E2E;&#x52A9;&#xFF08;&#x9009;&#x4E2D;&#x67D0;&#x4E00;&#x7C7B;&#x6216;&#x51FD;&#x6570;&#xFF0C;&#x6309;&#x4E0B;F1&#xFF0C;&#x51FA;&#x73B0;&#x5E2E;&#x52A9;&#x6587;&#x6863;&#xFF09;</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">F2</td>
<td style="text-align:right">&#x5728;&#x5149;&#x6807;&#x9009;&#x4E2D;&#x5BF9;&#x8C61;&#x7684;&#x58F0;&#x660E;&#x548C;&#x5B9A;&#x4E49;&#x4E4B;&#x95F4;&#x5207;&#x6362;&#xFF08;&#x548C;Ctrl+&#x9F20;&#x6807;&#x5DE6;&#x952E;&#x4E00;&#x6837;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x9009;&#x4E2D;&#x67D0;&#x4E00;&#x7C7B;&#x6216;&#x51FD;&#x6570;&#xFF0C;&#x6309;&#x4E0B;F2&#xFF0C;&#x8FC5;&#x901F;&#x5B9A;&#x4F4D;&#x5230;&#x8BE5;&#x7C7B;&#x6216;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x7684;&#x5730;&#x65B9;&#x6216;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x5730;&#x65B9;&#xFF09;</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">F3</td>
<td style="text-align:right">&#x67E5;&#x627E;&#x4E0B;&#x4E00;&#x4E2A;</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">F4</td>
<td style="text-align:right">&#x5934;&#x6587;&#x4EF6;&#x548C;&#x6E90;&#x6587;&#x4EF6;&#x4E4B;&#x95F4;&#x5207;&#x6362;</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">F5</td>
<td style="text-align:right">&#x5F00;&#x59CB;&#x8C03;&#x8BD5;/&#x7EE7;&#x7EED;&#x6267;&#x884C;</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">F9</td>
<td style="text-align:right">&#x8BBE;&#x7F6E;&#x548C;&#x53D6;&#x6D88;&#x65AD;&#x70B9;</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">F10</td>
<td style="text-align:right">&#x5355;&#x6B65;&#x8DF3;&#x8FC7;</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">F11</td>
<td style="text-align:right">&#x5355;&#x6B65;&#x8FDB;&#x5165;</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center">Shift+F2</td>
<td style="text-align:right">&#x58F0;&#x660E;&#x548C;&#x5B9A;&#x4E49;&#x4E4B;&#x95F4;&#x5207;&#x6362;</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center">Shift+F3</td>
<td style="text-align:right">&#x67E5;&#x627E;&#x4E0A;&#x4E00;&#x4E2A;</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">Shift+F5</td>
<td style="text-align:right">&#x505C;&#x6B62;&#x8C03;&#x8BD5;</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td style="text-align:center">Shift+F11</td>
<td style="text-align:right">&#x5355;&#x6B65;&#x8DF3;&#x51FA;</td>
</tr>
<tr>
<td style="text-align:center">14</td>
<td style="text-align:center">Ctrl+0</td>
<td style="text-align:right">&#x7F16;&#x8F91;&#x754C;&#x9762;&#x6062;&#x590D;&#x9ED8;&#x8BA4;&#x5B57;&#x4F53;</td>
</tr>
<tr>
<td style="text-align:center">15</td>
<td style="text-align:center">Ctrl+1</td>
<td style="text-align:right">&#x6FC0;&#x6D3B;&#x6B22;&#x8FCE;&#x6A21;&#x5F0F;</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td style="text-align:center">Ctrl+2</td>
<td style="text-align:right">&#x6FC0;&#x6D3B;&#x7F16;&#x8F91;&#x6A21;&#x5F0F;</td>
</tr>
<tr>
<td style="text-align:center">17</td>
<td style="text-align:center">Ctrl+3</td>
<td style="text-align:right">&#x6FC0;&#x6D3B;&#x8C03;&#x8BD5;&#x6A21;&#x5F0F;</td>
</tr>
<tr>
<td style="text-align:center">18</td>
<td style="text-align:center">Ctrl+4</td>
<td style="text-align:right">&#x6FC0;&#x6D3B;&#x9879;&#x76EE;&#x6A21;&#x5F0F;</td>
</tr>
<tr>
<td style="text-align:center">19</td>
<td style="text-align:center">Ctrl+5</td>
<td style="text-align:right">&#x6FC0;&#x6D3B;&#x5E2E;&#x52A9;&#x6A21;&#x5F0F;</td>
</tr>
<tr>
<td style="text-align:center">20</td>
<td style="text-align:center">Ctrl+6</td>
<td style="text-align:right">&#x6FC0;&#x6D3B;&#x8F93;&#x51FA;&#x6A21;&#x5F0F;</td>
</tr>
<tr>
<td style="text-align:center">21</td>
<td style="text-align:center">Ctrl+B</td>
<td style="text-align:right">&#x7F16;&#x8BD1;&#x5DE5;&#x7A0B;</td>
</tr>
<tr>
<td style="text-align:center">22</td>
<td style="text-align:center">Ctrl+E&#x91CA;&#x653E;&#x540E;&#x6309;0</td>
<td style="text-align:right">&#x5220;&#x9664;&#x65B0;&#x5EFA;&#x7684;&#x5206;&#x680F;</td>
</tr>
<tr>
<td style="text-align:center">23</td>
<td style="text-align:center">Ctrl+E&#x91CA;&#x653E;&#x540E;&#x6309;1</td>
<td style="text-align:right">&#x5220;&#x9664;&#x6240;&#x6709;&#x5206;&#x680F;</td>
</tr>
<tr>
<td style="text-align:center">24</td>
<td style="text-align:center">Ctrl+E&#x91CA;&#x653E;&#x540E;&#x6309;2</td>
<td style="text-align:right">&#x4E0A;&#x4E0B;&#x5206;&#x680F;</td>
</tr>
<tr>
<td style="text-align:center">25</td>
<td style="text-align:center">Ctrl+E&#x91CA;&#x653E;&#x540E;&#x6309;3</td>
<td style="text-align:right">&#x5DE6;&#x53F3;&#x5206;&#x680F;</td>
</tr>
<tr>
<td style="text-align:center">26</td>
<td style="text-align:center">Ctrl+F</td>
<td style="text-align:right">&#x67E5;&#x627E;/&#x66FF;&#x6362;&#x5F53;&#x524D;&#x9009;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5BF9;&#x4E0E;&#x6240;&#x9009;&#x5185;&#x5BB9;&#x4E00;&#x81F4;&#x7684;&#x90E8;&#x5206;&#x8FDB;&#x884C;&#x9AD8;&#x4EAE;&#x663E;&#x793A;</td>
</tr>
<tr>
<td style="text-align:center">27</td>
<td style="text-align:center">Ctrl+I</td>
<td style="text-align:right">&#x4EE3;&#x7801;&#x683C;&#x5F0F;&#x5316;</td>
</tr>
<tr>
<td style="text-align:center">28</td>
<td style="text-align:center">Ctrl+K&#x5B9A;&#x4F4D;&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#xFF08;&#x7B26;&#x53F7;&#x8BF4;&#x660E;&#xFF1A;?&#x5E2E;&#x52A9;&#x3001;:&#x7C7B;&#x548C;&#x65B9;&#x6CD5;&#x3001;1&#x6570;&#x5B57;&#x5B9A;&#x4F4D;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x4E2D;&#x884C;&#x3001;m&#x7C7B;&#x3001;f&#x65B9;&#x6CD5;&#x3001;a&#x4EFB;&#x4F55;&#x5DE5;&#x7A0B;&#x4E2D;&#x3001;p</td>
<td style="text-align:right">&#x5F53;&#x524D;&#x5DE5;&#x7A0B;&#x4E2D;&#xFF09;</td>
</tr>
<tr>
<td style="text-align:center">29</td>
<td style="text-align:center">Ctrl+L</td>
<td style="text-align:right">&#x8DF3;&#x5230;&#x67D0;&#x4E00;&#x884C;</td>
</tr>
<tr>
<td style="text-align:center">30</td>
<td style="text-align:center">Ctrl+M</td>
<td style="text-align:right">&#x6DFB;&#x52A0;/&#x5220;&#x9664;&#x4E66;&#x7B7E;&#xFF08;&#x4E66;&#x7B7E;&#x4E5F;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x6587;&#x5B57;&#x6807;&#x6CE8;&#xFF09;</td>
</tr>
<tr>
<td style="text-align:center">31</td>
<td style="text-align:center">Ctrl+W</td>
<td style="text-align:right">&#x5173;&#x95ED;&#x5F53;&#x524D;&#x7F16;&#x8F91;&#x7684;&#x6587;&#x4EF6;</td>
</tr>
<tr>
<td style="text-align:center">32</td>
<td style="text-align:center">Ctrl+R</td>
<td style="text-align:right">&#x8FD0;&#x884C;&#x5DE5;&#x7A0B;</td>
</tr>
<tr>
<td style="text-align:center">33</td>
<td style="text-align:center">Ctrl+.</td>
<td style="text-align:right">&#x4E0B;&#x4E00;&#x4E2A;&#x4E66;&#x7B7E;</td>
</tr>
<tr>
<td style="text-align:center">34</td>
<td style="text-align:center">Ctrl+,</td>
<td style="text-align:right">&#x4E0A;&#x4E00;&#x4E2A;&#x4E66;&#x7B7E;</td>
</tr>
<tr>
<td style="text-align:center">35</td>
<td style="text-align:center">Ctrl+/</td>
<td style="text-align:right">&#x591A;&#x884C;&#x6CE8;&#x91CA;/&#x53D6;&#x6D88;&#x591A;&#x884C;&#x6CE8;&#x91CA;</td>
</tr>
<tr>
<td style="text-align:center">36</td>
<td style="text-align:center">Ctrl+[</td>
<td style="text-align:right">&#x8DF3;&#x5230;&#x4EE3;&#x7801;&#x5757;&#x7684;&#x5934;&#x90E8;</td>
</tr>
<tr>
<td style="text-align:center">37</td>
<td style="text-align:center">Ctrl+]</td>
<td style="text-align:right">&#x8DF3;&#x5230;&#x4EE3;&#x7801;&#x5757;&#x7684;&#x5C3E;&#x90E8;</td>
</tr>
<tr>
<td style="text-align:center">38</td>
<td style="text-align:center">Ctrl+Tab</td>
<td style="text-align:right">&#x5FEB;&#x901F;&#x5207;&#x6362;&#x5DF2;&#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;</td>
</tr>
<tr>
<td style="text-align:center">39</td>
<td style="text-align:center">Ctrl+Space</td>
<td style="text-align:right">&#x81EA;&#x52A8;&#x8865;&#x5168;&#xFF08;Windows&#x7CFB;&#x7EDF;&#x4E0B;&#x4E0E;&#x8F93;&#x5165;&#x6CD5;&#x5207;&#x6362;&#x5FEB;&#x6377;&#x952E;&#x51B2;&#x7A81;&#xFF09;</td>
</tr>
<tr>
<td style="text-align:center">40</td>
<td style="text-align:center">Ctrl+&#x8F6C;&#x52A8;&#x9F20;&#x6807;&#x6EDA;&#x8F6E;</td>
<td style="text-align:right">&#x8C03;&#x6574;&#x7F16;&#x8F91;&#x533A;&#x5B57;&#x4F53;&#x5927;&#x5C0F;</td>
</tr>
<tr>
<td style="text-align:center">41</td>
<td style="text-align:center">Ctrl+Shift+F5</td>
<td style="text-align:right">&#x91CD;&#x542F;&#x8C03;&#x8BD5;</td>
</tr>
<tr>
<td style="text-align:center">42</td>
<td style="text-align:center">Ctrl+Shift+F</td>
<td style="text-align:right">&#x5728;&#x9879;&#x76EE;/&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x67E5;&#x627E;</td>
</tr>
<tr>
<td style="text-align:center">43</td>
<td style="text-align:center">Ctrl+Shift+R&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x7EDF;&#x4E00;&#x4FEE;&#x6539;&#xFF08;&#x5C06;&#x5149;&#x6807;&#x79FB;&#x52A8;&#x5230;&#x9700;&#x8981;&#x66F4;&#x6539;&#x7684;&#x53D8;&#x91CF;&#x4E0A;,&#x6309;Ctrl+Shift+</td>
<td style="text-align:right">R,&#x5F53;&#x524D;&#x53D8;&#x91CF;&#x540D;&#x79F0;&#x5916;&#x6846;&#x4E3A;&#x7EA2;&#x8272;&#x65F6;,&#x8868;&#x793A;&#x5DF2;&#x7ECF;&#x5DF2;&#x6FC0;&#x6D3B;&#x5168;&#x5C40;&#x4FEE;&#x6539;&#x529F;&#x80FD;,&#x5F53;&#x4FEE;&#x6539;&#x6B64;&#x5904;&#x53D8;&#x91CF;&#x540D;&#x79F0;&#x65F6;&#x5C06;&#x4E00;&#x540C;&#x4FEE;&#x6539;&#x4EE3;&#x7801;&#x4E2D;&#x6240;&#x6709;&#x4F7F;&#x7528;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x53D8;&#x91CF;&#x540D;&#x3002;&#xFF09;&#xFF0C;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x5F00;&#x542F;&#x5168;&#x5C40;&#x66FF;&#x6362;&#x7A97;&#x53E3;</td>
</tr>
<tr>
<td style="text-align:center">44</td>
<td style="text-align:center">Ctrl+Shift+U</td>
<td style="text-align:right">&#x67E5;&#x627E;&#x6240;&#x6709;&#x4F7F;&#x7528;&#x8BE5;&#x7B26;&#x53F7;&#x7684;&#x5730;&#x65B9;</td>
</tr>
<tr>
<td style="text-align:center">45</td>
<td style="text-align:center">Ctrl+Shift+&lt;</td>
<td style="text-align:right">&#x6298;&#x53E0;&#x4EE3;&#x7801;&#x5757;</td>
</tr>
<tr>
<td style="text-align:center">46</td>
<td style="text-align:center">Ctrl+Shift+&gt;</td>
<td style="text-align:right">&#x5C55;&#x5F00;&#x4EE3;&#x7801;&#x5757;</td>
</tr>
<tr>
<td style="text-align:center">47</td>
<td style="text-align:center">Ctrl+Shift+Up</td>
<td style="text-align:right">&#x5C06;&#x5F53;&#x524D;&#x884C;&#x7684;&#x4EE3;&#x7801;&#x5411;&#x4E0A;&#x79FB;&#x52A8;&#x4E00;&#x884C;</td>
</tr>
<tr>
<td style="text-align:center">48</td>
<td style="text-align:center">Ctrl+Shift+Down</td>
<td style="text-align:right">&#x5C06;&#x5F53;&#x524D;&#x884C;&#x7684;&#x4EE3;&#x7801;&#x5411;&#x4E0B;&#x79FB;&#x52A8;&#x4E00;&#x884C;</td>
</tr>
<tr>
<td style="text-align:center">49</td>
<td style="text-align:center">Alt+0</td>
<td style="text-align:right">&#x9690;&#x85CF;&#x6216;&#x663E;&#x793A;&#x8FB9;&#x680F;&#xFF0C;&#x7F16;&#x8F91;&#x6A21;&#x5F0F;&#x4E0B;&#x8D77;&#x4F5C;&#x7528;&#xFF08;&#x6709;&#x65F6;&#x5199;&#x7684;&#x51FD;&#x6570;&#x592A;&#x957F;&#xFF0C;&#x5C4F;&#x5E55;&#x4E0D;&#x591F;&#x5927;&#xFF0C;&#x5C31;&#x7528;&#x8FD9;&#x4E2A;&#xFF09;</td>
</tr>
<tr>
<td style="text-align:center">50</td>
<td style="text-align:center">Alt+1</td>
<td style="text-align:right">&#x5207;&#x6362;&#x81F3;/&#x5173;&#x95ED;&#x751F;&#x6210;&#x7A97;&#x53E3;</td>
</tr>
<tr>
<td style="text-align:center">51</td>
<td style="text-align:center">Alt+2</td>
<td style="text-align:right">&#x5207;&#x6362;&#x81F3;/&#x5173;&#x95ED;&#x641C;&#x7D22;&#x7ED3;&#x679C;&#x7A97;&#x53E3;</td>
</tr>
<tr>
<td style="text-align:center">52</td>
<td style="text-align:center">Alt+3</td>
<td style="text-align:right">&#x5207;&#x6362;&#x81F3;/&#x5173;&#x95ED;&#x5E94;&#x7528;&#x8F93;&#x51FA;&#x7A97;&#x53E3;</td>
</tr>
<tr>
<td style="text-align:center">53</td>
<td style="text-align:center">Alt+4</td>
<td style="text-align:right">&#x5207;&#x6362;&#x81F3;/&#x5173;&#x95ED;&#x7F16;&#x8BD1;&#x8F93;&#x51FA;&#x7A97;&#x53E3;</td>
</tr>
<tr>
<td style="text-align:center">54</td>
<td style="text-align:center">Alt+5&#x5207;&#x6362;&#x81F3;/&#x5173;&#x95ED;QML/JS</td>
<td style="text-align:right">Console&#x7A97;&#x53E3;</td>
</tr>
<tr>
<td style="text-align:center">55</td>
<td style="text-align:center">Alt+6</td>
<td style="text-align:right">&#x5207;&#x6362;&#x81F3;/&#x5173;&#x95ED;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7A97;&#x53E3;</td>
</tr>
<tr>
<td style="text-align:center">56</td>
<td style="text-align:center">Alt+7</td>
<td style="text-align:right">&#x5207;&#x6362;&#x81F3;/&#x5173;&#x95ED;&#x7248;&#x672C;&#x63A7;&#x5236;&#x7A97;&#x53E3;</td>
</tr>
<tr>
<td style="text-align:center">57</td>
<td style="text-align:center">Alt+9</td>
<td style="text-align:right">&#x6700;&#x5927;&#x5316;/&#x6700;&#x5C0F;&#x5316;&#x8F93;&#x51FA;&#x7A97;&#x53E3;</td>
</tr>
<tr>
<td style="text-align:center">58</td>
<td style="text-align:center">Alt+&#x5DE6;</td>
<td style="text-align:right">&#x5149;&#x6807;&#x8FD4;&#x56DE;&#x5230;&#x4E0A;&#x4E00;&#x4F4D;&#x7F6E;</td>
</tr>
<tr>
<td style="text-align:center">59</td>
<td style="text-align:center">Alt+&#x53F3;</td>
<td style="text-align:right">&#x5149;&#x6807;&#x524D;&#x8FDB;&#x5230;&#x4E0B;&#x4E00;&#x4F4D;&#x7F6E;</td>
</tr>
<tr>
<td style="text-align:center">60</td>
<td style="text-align:center">Alt+Enter</td>
<td style="text-align:right">&#x5C06;&#x5149;&#x6807;&#x79FB;&#x52A8;&#x5230;h&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#x58F0;&#x660E;&#xFF0C;&#x6309;Alt+Enter&#xFF0C;&#x518D;&#x6309;&#x56DE;&#x8F66;&#x952E;&#x5C06;&#x5728;cpp&#x4E2D;&#x6DFB;&#x52A0;&#x5BF9;&#x5E94;&#x7684;&#x65B9;&#x6CD5;&#x5B9E;</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[STL ALGO BASE]]></title>
      <url>http://idler1229.github.io/2016/04/29/STL/STL-ALGO-BASE/</url>
      <content type="html"><![CDATA[<h2 id="Base-Algorithm"><a href="#Base-Algorithm" class="headerlink" title="Base Algorithm"></a>Base Algorithm</h2><pre><code>In &lt;stl_algobase.h&gt;
</code></pre><a id="more"></a>
<h3 id="Swap-and-Iter-swap"><a href="#Swap-and-Iter-swap" class="headerlink" title="Swap and Iter_swap"></a>Swap and Iter_swap</h3><p><em>iter_swap</em> swap the iterator pointed value, not the iterator itself.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _ForwardIter1, <span class="keyword">class</span> _ForwardIter2, <span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> __iter_swap(_ForwardIter1 __a, _ForwardIter2 __b, _Tp*) {</span><br><span class="line">  _Tp __tmp = *__a;</span><br><span class="line">  *__a = *__b;</span><br><span class="line">  *__b = __tmp;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _ForwardIter1, <span class="keyword">class</span> _ForwardIter2&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">iter_swap</span><span class="params">(_ForwardIter1 __a, _ForwardIter2 __b)</span> </span>{</span><br><span class="line"><span class="comment">/*</span><br><span class="line">  __STL_REQUIRES(_ForwardIter1, _Mutable_ForwardIterator);</span><br><span class="line">  __STL_REQUIRES(_ForwardIter2, _Mutable_ForwardIterator);</span><br><span class="line">  __STL_CONVERTIBLE(typename iterator_traits&lt;_ForwardIter1&gt;::value_type,</span><br><span class="line">                    typename iterator_traits&lt;_ForwardIter2&gt;::value_type);</span><br><span class="line">  __STL_CONVERTIBLE(typename iterator_traits&lt;_ForwardIter2&gt;::value_type,</span><br><span class="line">                    typename iterator_traits&lt;_ForwardIter1&gt;::value_type);</span><br><span class="line">*/</span></span><br><span class="line">  __iter_swap(__a, __b, __VALUE_TYPE(__a));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(_Tp&amp; __a, _Tp&amp; __b)</span> </span>{</span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_Tp, _Assignable);</span></span><br><span class="line">  _Tp __tmp = __a;</span><br><span class="line">  __a = __b;</span><br><span class="line">  __b = __tmp;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h3 id="Min-and-Max"><a href="#Min-and-Max" class="headerlink" title="Min and Max"></a>Min and Max</h3><p>inline function replace macros, because macros could have  side effects.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">const</span> _<span class="function">Tp&amp; <span class="title">min</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __a, <span class="keyword">const</span> _Tp&amp; __b)</span> </span>{</span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_Tp, _LessThanComparable);</span></span><br><span class="line">  return __b &lt; __a ? __b : __a;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">const</span> _<span class="function">Tp&amp; <span class="title">max</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __a, <span class="keyword">const</span> _Tp&amp; __b)</span> </span>{</span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_Tp, _LessThanComparable);</span></span><br><span class="line">  return  __a &lt; __b ? __b : __a;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp, <span class="keyword">class</span> _Compare&gt;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">const</span> _<span class="function">Tp&amp; <span class="title">min</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __a, <span class="keyword">const</span> _Tp&amp; __b, _Compare __comp)</span> </span>{</span><br><span class="line">  return __comp(__b, __a) ? __b : __a;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp, <span class="keyword">class</span> _Compare&gt;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">const</span> _<span class="function">Tp&amp; <span class="title">max</span><span class="params">(<span class="keyword">const</span> _Tp&amp; __a, <span class="keyword">const</span> _Tp&amp; __b, _Compare __comp)</span> </span>{</span><br><span class="line">  return __comp(__a, __b) ? __b : __a;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CMake [To Do]]]></title>
      <url>http://idler1229.github.io/2016/04/29/Compile/CMake/</url>
      <content type="html"><![CDATA[<h2 id="CMake-&#x5E38;&#x7528;&#x6307;&#x4EE4;"><a href="#CMake-&#x5E38;&#x7528;&#x6307;&#x4EE4;" class="headerlink" title="CMake &#x5E38;&#x7528;&#x6307;&#x4EE4;"></a>CMake &#x5E38;&#x7528;&#x6307;&#x4EE4;</h2><h3 id="CMake-Manual-&#x6458;&#x8981;"><a href="#CMake-Manual-&#x6458;&#x8981;" class="headerlink" title="CMake Manual &#x6458;&#x8981;"></a>CMake Manual &#x6458;&#x8981;</h3><h3 id="CMakeLists-txt"><a href="#CMakeLists-txt" class="headerlink" title="[CMakeLists.txt]"></a>[CMakeLists.txt]</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Example]</span><br><span class="line">PROJECT (HELLO)</span><br><span class="line">SET(SRC_LIST main.c)</span><br><span class="line">MESSAGE(STATUS <span class="string">&quot;This is BINARY dir &quot;</span> <span class="variable">${HELLO_BINARY_DIR}</span>)</span><br><span class="line">MESSAGE(STATUS <span class="string">&quot;This is SOURCE dir &quot;</span><span class="variable">${HELLO_SOURCE_DIR}</span>)</span><br><span class="line">ADD_EXECUTABLE(hello <span class="variable">${SRC_LIST}</span>)</span><br></pre></td></tr></table></figure>
<h4 id="PROJECT"><a href="#PROJECT" class="headerlink" title="PROJECT"></a>PROJECT</h4><p>PROJECT&#x6307;&#x4EE4;&#x53EF;&#x5B9A;&#x4E49;&#x5DE5;&#x7A0B;&#x540D;&#x79F0;, &#x5E76;&#x6307;&#x5B9A;&#x5DE5;&#x7A0B;&#x652F;&#x6301;&#x7684;&#x8BED;&#x8A00;, (&#x652F;&#x6301;&#x7684;&#x8BED;&#x8A00;&#x5217;&#x8868;&#x662F;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#x7684;, &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x8868;&#x793A;&#x652F;&#x6301;&#x6240;&#x6709;&#x8BED;&#x8A00;)<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PROJECT(projectname [CXX] [C] [Java])</span><br></pre></td></tr></table></figure></p>
<p>PROJECT&#x9690;&#x5F0F;&#x7684;&#x5B9A;&#x4E49;&#x4E86;&#x4E24;&#x4E2A; cmake &#x53D8;&#x91CF;:<br><code>&lt;projectname&gt;</code>_BINARY_DIR &#x548C; <code>&lt;projectname&gt;</code>_SOURCE_DIR, &#x56E0;&#x6B64;[Example]&#x4E2D;&#x76F4;&#x63A5;&#x4F7F;&#x7528;.</p>
<p>&#x56E0;&#x4E3A;&#x91C7;&#x7528;&#x7684;&#x662F;&#x5185;&#x90E8;&#x7F16;&#x8BD1;,&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x76EE;&#x524D;&#x6307;&#x7684;&#x90FD;&#x662F;&#x5DE5;&#x7A0B;&#x6240;&#x5728;&#x8DEF;&#x5F84;/backup/cmake/t1.<br>&#x540C;&#x65F6; cmake &#x7CFB;&#x7EDF;&#x4E5F;&#x9884;&#x5B9A;&#x4E49;&#x4E86; PROJECT_BINARY_DIR &#x548C; PROJECT_SOURCE_DIR,<br>&#x5176;&#x503C;&#x5206;&#x522B;&#x4E0E; HELLO_BINARY_DIR &#x4E0E; HELLO_SOURCE_DIR&#x4E00;&#x81F4;. &#x4E3A;&#x4E86;&#x7EDF;&#x4E00;&#x8D77;&#x89C1;,<br>&#x5EFA;&#x8BAE;&#x76F4;&#x63A5;&#x4F7F;&#x7528; PROJECT_BINARY_DIR, PROJECT_SOURCE_DIR, &#x5373;&#x4F7F;&#x4FEE;&#x6539;&#x4E86;&#x5DE5;&#x7A0B;&#x540D;&#x79F0;,&#x4E5F;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x8FD9;&#x4E24;&#x4E2A;&#x53D8;&#x91CF;.<br>&#x5982;&#x679C;&#x4F7F;&#x7528;&#x4E86;<projectname>_SOURCE_DIR,&#x4FEE;&#x6539;&#x5DE5;&#x7A0B;&#x540D;&#x79F0;&#x540E;,&#x9700;&#x8981;&#x540C;&#x65F6;&#x4FEE;&#x6539;&#x8FD9;&#x4E9B;&#x53D8;&#x91CF;.</projectname></p>
<h4 id="SET"><a href="#SET" class="headerlink" title="SET"></a>SET</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET(VAR [VALUE] [CACHE TYPE DOCSTRING [FORCE]])</span><br></pre></td></tr></table></figure>
<p>SET &#x6307;&#x4EE4;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x663E;&#x5F0F;&#x7684;&#x5B9A;&#x4E49;&#x53D8;&#x91CF;, (<em>&#x4E5F;&#x53EF;&#x9690;&#x5F0F;, &#x5C1A;&#x672A;&#x7814;&#x7A76;</em>)<br>&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x6E90;&#x6587;&#x4EF6;,&#x4E5F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x6210;:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET(SRC_LIST main.c t1.c t2.c)</span><br></pre></td></tr></table></figure></p>
<h4 id="MESSAGE"><a href="#MESSAGE" class="headerlink" title="MESSAGE"></a>MESSAGE</h4><p>&#x4E09;&#x79CD;&#x4FE1;&#x606F;&#x7C7B;&#x578B;&#xFF1A;<br>SEND_ERROR, &#x4EA7;&#x751F;&#x9519;&#x8BEF;,&#x751F;&#x6210;&#x8FC7;&#x7A0B;&#x88AB;&#x8DF3;&#x8FC7;.<br>SATUS, &#x8F93;&#x51FA;&#x524D;&#x7F00;&#x4E3A;&#x2014;&#x7684;&#x4FE1;&#x606F;.<br>FATAL_ERROR, &#x7ACB;&#x5373;&#x7EC8;&#x6B62;&#x6240;&#x6709; cmake &#x8FC7;&#x7A0B;.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MESSAGE([SEND_ERROR | STATUS | FATAL_ERROR] <span class="string">&quot;message to display&quot;</span>...)</span><br></pre></td></tr></table></figure></p>
<h4 id="INCLUDE-DIRECTORIES"><a href="#INCLUDE-DIRECTORIES" class="headerlink" title="INCLUDE_DIRECTORIES"></a>INCLUDE_DIRECTORIES</h4><p>&#x5411;&#x5DE5;&#x7A0B;&#x6DFB;&#x52A0;&#x591A;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x641C;&#x7D22;&#x8DEF;&#x5F84;, &#x8DEF;&#x5F84;&#x4E4B;&#x95F4;&#x7528;&#x7A7A;&#x683C;&#x5206;&#x5272;,&#x5982;&#x679C;&#x8DEF;&#x5F84;&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x7A7A;&#x683C;, &#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x53CC;&#x5F15;&#x53F7;&#x5C06;&#x5B83;&#x62EC;&#x8D77;&#x6765;, &#x9ED8;&#x8BA4;&#x7684;&#x884C;&#x4E3A;&#x662F;&#x8FFD;&#x52A0;&#x5230;&#x5F53;&#x524D;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x641C;&#x7D22;&#x8DEF;&#x5F84;&#x7684;&#x540E;&#x9762;.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INCLUDE_DIRECTORIES([AFTER|BEFORE] [SYSTEM] dir1 dir2 ...)</span><br></pre></td></tr></table></figure></p>
<p>&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x6765;&#x8FDB;&#x884C;&#x63A7;&#x5236;&#x641C;&#x7D22;&#x8DEF;&#x5F84;&#x6DFB;&#x52A0;&#x7684;&#x65B9;&#x5F0F;:<br>1, CMAKE_INCLUDE_DIRECTORIES_BEFORE, &#x901A;&#x8FC7; SET &#x4E3A; on, &#x53EF;&#x4EE5;&#x5C06;&#x6DFB;&#x52A0;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x641C;&#x7D22;&#x8DEF;&#x5F84;&#x653E;&#x5728;&#x5DF2;&#x6709;&#x8DEF;&#x5F84;&#x7684;&#x524D;&#x9762;<br>2, &#x901A;&#x8FC7; AFTER &#x6216;&#x8005; BEFORE &#x53C2;&#x6570;, &#x4E5F;&#x53EF;&#x63A7;&#x5236;&#x8FFD;&#x52A0;&#x8FD8;&#x662F;&#x7F6E;&#x524D;</p>
<h4 id="LINK-DIRECTORIES"><a href="#LINK-DIRECTORIES" class="headerlink" title="LINK_DIRECTORIES"></a>LINK_DIRECTORIES</h4><p>&#x6DFB;&#x52A0;&#x975E;&#x6807;&#x51C6;&#x7684;&#x5171;&#x4EAB;&#x5E93;&#x641C;&#x7D22;&#x8DEF;&#x5F84;,&#x6BD4;&#x5982;,&#x5728;&#x5DE5;&#x7A0B;&#x5185;&#x90E8;&#x540C;&#x65F6;&#x5B58;&#x5728;&#x5171;&#x4EAB;&#x5E93;&#x548C;&#x53EF;&#x6267;&#x884C;&#x4E8C;&#x8FDB;&#x5236;,&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x5C31;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x4E00;&#x4E0B;&#x8FD9;&#x4E9B;&#x5171;&#x4EAB;&#x5E93;&#x7684;&#x8DEF;&#x5F84;<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LINK_DIRECTORIES(directory1 directory2 ...)</span><br></pre></td></tr></table></figure></p>
<h4 id="TARGET-LINK-LIBRARIES"><a href="#TARGET-LINK-LIBRARIES" class="headerlink" title="TARGET_LINK_LIBRARIES"></a>TARGET_LINK_LIBRARIES</h4><p>&#x4E3A; target &#x6DFB;&#x52A0;&#x9700;&#x8981;&#x94FE;&#x63A5;&#x7684;&#x5171;&#x4EAB;&#x5E93;(&#x9759;&#x6001;&#x5E93;.a&#x4E0E;&#x52A8;&#x6001;&#x5E93;.so)<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TARGET_LINK_LIBRARIES(target library1, &lt;debug | optimized&gt; library2 ...)</span><br></pre></td></tr></table></figure></p>
<h4 id="ADD-EXECUTABLE"><a href="#ADD-EXECUTABLE" class="headerlink" title="ADD_EXECUTABLE"></a>ADD_EXECUTABLE</h4><p>&#x5B9A;&#x4E49;&#x4E86;&#x8FD9;&#x4E2A;&#x5DE5;&#x7A0B;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x540D;&#x4E3A;<exec_filename\>&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;, &#x76F8;&#x5173;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x5728; SRC_LIST &#x4E2D;<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ADD_EXECUTABLE(&lt;<span class="built_in">exec</span>_filename&gt; <span class="variable">${SRC_LIST}</span>)</span><br></pre></td></tr></table></figure></exec_filename\></p>
<pre><code>&#x5982;&#x5728; IF &#x63A7;&#x5236;&#x8BED;&#x53E5;,&#x53D8;&#x91CF;&#x662F;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x53D8;&#x91CF;&#x540D;&#x5F15;&#x7528;,&#x800C;&#x4E0D;&#x9700;&#x8981;${}. &#x5982;&#x679C;&#x4F7F;&#x7528;&#x4E86;${}&#x53BB;&#x5E94;&#x7528;&#x53D8;&#x91CF;,&#x5176;&#x5B9E; IF &#x4F1A;&#x53BB;&#x5224;&#x65AD;&#x540D;&#x4E3A;${}&#x6240;&#x4EE3;&#x8868;&#x7684;&#x503C;&#x7684;&#x53D8;&#x91CF;, &#x90A3;&#x5F53;&#x7136;&#x662F;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x4E86;.
</code></pre><h4 id="&#x7279;&#x6B8A;&#x73AF;&#x5883;&#x53D8;&#x91CF;"><a href="#&#x7279;&#x6B8A;&#x73AF;&#x5883;&#x53D8;&#x91CF;" class="headerlink" title="&#x7279;&#x6B8A;&#x73AF;&#x5883;&#x53D8;&#x91CF;"></a>&#x7279;&#x6B8A;&#x73AF;&#x5883;&#x53D8;&#x91CF;</h4><p>CMAKE_INCLUDE_PATH &#x548C; CMAKE_LIBRARY_PATH<br>&#x52A1;&#x5FC5;&#x6CE8;&#x610F;, &#x8FD9;&#x4E24;&#x4E2A;&#x662F;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x800C;&#x4E0D;&#x662F; cmake &#x53D8;&#x91CF;&#x3002;<br>&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x662F;&#x8981;&#x5728; bash &#x4E2D;&#x7528; export &#x6216;&#x8005;&#x5728; csh &#x4E2D;&#x4F7F;&#x7528; set &#x547D;&#x4EE4;&#x8BBE;&#x7F6E;&#x6216;&#x8005;<br>CMAKE_INCLUDE_PATH=/home/include cmake ..&#x7B49;&#x65B9;&#x5F0F;&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[STL ALGO NUMERIC]]></title>
      <url>http://idler1229.github.io/2016/04/29/STL/STL-ALGO-NUMERIC/</url>
      <content type="html"><![CDATA[<h2 id="Five-typical-Numeric-algorithm"><a href="#Five-typical-Numeric-algorithm" class="headerlink" title="Five typical Numeric algorithm"></a>Five typical Numeric algorithm</h2><pre><code>In &lt;stl_numeric.h&gt;
</code></pre><p>These algorithms all provide two function version, the one is naive/nature operation, and the other is user-defined operation passed by functor.</p>
<p>STL REQUIRES which you can ignore, when read source code. So I just  commented out these statements.</p>
<p><em>__VALUE_TYPE</em> which can find in &#x201C;stl_iterator_base.h&#x201D;<br><a id="more"></a></p>
<h3 id="Accumulate"><a href="#Accumulate" class="headerlink" title="Accumulate"></a>Accumulate</h3><p>If you want to get the sum of [first, last), you should set <em>init</em> with zero.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIterator, <span class="keyword">class</span> _Tp&gt;</span><br><span class="line">_<span class="function">Tp <span class="title">accumulate</span><span class="params">(_InputIterator __first, _InputIterator __last, _Tp __init)</span></span><br><span class="line"></span>{</span><br><span class="line">  <span class="comment">//__STL_REQUIRES(_InputIterator, _InputIterator);</span></span><br><span class="line">  <span class="keyword">for</span> ( ; __first != __last; ++__first)</span><br><span class="line">    __init = __init + *__first;</span><br><span class="line">  return __init;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIterator, <span class="keyword">class</span> _Tp, <span class="keyword">class</span> _BinaryOperation&gt;</span><br><span class="line">_<span class="function">Tp <span class="title">accumulate</span><span class="params">(_InputIterator __first, _InputIterator __last, _Tp __init,</span><br><span class="line">               _BinaryOperation __binary_op)</span></span><br><span class="line"></span>{</span><br><span class="line">  <span class="comment">//__STL_REQUIRES(_InputIterator, _InputIterator);</span></span><br><span class="line">  <span class="keyword">for</span> ( ; __first != __last; ++__first)</span><br><span class="line">    __init = __binary_op(__init, *__first);</span><br><span class="line">  return __init;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h3 id="Inner-Product"><a href="#Inner-Product" class="headerlink" title="Inner Product"></a>Inner Product</h3><p>In the second version, you can also define + and * when you calculate inner product.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIterator1, <span class="keyword">class</span> _InputIterator2, <span class="keyword">class</span> _Tp&gt;</span><br><span class="line">_<span class="function">Tp <span class="title">inner_product</span><span class="params">(_InputIterator1 __first1, _InputIterator1 __last1,</span><br><span class="line">                  _InputIterator2 __first2, _Tp __init)</span></span><br><span class="line"></span>{</span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_InputIterator2, _InputIterator);</span></span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_InputIterator2, _InputIterator);</span></span><br><span class="line">  <span class="keyword">for</span> ( ; __first1 != __last1; ++__first1, ++__first2)</span><br><span class="line">    __init = __init + (*__first1 * *__first2);</span><br><span class="line">  return __init;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIterator1, <span class="keyword">class</span> _InputIterator2, <span class="keyword">class</span> _Tp,</span><br><span class="line">          <span class="keyword">class</span> _BinaryOperation1, <span class="keyword">class</span> _BinaryOperation2&gt;</span><br><span class="line">_<span class="function">Tp <span class="title">inner_product</span><span class="params">(_InputIterator1 __first1, _InputIterator1 __last1,</span><br><span class="line">                  _InputIterator2 __first2, _Tp __init, </span><br><span class="line">                  _BinaryOperation1 __binary_op1,</span><br><span class="line">                  _BinaryOperation2 __binary_op2)</span></span><br><span class="line"></span>{</span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_InputIterator2, _InputIterator);</span></span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_InputIterator2, _InputIterator);</span></span><br><span class="line">  <span class="keyword">for</span> ( ; __first1 != __last1; ++__first1, ++__first2)</span><br><span class="line">    __init = __binary_op1(__init, __binary_op2(*__first1, *__first2));</span><br><span class="line">  return __init;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h3 id="Partial-Sum"><a href="#Partial-Sum" class="headerlink" title="Partial Sum"></a>Partial Sum</h3><p>This function return local sum, e.g.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v[0] = v[0]</span><br><span class="line">v[1] = v[0] + v[1]</span><br><span class="line">v[2] = v[0] + v[1] + v[2]</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>return the next of last one<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIterator, <span class="keyword">class</span> _OutputIterator, <span class="keyword">class</span> _Tp&gt;</span><br><span class="line">_OutputIterator </span><br><span class="line">__partial_sum(_InputIterator __first, _InputIterator __last,</span><br><span class="line">              _OutputIterator __result, _Tp*)</span><br><span class="line">{</span><br><span class="line">  _Tp __value = *__first;</span><br><span class="line">  <span class="keyword">while</span> (++__first != __last) {</span><br><span class="line">    __value = __value + *__first;</span><br><span class="line">    *++__result = __value;</span><br><span class="line">  }</span><br><span class="line">  return ++__result;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIterator, <span class="keyword">class</span> _OutputIterator&gt;</span><br><span class="line">_<span class="function">OutputIterator </span><br><span class="line"><span class="title">partial_sum</span><span class="params">(_InputIterator __first, _InputIterator __last,</span><br><span class="line">            _OutputIterator __result)</span></span><br><span class="line"></span>{</span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_InputIterator, _InputIterator);</span></span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_OutputIterator, _OutputIterator);</span></span><br><span class="line">  <span class="keyword">if</span> (__first == __last) return __result;</span><br><span class="line">  *__result = *__first;</span><br><span class="line">  return __partial_sum(__first, __last, __result, __VALUE_TYPE(__first));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIterator, <span class="keyword">class</span> _OutputIterator, <span class="keyword">class</span> _Tp,</span><br><span class="line">          <span class="keyword">class</span> _BinaryOperation&gt;</span><br><span class="line">_OutputIterator </span><br><span class="line">__partial_sum(_InputIterator __first, _InputIterator __last, </span><br><span class="line">              _OutputIterator __result, _Tp*, _BinaryOperation __binary_op)</span><br><span class="line">{</span><br><span class="line">  _Tp __value = *__first;</span><br><span class="line">  <span class="keyword">while</span> (++__first != __last) {</span><br><span class="line">    __value = __binary_op(__value, *__first);</span><br><span class="line">    *++__result = __value;</span><br><span class="line">  }</span><br><span class="line">  return ++__result;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIterator, <span class="keyword">class</span> _OutputIterator, <span class="keyword">class</span> _BinaryOperation&gt;</span><br><span class="line">_<span class="function">OutputIterator </span><br><span class="line"><span class="title">partial_sum</span><span class="params">(_InputIterator __first, _InputIterator __last,</span><br><span class="line">            _OutputIterator __result, _BinaryOperation __binary_op)</span></span><br><span class="line"></span>{</span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_InputIterator, _InputIterator);</span></span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_OutputIterator, _OutputIterator);</span></span><br><span class="line">  <span class="keyword">if</span> (__first == __last) return __result;</span><br><span class="line">  *__result = *__first;</span><br><span class="line">  return __partial_sum(__first, __last, __result, __VALUE_TYPE(__first), </span><br><span class="line">                       __binary_op);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h3 id="Adjacent-Difference"><a href="#Adjacent-Difference" class="headerlink" title="Adjacent Difference"></a>Adjacent Difference</h3><p>return the next of last one<br>e.g.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">v[0] = v[1] - v[0]</span><br><span class="line">v[1] = v[2] - v[1]</span><br><span class="line">v[2] = v[3] - v[2]</span><br><span class="line">...</span><br><span class="line">``` </span><br><span class="line">```c++</span><br><span class="line">template &lt;class _InputIterator, class _OutputIterator, class _Tp&gt;</span><br><span class="line">_OutputIterator </span><br><span class="line">__adjacent_difference(_InputIterator __first, _InputIterator __last,</span><br><span class="line">                      _OutputIterator __result, _Tp*)</span><br><span class="line">{</span><br><span class="line">  _Tp __value = *__first;</span><br><span class="line">  while (++__first != __last) {</span><br><span class="line">    _Tp __tmp = *__first;</span><br><span class="line">    *++__result = __tmp - __value;</span><br><span class="line">    __value = __tmp;</span><br><span class="line">  }</span><br><span class="line">  return ++__result;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">template &lt;class _InputIterator, class _OutputIterator&gt;</span><br><span class="line">_OutputIterator</span><br><span class="line">adjacent_difference(_InputIterator __first,</span><br><span class="line">                    _InputIterator __last, _OutputIterator __result)</span><br><span class="line">{</span><br><span class="line"> // __STL_REQUIRES(_InputIterator, _InputIterator);</span><br><span class="line"> // __STL_REQUIRES(_OutputIterator, _OutputIterator);</span><br><span class="line">  if (__first == __last) return __result;</span><br><span class="line">  *__result = *__first;</span><br><span class="line">  return __adjacent_difference(__first, __last, __result,</span><br><span class="line">                               __VALUE_TYPE(__first));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">template &lt;class _InputIterator, class _OutputIterator, class _Tp, </span><br><span class="line">          class _BinaryOperation&gt;</span><br><span class="line">_OutputIterator</span><br><span class="line">__adjacent_difference(_InputIterator __first, _InputIterator __last, </span><br><span class="line">                      _OutputIterator __result, _Tp*,</span><br><span class="line">                      _BinaryOperation __binary_op) {</span><br><span class="line">  _Tp __value = *__first;</span><br><span class="line">  while (++__first != __last) {</span><br><span class="line">    _Tp __tmp = *__first;</span><br><span class="line">    *++__result = __binary_op(__tmp, __value);</span><br><span class="line">    __value = __tmp;</span><br><span class="line">  }</span><br><span class="line">  return ++__result;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">template &lt;class _InputIterator, class _OutputIterator, class _BinaryOperation&gt;</span><br><span class="line">_OutputIterator </span><br><span class="line">adjacent_difference(_InputIterator __first, _InputIterator __last,</span><br><span class="line">                    _OutputIterator __result, _BinaryOperation __binary_op)</span><br><span class="line">{</span><br><span class="line"> // __STL_REQUIRES(_InputIterator, _InputIterator);</span><br><span class="line"> // __STL_REQUIRES(_OutputIterator, _OutputIterator);</span><br><span class="line">  if (__first == __last) return __result;</span><br><span class="line">  *__result = *__first;</span><br><span class="line">  return __adjacent_difference(__first, __last, __result,</span><br><span class="line">                               __VALUE_TYPE(__first),</span><br><span class="line">                               __binary_op);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h3 id="Power"><a href="#Power" class="headerlink" title="Power"></a>Power</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp, <span class="keyword">class</span> _Integer, <span class="keyword">class</span> _MonoidOperation&gt;</span><br><span class="line">_Tp __power(_Tp __x, _Integer __n, _MonoidOperation __opr)</span><br><span class="line">{</span><br><span class="line">  <span class="keyword">if</span> (__n == <span class="number">0</span>)</span><br><span class="line">    return identity_element(__opr); <span class="comment">//which can find in &lt;stl_function.h&gt;</span></span><br><span class="line">  <span class="keyword">else</span> {</span><br><span class="line">    <span class="comment">// when even number </span></span><br><span class="line">    <span class="keyword">while</span> ((__n &amp; <span class="number">1</span>) == <span class="number">0</span>) {</span><br><span class="line">      __n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">      __x = __opr(__x, __x);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    _Tp __result = __x;</span><br><span class="line">    __n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (__n != <span class="number">0</span>) {</span><br><span class="line">      __x = __opr(__x, __x);</span><br><span class="line">      <span class="keyword">if</span> ((__n &amp; <span class="number">1</span>) != <span class="number">0</span>)</span><br><span class="line">        __result = __opr(__result, __x);</span><br><span class="line">      __n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    return __result;</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp, <span class="keyword">class</span> _Integer&gt;</span><br><span class="line"><span class="keyword">inline</span> _Tp __power(_Tp __x, _Integer __n)</span><br><span class="line">{</span><br><span class="line">  return __power(__x, __n, multiplies&lt;_Tp&gt;());</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// Alias for the internal name __power.  Note that power is an extension,</span></span><br><span class="line"><span class="comment">// not part of the C++ standard.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp, <span class="keyword">class</span> _Integer, <span class="keyword">class</span> _MonoidOperation&gt;</span><br><span class="line"><span class="keyword">inline</span> _<span class="function">Tp <span class="title">power</span><span class="params">(_Tp __x, _Integer __n, _MonoidOperation __opr)</span></span><br><span class="line"></span>{</span><br><span class="line">  return __power(__x, __n, __opr);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _Tp, <span class="keyword">class</span> _Integer&gt;</span><br><span class="line"><span class="keyword">inline</span> _<span class="function">Tp <span class="title">power</span><span class="params">(_Tp __x, _Integer __n)</span></span><br><span class="line"></span>{</span><br><span class="line">  return __power(__x, __n);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h2 id="Additional"><a href="#Additional" class="headerlink" title="Additional"></a>Additional</h2><p>iota is not part of the C++ standard.  It is an extension. </p>
<h3 id="Itoa"><a href="#Itoa" class="headerlink" title="Itoa"></a>Itoa</h3><p>The function can generate a sequence which in ascending order.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _ForwardIter, <span class="keyword">class</span> _Tp&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> </span><br><span class="line"><span class="title">iota</span><span class="params">(_ForwardIter __first, _ForwardIter __last, _Tp __value)</span></span><br><span class="line"></span>{</span><br><span class="line"> <span class="comment">// __STL_REQUIRES(_ForwardIter, _Mutable_ForwardIterator);</span></span><br><span class="line"> <span class="comment">// __STL_CONVERTIBLE(_Tp, typename iterator_traits&lt;_ForwardIter&gt;::value_type);</span></span><br><span class="line">  <span class="keyword">while</span> (__first != __last)</span><br><span class="line">    *__first++ = __value++;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[APUE]]></title>
      <url>http://idler1229.github.io/2016/04/28/Linux/APUE/</url>
      <content type="html"><![CDATA[<h2 id="getopt"><a href="#getopt" class="headerlink" title="getopt"></a>getopt</h2><h3 id="Function-Prototype"><a href="#Function-Prototype" class="headerlink" title="Function Prototype"></a>Function Prototype</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getopt</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> * <span class="keyword">const</span> argv[ ],<span class="keyword">const</span> <span class="keyword">char</span> * optstring)</span></span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span> *optarg;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> optind, opterr, optopt;</span><br></pre></td></tr></table></figure>
<h3 id="Global-Variable-in-getopt"><a href="#Global-Variable-in-getopt" class="headerlink" title="Global Variable in getopt()"></a>Global Variable in getopt()</h3><pre><code>optarg &#x2014;&#x2014; &#x6307;&#x5411;&#x5F53;&#x524D;&#x9009;&#x9879;&#x53C2;&#x6570;&#xFF08;&#x5982;&#x679C;&#x6709;&#xFF09;&#x7684;&#x6307;&#x9488;&#x3002; 
optind &#x2014;&#x2014; &#x518D;&#x6B21;&#x8C03;&#x7528; getopt() &#x65F6;&#x7684;&#x4E0B;&#x4E00;&#x4E2A; argv &#x6307;&#x9488;&#x7684;&#x7D22;&#x5F15; 
optopt &#x2014;&#x2014; &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x672A;&#x77E5;&#x9009;&#x9879;
</code></pre><h3 id="Complement"><a href="#Complement" class="headerlink" title="Complement"></a>Complement</h3><pre><code>optstring&#x4E2D;&#x7684;&#x6307;&#x5B9A;&#x7684;&#x5185;&#x5BB9;&#x7684;&#x610F;&#x4E49;
&#x4F8B;&#x5982; getopt(argc, argv, &quot;ab:c:de::&quot;);
    1.&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x8868;&#x793A;&#x9009;&#x9879;&#xFF0C;&#xFF08;&#x5982;&#x4E0A;&#x4F8B;&#x4E2D;&#x7684;abcde&#x5404;&#x4E3A;&#x4E00;&#x4E2A;&#x9009;&#x9879;&#xFF09;
    2.&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#x540E;&#x63A5;&#x4E00;&#x4E2A;&#x5192;&#x53F7;&#xFF1A;&#x8868;&#x793A;&#x8BE5;&#x9009;&#x9879;&#x540E;&#x5FC5;&#x987B;&#x8DDF;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x3002;&#x53C2;&#x6570;&#x7D27;&#x8DDF;&#x5728;&#x9009;&#x9879;&#x540E;&#x6216;&#x8005;&#x4EE5;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002;&#x8BE5;&#x53C2;&#x6570;&#x7684;&#x6307;&#x9488;&#x8D4B;&#x7ED9;optarg&#x3002;&#xFF08;&#x5982;&#x4E0A;&#x4F8B;&#x4E2D;&#x7684;b:c:&#xFF09;
    3.&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#x540E;&#x8DDF;&#x4E24;&#x4E2A;&#x5192;&#x53F7;&#xFF0C;&#x8868;&#x793A;&#x8BE5;&#x9009;&#x9879;&#x540E;&#x53EF;&#x4EE5;&#x8DDF;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x8DDF;&#x3002;&#x5982;&#x679C;&#x8DDF;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x53C2;&#x6570;&#x5FC5;&#x987B;&#x7D27;&#x8DDF;&#x5728;&#x9009;&#x9879;&#x540E;&#x4E0D;&#x80FD;&#x4EE5;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002;&#x8BE5;&#x53C2;&#x6570;&#x7684;&#x6307;&#x9488;&#x8D4B;&#x7ED9;optarg&#x3002;(&#x5982;&#x4E0A;&#x4F8B;&#x4E2D;&#x7684;e::&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8DDF;&#x53C2;&#x6570;&#xFF0C;&#x5219;optarg = NULL)
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Leetcode Shell]]></title>
      <url>http://idler1229.github.io/2016/04/28/Linux/Shell/Leetcode-Shell/</url>
      <content type="html"><![CDATA[<h2 id="Some-interesting-shell-script-on-Leetcode"><a href="#Some-interesting-shell-script-on-Leetcode" class="headerlink" title="Some interesting shell script on Leetcode"></a>Some interesting shell script on <em>Leetcode</em></h2><h3 id="Word-Frequency"><a href="#Word-Frequency" class="headerlink" title="Word Frequency"></a><a href="https://leetcode.com/problems/word-frequency/" target="_blank" rel="external">Word Frequency</a></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -oE <span class="string">&apos;[a-z]+&apos;</span> words.txt | sort | uniq -c | sort -r | awk <span class="string">&apos;{print $2&quot; &quot;$1}&apos;</span></span><br></pre></td></tr></table></figure>
<h3 id="Transpose-File"><a href="#Transpose-File" class="headerlink" title="Transpose File"></a><a href="https://leetcode.com/problems/transpose-file/" target="_blank" rel="external">Transpose File</a></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## &#x4EFB;&#x4F55;&#x5728;BEGIN&#x4E4B;&#x540E;&#x5217;&#x51FA;&#x7684;&#x64CD;&#x4F5C;&#xFF08;&#x5728;{}&#x5185;&#xFF09;&#x5C06;&#x5728;Unix awk&#x5F00;&#x59CB;&#x626B;&#x63CF;&#x8F93;&#x5165;&#x4E4B;&#x524D;&#x6267;&#x884C;&#xFF0C;&#x800C;END&#x4E4B;&#x540E;&#x5217;&#x51FA;&#x7684;&#x64CD;&#x4F5C;&#x5C06;&#x5728;&#x626B;&#x63CF;&#x5B8C;&#x5168;&#x90E8;&#x7684;&#x8F93;&#x5165;&#x4E4B;&#x540E;&#x6267;&#x884C;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x901A;&#x5E38;&#x4F7F;&#x7528;BEGIN&#x6765;&#x663E;&#x793A;&#x53D8;&#x91CF;&#x548C;&#x9884;&#x7F6E;&#xFF08;&#x521D;&#x59CB;&#x5316;&#xFF09;&#x53D8;&#x91CF;&#xFF0C;&#x4F7F;&#x7528;END&#x6765;&#x8F93;&#x51FA;&#x6700;&#x7EC8;&#x7ED3;&#x679C;&#x3002;</span></span><br><span class="line">awk <span class="string">&apos;</span><br><span class="line">{</span><br><span class="line">    for (i = 1; i &lt;= NF; i++) {</span><br><span class="line">        if(NR == 1) {</span><br><span class="line">            s[i] = $i;</span><br><span class="line">        } else {</span><br><span class="line">            s[i] = s[i] &quot; &quot; $i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">END {</span><br><span class="line">    for (i = 1; s[i] != &quot;&quot;; i++) {</span><br><span class="line">        print s[i];</span><br><span class="line">    }</span><br><span class="line">}&apos;</span> file.txt</span><br></pre></td></tr></table></figure>
<h3 id="Valid-Phone-Numbers"><a href="#Valid-Phone-Numbers" class="headerlink" title="Valid Phone Numbers"></a><a href="https://leetcode.com/problems/valid-phone-numbers/" target="_blank" rel="external">Valid Phone Numbers</a></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -Eo <span class="string">&apos;^(\([0-9]{3}\) ){1}[0-9]{3}-[0-9]{4}$|^([0-9]{3}-){2}[0-9]{4}$&apos;</span> file.txt</span><br></pre></td></tr></table></figure>
<h3 id="Tenth-Line"><a href="#Tenth-Line" class="headerlink" title="Tenth Line"></a><a href="https://leetcode.com/problems/tenth-line/" target="_blank" rel="external">Tenth Line</a></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n  <span class="string">&apos;10p&apos;</span> file.txt</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[const_cast [To Do]]]></title>
      <url>http://idler1229.github.io/2016/04/28/Programming/C++/const-cast/</url>
      <content type="html"><![CDATA[<h2 id="const-cast"><a href="#const-cast" class="headerlink" title="const_cast"></a>const_cast</h2><p>three examples to explain the usage of const_cast</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="[Code]"></a>[Code]</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************************************************************</span><br><span class="line">	&gt; File Name: mod_const.cpp</span><br><span class="line">	&gt; Author: zyy</span><br><span class="line">	&gt; Mail: zyy34472@gmail.com</span><br><span class="line"> ************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NAME2STR(_VAR_) (#_VAR_)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OUT(_VAR_) cout &lt;&lt; NAME2STR(_VAR_) &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; _VAR_ &lt;&lt; endl</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span><br><span class="line"></span>{</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;const_cast&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">volatile</span> <span class="keyword">int</span> a1 = <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">int</span> &amp;b1 = <span class="keyword">const_cast</span>&lt;<span class="keyword">int</span>&amp;&gt;(a1); </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[const volatile int -&gt; int&amp;]&quot;</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">    OUT(((&amp;a1) == (&amp;b1))); </span><br><span class="line">    OUT(&amp;a1); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;But use printf, &amp;a = %p\n&quot;</span>, &amp;a1);</span><br><span class="line">    OUT(&amp;b1); </span><br><span class="line">    b1 = <span class="number">2</span>; </span><br><span class="line">    OUT(a1); </span><br><span class="line">    OUT(b1); </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>; ; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> a2 = <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">int</span> &amp;b2 = <span class="keyword">const_cast</span>&lt;<span class="keyword">int</span>&amp;&gt;(a2); </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[const int -&gt; int&amp;]&quot;</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">    OUT(((&amp;a2) == (&amp;b2))); </span><br><span class="line">    OUT(&amp;a2); </span><br><span class="line">    OUT(&amp;b2); </span><br><span class="line">    b2 = <span class="number">2</span>; </span><br><span class="line">    OUT(a2); </span><br><span class="line">    OUT(b2); </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> a3 = <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> &amp;b3 = a3;</span><br><span class="line">    <span class="keyword">int</span> &amp;x = <span class="keyword">const_cast</span>&lt;<span class="keyword">int</span>&amp;&gt;(b3); </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[int -&gt; const int&amp;]&quot;</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">    <span class="comment">//int* const b2 = &amp;a2; </span></span><br><span class="line">    OUT(&amp;a3); </span><br><span class="line">    OUT(&amp;x); </span><br><span class="line">    x = <span class="number">20</span>;  </span><br><span class="line">    OUT(a3); </span><br><span class="line">    OUT(x); </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line"></span><br><span class="line">	return <span class="number">0</span>; </span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="Result"><a href="#Result" class="headerlink" title="[Result]"></a>[Result]</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">const_cast</span><br><span class="line"></span><br><span class="line">[const volatile int -&gt; int&amp;]</span><br><span class="line">((&amp;a1) == (&amp;b1)): 1</span><br><span class="line">&amp;a1: 1</span><br><span class="line">But use printf, &amp;a = 0x7ffeeccb8354</span><br><span class="line">&amp;b1: 0x7ffeeccb8354</span><br><span class="line">a1: 2</span><br><span class="line">b1: 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[const int -&gt; int&amp;]</span><br><span class="line">((&amp;a2) == (&amp;b2)): 1</span><br><span class="line">&amp;a2: 0x7ffeeccb8358</span><br><span class="line">&amp;b2: 0x7ffeeccb8358</span><br><span class="line">a2: 1</span><br><span class="line">b2: 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[int -&gt; const int&amp;]</span><br><span class="line">&amp;a3: 0x7ffeeccb835c</span><br><span class="line">&amp;x: 0x7ffeeccb835c</span><br><span class="line">a3: 20</span><br><span class="line">x: 20</span><br></pre></td></tr></table></figure>
<h3 id="Explaination"><a href="#Explaination" class="headerlink" title="[Explaination]"></a>[Explaination]</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">To be continue ...</span><br></pre></td></tr></table></figure>
<h6 id="Express-grateful-thanks-to-Hao-ren"><a href="#Express-grateful-thanks-to-Hao-ren" class="headerlink" title="Express grateful thanks to Hao ren"></a>Express grateful thanks to <em>Hao ren</em></h6>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Video Capture]]></title>
      <url>http://idler1229.github.io/2016/04/27/CV/Video-Capture/</url>
      <content type="html"><![CDATA[<h2 id="Capture-Video-data-from-camera-and-save"><a href="#Capture-Video-data-from-camera-and-save" class="headerlink" title="Capture Video data from camera and save"></a>Capture Video data from camera and save</h2><p>Press ESC to exit program.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;video.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span><br><span class="line"></span>{</span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">2</span>) {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[Usage]&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t ./VideoCapture save_filename&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        return <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    VideoCapture vc;</span><br><span class="line">    vc.open(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (!vc.isOpened()) {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[ERROR] Camera can&apos;t open&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        return <span class="number">-2</span>;</span><br><span class="line">    }</span><br><span class="line">    VideoWriter vw;</span><br><span class="line">    vw.open( argv[<span class="number">1</span>], <span class="comment">// Saved filename</span></span><br><span class="line">            (int)vc.get( CV_CAP_PROP_FOURCC ), <span class="comment">// Windows:CV_FOURCC_PROMPT(-1) can select parameters in a Dialog</span></span><br><span class="line">            (double)vc.get( CV_CAP_PROP_FPS ), <span class="comment">// FPS</span></span><br><span class="line">            cv::Size( (int)vc.get( CV_CAP_PROP_FRAME_WIDTH ), (int)vc.get( CV_CAP_PROP_FRAME_HEIGHT ) ), <span class="comment">// Resolution</span></span><br><span class="line">            <span class="literal">true</span> ); <span class="comment">// Color or not);</span></span><br><span class="line">    <span class="keyword">if</span> (!vw.isOpened()) {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[ERROR] Saved file can&apos;t open&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        return <span class="number">-3</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//Capture</span></span><br><span class="line">    Mat frame;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> framecnt = <span class="number">0</span>; vc.read(frame) &amp;&amp; waitKey(<span class="number">33</span>) != <span class="number">27</span>; framecnt++) {</span><br><span class="line">        vw &lt;&lt; frame;</span><br><span class="line">    }</span><br><span class="line">    vc.release();</span><br><span class="line">    vw.release();</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Filename remove blank]]></title>
      <url>http://idler1229.github.io/2016/04/27/Linux/Shell/Filename-remove-blank/</url>
      <content type="html"><![CDATA[<h4 id="Get-rid-of-blank-in-filename"><a href="#Get-rid-of-blank-in-filename" class="headerlink" title="Get rid of blank in filename"></a>Get rid of blank in filename</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">mkdir rename</span><br><span class="line">ls *.png | <span class="keyword">while</span> <span class="built_in">read</span> file; <span class="keyword">do</span></span><br><span class="line">    newfile=`<span class="built_in">echo</span> <span class="variable">$file</span> | awk -F <span class="string">&apos; &apos;</span> <span class="string">&apos;{for(i=1;i&lt;=NF;i++) printf&quot;%s&quot;,$i}&apos;</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$file</span> -&gt; <span class="variable">$newfile</span></span><br><span class="line">    mv <span class="string">&quot;<span class="variable">$file</span>&quot;</span> ./rename/<span class="string">&quot;<span class="variable">$newfile</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Depth Segmentation]]></title>
      <url>http://idler1229.github.io/2016/04/27/CV/Segmentation-Region-Grow/</url>
      <content type="html"><![CDATA[<h2 id="A-efficient-depth-segmentation-base-on-Region-growing"><a href="#A-efficient-depth-segmentation-base-on-Region-growing" class="headerlink" title="A efficient depth segmentation base on Region growing"></a>A efficient depth segmentation base on Region growing</h2><h3 id="Main-idea-merge-small-regions-and-black-regions-to-Main-regions"><a href="#Main-idea-merge-small-regions-and-black-regions-to-Main-regions" class="headerlink" title="Main idea: merge small regions and black regions to Main regions."></a>Main idea: merge small regions and black regions to Main regions.</h3><p>The image on the left is the <em>Color</em> source and the right is its <em>Depth</em> image, which are captured by an Intel Realsense F200 camera. Note that the point which is brighter implies it is farer from the camera. However, the point may become black once it is out of camera range. The red region denotes unreliable points representing too far or too close positions, which exceed the effective distance range of the camera (out of 0.2m - 1.2m). The blue region implies that the Realsense camera cannot ensure the distance is effective due to diffuse reflection.</p>
<table>
<thead>
<tr>
<th style="text-align:center"><em>Color</em></th>
<th style="text-align:center"><em>Depth</em></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="/2016/04/27/CV/Segmentation-Region-Grow/color.png" alt="Color"></td>
<td style="text-align:center"><img src="/2016/04/27/CV/Segmentation-Region-Grow/depth-mark.png" alt="Depth marked"></td>
</tr>
</tbody>
</table>
<p>The initial segmentations with <em>topk</em>=<em>5</em> are shown in <em>BeforeMerging</em>. After merging small regions and black regions, we obtain the results as shown in <em>Segmentation</em>. The colors are random generated to mark the segmentations in <em>BeforeMerging</em> and <em>Segmentation</em>, respectively. The black regions in <em>Segmentation</em> are unmarked, which means that they are either unreliable points in <em>Segmentation</em> or do not belong to any main segment.</p>
<table>
<thead>
<tr>
<th style="text-align:center"><em>BeforeMerging</em></th>
<th style="text-align:center"><em>Segmentation</em></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="/2016/04/27/CV/Segmentation-Region-Grow/merge.png" alt="Before merge"></td>
<td style="text-align:center"><img src="/2016/04/27/CV/Segmentation-Region-Grow/segment.png" alt="Segmentation"></td>
</tr>
</tbody>
</table>
<p>And the whole algorithm flow is shown as follow:<br><img src="/2016/04/27/CV/Segmentation-Region-Grow/algorithm.png" alt="Algorithm"> </p>
<a id="more"></a>
<h3 id="Head-Files"><a href="#Head-Files" class="headerlink" title="[Head Files]"></a>[Head Files]</h3><h4 id="Segmentation-hpp"><a href="#Segmentation-hpp" class="headerlink" title="Segmentation.hpp"></a>Segmentation.hpp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;Common.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;MyDraw.hpp&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Segmentation: <span class="keyword">public</span> Draw</span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/** @brief Constructor with parameters */</span></span><br><span class="line">    Segmentation(<span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">unsigned</span> topk = <span class="number">5</span>, <span class="keyword">short</span> t = <span class="number">3</span>);</span><br><span class="line">    Segmentation(Size sz, <span class="keyword">unsigned</span> topk = <span class="number">5</span>, <span class="keyword">short</span> t = <span class="number">3</span>);</span><br><span class="line">    <span class="comment">/** @brief Segment with depth image, and show some result in color image */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Segment</span><span class="params">(Mat&amp; depth)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Segment</span><span class="params">(Mat&amp; depth, Mat&amp; color)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief DFS: depth first search with recurrsive methold, but easy to stack overflow</span><br><span class="line">     * @param depth         depth data</span><br><span class="line">     * @param visit         marked visited point</span><br><span class="line">     * @param cur           current point position</span><br><span class="line">     * @param threshold     the max value between extend point</span><br><span class="line">     * @param v             from current point, a segment point set</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(Mat&amp; depth, Mat&amp; visit, Point cur, <span class="keyword">short</span>&amp; threshold, PointSet&amp; v)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief NonRecursive: prevent stack overflow</span><br><span class="line">     * @param depth     depth data</span><br><span class="line">     * @param visit     marked visited point</span><br><span class="line">     * @param cur       current point position</span><br><span class="line">     * @param pSet      from current point, a segment point set</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">NonRecursive</span><span class="params">(Mat&amp; depth, Mat&amp; visit, Point&amp; cur, PointSet&amp; pSet)</span></span>;</span><br><span class="line">    <span class="comment">/** @brief completeDepth complete black points with right/down/right-down direction which has depth value */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">completeDepth</span><span class="params">(Mat&amp; depth)</span></span>;</span><br><span class="line">    <span class="comment">/** @brief clear mainRegions_, blackRegions_ and distance_ */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">/** @brief return segmentation info*/</span></span><br><span class="line">    <span class="function">SegmentSet&amp; <span class="title">getMainRegions</span><span class="params">()</span>    </span>{return mainRegions_;}</span><br><span class="line">    <span class="function">SegmentSet&amp; <span class="title">getBlackRegions</span><span class="params">()</span>   </span>{return blackRegions_;}</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;&amp; getDistance()    {return distance_;}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief regionMerge: merge small region and black points to Main Regions</span><br><span class="line">     * @param depth     depth data</span><br><span class="line">     * @param minSim    0.0 - 1.0</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">regionMerge</span><span class="params">(Mat&amp; depth, <span class="keyword">double</span> minSim)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief hullBoundBox: get the each region convexHull&apos;s bounding box</span><br><span class="line">     * @param hull  the vertices of Convex hull</span><br><span class="line">     * @return bounding box</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function">Rect <span class="title">hullBoundBox</span><span class="params">(PointSet&amp; hull)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief isRegionInsideHull: determine if small or black regions belongs to one Main Region</span><br><span class="line">     * @param pSet      small region / black region</span><br><span class="line">     * @param hull      Convex hull</span><br><span class="line">     * @param minSim    0.0 - 1.0</span><br><span class="line">     * @return  in / not in</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isRegionInsideHull</span><span class="params">(PointSet&amp; pSet, PointSet&amp; hull, <span class="keyword">double</span> minSim)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isRegionInsideHull</span><span class="params">(PointSet&amp; pSet, PointSet&amp; hull, PointSet&amp; seg, <span class="keyword">double</span> minSim)</span></span>;</span><br><span class="line">    <span class="comment">/** @brief randColor: generate random colors to show */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">randColor</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">/** @brief draw<span class="doctag">XXX:</span> extend from Draw */</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawRotateRect</span><span class="params">(Mat&amp; src, RotatedRect&amp; rr)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawConvexHull</span><span class="params">(Mat&amp; src, PointSet&amp; hull, Scalar color)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawBlack</span><span class="params">(SegmentSet&amp; blackRegions, Mat&amp; disp, Vec3b&amp; color)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(SegmentSet&amp; segment, Mat&amp; disp, <span class="built_in">vector</span>&lt;Vec3b&gt;&amp; colors)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawBoundBox</span><span class="params">(SegmentSet&amp; segment, <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;&amp; distance, Mat&amp; color, Mat&amp; depth)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawRegions</span><span class="params">(SegmentSet&amp; segment, Mat&amp; color, Mat&amp; depth, Mat&amp; disp)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawSobel</span><span class="params">(Mat&amp; depth)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/** @brief _DIRECTIONS_ eight directions to extend point */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">vector</span>&lt;Point&gt; _DIRECTIONS_;</span><br><span class="line">    <span class="comment">/** @brief _DIR_ three directions (right, down, right-down) to complete point */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">vector</span>&lt;Point&gt; _DIR_;</span><br><span class="line">    <span class="comment">/** @brief colors_ random color to mark segmentation */</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;Vec3b&gt; colors_;</span><br><span class="line">    <span class="comment">/** @brief RANGE_ image size to determine which region is out-of-range */</span></span><br><span class="line">    Rect RANGE_;</span><br><span class="line">    <span class="comment">/** @brief threshold_ the max value between extend point */</span></span><br><span class="line">    <span class="keyword">short</span> threshold_;</span><br><span class="line">    <span class="comment">/** @brief topk_ initial main regions number */</span></span><br><span class="line">    <span class="keyword">unsigned</span> topk_;</span><br><span class="line">    <span class="comment">/** @brief segmentation info */</span></span><br><span class="line">    SegmentSet mainRegions_;</span><br><span class="line">    SegmentSet blackRegions_;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; distance_;</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="MyDraw-hpp"><a href="#MyDraw-hpp" class="headerlink" title="MyDraw.hpp"></a>MyDraw.hpp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;Common.hpp&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Draw</span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawRotateRect</span><span class="params">(Mat&amp; src, RotatedRect&amp; rr)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawConvexHull</span><span class="params">(Mat&amp; src, PointSet&amp; hull, Scalar color)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawBlack</span><span class="params">(SegmentSet&amp; blackRegions, Mat&amp; disp, Vec3b&amp; color)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(SegmentSet&amp; segment, Mat&amp; disp, <span class="built_in">vector</span>&lt;Vec3b&gt;&amp; colors)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawBoundBox</span><span class="params">(SegmentSet&amp; segment, <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;&amp; distance, Mat&amp; color, Mat&amp; depth)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawRegions</span><span class="params">(SegmentSet&amp; segment, Mat&amp; color, Mat&amp; depth, Mat&amp; disp)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">drawSobel</span><span class="params">(Mat&amp; depth)</span></span>=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="FileOperation-hpp"><a href="#FileOperation-hpp" class="headerlink" title="FileOperation.hpp"></a>FileOperation.hpp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">vector</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> FileOperation{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief getFilename: get all files / subdirs Under dirpath</span><br><span class="line">     * @param dirPath</span><br><span class="line">     * @return subFiles</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">virtual</span> <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; getFilename(<span class="keyword">const</span> <span class="built_in">string</span>&amp; dirPath) ;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief getFilepath: get absolute path of files / subdirs Under dirpath</span><br><span class="line">     * @param dirPath</span><br><span class="line">     * @return absolutePaths</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">virtual</span> <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; getFilepath(<span class="keyword">const</span> <span class="built_in">string</span>&amp; dirPath) ;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief findFileName: filter out filename from absolute path</span><br><span class="line">     * @param path</span><br><span class="line">     * @return filename</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="built_in">string</span> <span class="title">findFileName</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; path)</span> </span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief testExist: test if file path exists or not</span><br><span class="line">     * @param path</span><br><span class="line">     * @return Ture if Exist</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">bool</span> <span class="title">testExist</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; path)</span> </span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="Common-hpp"><a href="#Common-hpp" class="headerlink" title="Common.hpp"></a>Common.hpp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">string</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">vector</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> cv::Point;</span><br><span class="line"><span class="keyword">using</span> cv::Mat;</span><br><span class="line"><span class="keyword">using</span> cv::Size;</span><br><span class="line"><span class="keyword">using</span> cv::Rect;</span><br><span class="line"><span class="keyword">using</span> cv::Scalar;</span><br><span class="line"><span class="keyword">using</span> cv::Vec3b;</span><br><span class="line"><span class="keyword">using</span> cv::RotatedRect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;Point&gt; PointSet;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;PointSet&gt; SegmentSet;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Simple Object Classification with HOG and SVM]]></title>
      <url>http://idler1229.github.io/2016/04/27/CV/HOG-SVM/</url>
      <content type="html"><![CDATA[<h2 id="Do-object-recognition-with-HOG-feature-and-SVM-classifier"><a href="#Do-object-recognition-with-HOG-feature-and-SVM-classifier" class="headerlink" title="Do object recognition with HOG feature and SVM classifier."></a>Do object recognition with HOG feature and SVM classifier.</h2><h3 id="Usage"><a href="#Usage" class="headerlink" title="[Usage]"></a>[Usage]</h3><h4 id="Training-Algorithm-Flow"><a href="#Training-Algorithm-Flow" class="headerlink" title="Training Algorithm Flow"></a>Training Algorithm Flow</h4><blockquote>
<ol>
<li><p>manually select representive _sample_s to generate <em>TrainSet</em> and <em>TestSet</em></p>
</li>
<li><p>Extract HOG feature for each samples either in <em>TrainSet</em> or in <em>TestSet</em></p>
</li>
<li><p>Attatch label to each <em>sample</em></p>
</li>
<li><p>Set parameters and train <em>Model</em> (you can determine save <em>Model</em> or not. If saved, <em>Model</em> will be saved into a XML file.) </p>
</li>
<li><p>Predict <em>sample</em>s in <em>TestSet</em> with SVM <em>Model</em></p>
</li>
</ol>
</blockquote>
<p>Training Example Code with EndToEnd<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">....</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> dirPath = <span class="string">&quot;...&quot;</span></span><br><span class="line">HOG_SVM hog_svm;</span><br><span class="line">hog_svm.SetSvmParameter(....);</span><br><span class="line"><span class="keyword">float</span> result = hog_svm.EndToEnd(dirPath);</span><br><span class="line"></span><br><span class="line">....</span><br><span class="line">....</span><br></pre></td></tr></table></figure></p>
<h4 id="Predict-with-Model-in-in-practice"><a href="#Predict-with-Model-in-in-practice" class="headerlink" title="Predict with Model in  in practice:"></a>Predict with Model in  in practice:</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">....</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">Mat src = .... ;</span><br><span class="line"><span class="built_in">string</span> modelPath = <span class="string">&quot;...&quot;</span></span><br><span class="line">HOG_SVM hog_svm(modelPath);</span><br><span class="line"><span class="keyword">float</span> result = hog_svm.predict(src);</span><br><span class="line"></span><br><span class="line">....</span><br><span class="line">....</span><br></pre></td></tr></table></figure>
<h3 id="Example"><a href="#Example" class="headerlink" title="[Example]"></a>[Example]</h3><p>White rectangle bounding boxes denote the <em>topk</em> (which select <em>topk</em> Main Region with <em>Depth Segmentation Algorithm in the previous blog</em>) color candidate regions to calculate HOG features, which will be classified by an SVM classifier. The recognition results of the right image show that cuboid regions filtered by the classifier are marked red, while the rest white regions are removed from candidate regions after classifying.</p>
<table>
<thead>
<tr>
<th style="text-align:center"><em>Color</em></th>
<th style="text-align:center"><em>Depth</em></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="/2016/04/27/CV/HOG-SVM/color.png" alt="Color"></td>
<td style="text-align:center"><img src="/2016/04/27/CV/HOG-SVM/depth.png" alt="Depth"></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center"><em>Regions</em></th>
<th style="text-align:center"><em>Classification</em></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="/2016/04/27/CV/HOG-SVM/regions.png" alt="Regions"></td>
<td style="text-align:center"><img src="/2016/04/27/CV/HOG-SVM/classification.png" alt="Classification"></td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h3 id="Head-File"><a href="#Head-File" class="headerlink" title="[Head File]"></a>[Head File]</h3><h4 id="HOG-SVM-hpp"><a href="#HOG-SVM-hpp" class="headerlink" title="HOG-SVM.hpp"></a>HOG-SVM.hpp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span><br><span class="line">    Utilize HOG as feature, and SVM as machine learning model.</span><br><span class="line">*******************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;FileOperation.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> cv::Mat;</span><br><span class="line"><span class="keyword">using</span> cv::Size;</span><br><span class="line"><span class="keyword">using</span> cv::Ptr;</span><br><span class="line"><span class="keyword">using</span> cv::ml::SVM;</span><br><span class="line"><span class="keyword">using</span> cv::Ptr;</span><br><span class="line"><span class="keyword">using</span> cv::Algorithm;</span><br><span class="line"><span class="keyword">using</span> cv::HOGDescriptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> GroundTruth{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> label;</span><br><span class="line">    <span class="built_in">string</span> imgname;</span><br><span class="line">    GroundTruth(<span class="keyword">int</span> c, <span class="built_in">string</span> path){</span><br><span class="line">        label = c;</span><br><span class="line">        imgname = path;</span><br><span class="line">    };</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> HOG_SVM: <span class="keyword">public</span> FileOperation</span><br><span class="line">{</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ptr&lt;SVM&gt; svm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/** @brief default constructor */</span></span><br><span class="line">    HOG_SVM();</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief HOG_SVM: load xml file as model</span><br><span class="line">     * @param model_path    xml loacation</span><br><span class="line">     */</span></span><br><span class="line">    HOG_SVM(<span class="built_in">string</span> model_path);</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief LoadModel: load xml file as model</span><br><span class="line">     * @param model_path    xml loacation</span><br><span class="line">     * @return success/ fail</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">LoadModel</span><span class="params">(<span class="built_in">string</span> model_path)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief ExtractFeature: extract HOG feature</span><br><span class="line">     * @param Img   input source</span><br><span class="line">     * @param mrs   scaled size</span><br><span class="line">     * @return      feature vector</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function">Mat <span class="title">ExtractFeature</span><span class="params">(Mat Img, Size mrs)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief GetDataSet: get dataset</span><br><span class="line">     * @param data_path     image location</span><br><span class="line">     * @return      feature matrix</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function">Mat <span class="title">GetDataSet</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; data_path)</span></span>;</span><br><span class="line">    <span class="function">Mat <span class="title">GetDataSet</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; data_path, <span class="built_in">vector</span>&lt;GroundTruth&gt;&amp; gt, <span class="keyword">int</span> c)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief SetSvmParameter: set training Parameter</span><br><span class="line">     * @param sv_num    max support vectors number</span><br><span class="line">     * @param c_r_type  classification/ regression</span><br><span class="line">     * @param kernel    linear / gussian / ploy ...</span><br><span class="line">     * @param gamma     if gussian need to set</span><br><span class="line">     * @return          1</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">SetSvmParameter</span><span class="params">(<span class="keyword">int</span> sv_num, <span class="keyword">int</span> c_r_type, <span class="keyword">int</span> kernel, <span class="keyword">double</span> gamma)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief Training: training with svm</span><br><span class="line">     * @param trainSet  train data mat</span><br><span class="line">     * @param label     label mat</span><br><span class="line">     * @param save      save model or not</span><br><span class="line">     * @param dir       save path</span><br><span class="line">     * @return          1</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Training</span><span class="params">(Mat&amp; trainSet, Mat&amp; label, <span class="keyword">bool</span> save, <span class="built_in">string</span> dir)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief Testing: if need to test, you can use this function</span><br><span class="line">     * @param testSet   test matirx</span><br><span class="line">     * @param gt        groundtruth, the othe impletementation is to show which are predicted error</span><br><span class="line">     * @return          1</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Testing</span><span class="params">(Mat&amp; testSet, <span class="keyword">float</span> gt)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Testing</span><span class="params">(Mat&amp; testSet, <span class="built_in">vector</span>&lt;GroundTruth&gt; gt)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief EndToEnd: the whole process, training and testing</span><br><span class="line">     * @param data_path datapath</span><br><span class="line">     * @return  error rate in the test data</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">float</span> <span class="title">EndToEnd</span><span class="params">(<span class="built_in">string</span> data_path)</span></span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief Predict: predict label in practical application</span><br><span class="line">     * @param image    image / region need to classify</span><br><span class="line">     * @return label</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">float</span> <span class="title">Predict</span><span class="params">(Mat&amp; image)</span></span>;</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="FileOperation-hpp"><a href="#FileOperation-hpp" class="headerlink" title="FileOperation.hpp"></a>FileOperation.hpp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span><br><span class="line">    Some Files and Os Operation, such as open, read, write, etc</span><br><span class="line">*******************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">vector</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Due to compile&apos;s  Named Return Value Optimization, directly return vector</span></span><br><span class="line"><span class="keyword">class</span> FileOperation{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief getFilename: get all files / subdirs Under dirpath</span><br><span class="line">     * @param dirPath</span><br><span class="line">     * @return subFiles</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">virtual</span> <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; getFilename(<span class="keyword">const</span> <span class="built_in">string</span>&amp; dirPath) ;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief getFilepath: get absolute path of files / subdirs Under dirpath</span><br><span class="line">     * @param dirPath</span><br><span class="line">     * @return absolutePaths</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">virtual</span> <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; getFilepath(<span class="keyword">const</span> <span class="built_in">string</span>&amp; dirPath) ;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief findFileName: filter out filename from absolute path</span><br><span class="line">     * @param path</span><br><span class="line">     * @return filename</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="built_in">string</span> <span class="title">findFileName</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; path)</span> </span>;</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="Marco-hpp"><a href="#Marco-hpp" class="headerlink" title="Marco.hpp"></a>Marco.hpp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span><br><span class="line">    Some efficient macros</span><br><span class="line">*******************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Mkdir if _DIR_ exist or not</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIR_NOEXIST_AND_CREATE(_DIR_)	\</span><br><span class="line">        system((<span class="string">&quot;mkdir &quot;</span> + _DIR_).c_str())</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Calcuate time consuming</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> elapsed_time  ((clock()- start)*1.0/CLOCKS_PER_SEC)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Output Message with cout</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MESSAGE_COUT(_TYPE_,_INFO_)	\</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;[&quot;</span> &lt;&lt; _TYPE_ &lt;&lt; <span class="string">&quot;]\t&quot;</span> &lt;&lt; _INFO_ &lt;&lt; std::endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Exchange x and y of Point</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> POINT_CVT(P)	\</span><br><span class="line">    P.x ^= P.y;			\</span><br><span class="line">    P.y ^= P.x;			\</span><br><span class="line">    P.x ^= P.y;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Get Mat element in Vector</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIM1TODIM2(I,J,V,ROW)	V[I*ROW+J]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Boundary detection</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BETWEEN(VAL,LOW,UP)	((VAL)&gt;(LOW)&amp;&amp;(VAL)&lt;(UP))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//The point at the center of region</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MiddlePoint(RECT)	\</span><br><span class="line">    Point(RECT.x + (RECT.width &gt;&gt; 1), RECT.y + (RECT.height &gt;&gt; 1))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_MIN(MAX, MIN, P, POS)	\</span><br><span class="line">    <span class="meta-keyword">if</span> (MAX.POS &lt; P.POS)	MAX.POS = P.POS;	\</span><br><span class="line">    <span class="meta-keyword">else</span> <span class="meta-keyword">if</span> (MIN.POS &gt; P.POS)	MIN.POS = P.POS;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Region_MAX_MIN(MAX, MIN, P)	\</span><br><span class="line">    MAX_MIN(MAX, MIN, P, x)			\</span><br><span class="line">    MAX_MIN(MAX, MIN, P, y)</span></span><br></pre></td></tr></table></figure>
<h3 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h3><h4 id="HOG-SVM-cpp"><a href="#HOG-SVM-cpp" class="headerlink" title="HOG-SVM.cpp"></a>HOG-SVM.cpp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;HOG-SVM.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;Macro.hpp&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> ml;</span><br><span class="line"></span><br><span class="line">HOG_SVM::HOG_SVM()</span><br><span class="line">{</span><br><span class="line">    svm = SVM::create();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">HOG_SVM::HOG_SVM(<span class="built_in">std</span>::<span class="built_in">string</span> model_path)</span><br><span class="line">{</span><br><span class="line">    svm = Algorithm::load&lt;SVM&gt;(model_path);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> HOG_SVM::LoadModel(<span class="built_in">std</span>::<span class="built_in">string</span> model_path)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">try</span>{</span><br><span class="line">        svm = Algorithm::load&lt;SVM&gt;(model_path);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">catch</span> (<span class="built_in">std</span>::exception e){</span><br><span class="line">        MESSAGE_COUT(<span class="string">&quot;ERROR&quot;</span>, e.what())</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    return flag;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">Mat HOG_SVM::ExtractFeature(Mat Img, Size mrs)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * @brief HOG_SVM::ExtractFeature</span><br><span class="line">        The story behind 1764</span><br><span class="line">        For example</span><br><span class="line">        window size is 64x64, block size is 16x16 and block setp is 8x8&#xA3;&#xAC;cell size is 8x8,</span><br><span class="line">        the block number window contained is (&#xA3;&#xA8;64-16&#xA3;&#xA9;/8+1)*((64-16)/8+1) = 7*7 = 49,</span><br><span class="line">        the cell number each block contained is (16/8)*(16/8) = 4</span><br><span class="line">        every cell can project 9 bin, and each bin related to 9 vector</span><br><span class="line">        so feature_dim  = B x C x N, and caulated result is  1764</span><br><span class="line">        (B is each window&apos;s blocks number, C is every block&apos;s cell number, n is bin number)</span><br><span class="line">     */</span></span><br><span class="line">    resize(Img, Img, mrs);</span><br><span class="line">    HOGDescriptor *hog = new HOGDescriptor(cvSize(<span class="number">64</span>, <span class="number">64</span>), cvSize(<span class="number">16</span>, <span class="number">16</span>), cvSize(<span class="number">8</span>, <span class="number">8</span>), cvSize(<span class="number">8</span>, <span class="number">8</span>), <span class="number">9</span>);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt; descriptors;</span><br><span class="line">    hog-&gt;compute(Img, descriptors, Size(<span class="number">1</span>, <span class="number">1</span>), Size(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    return Mat(descriptors).t();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">Mat HOG_SVM::GetDataSet(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; data_path)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">int</span> nImgNum = data_path.size();</span><br><span class="line">    <span class="keyword">int</span> success = <span class="number">0</span>;</span><br><span class="line">    Mat data_mat, src;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nImgNum; i++){</span><br><span class="line">        src = imread(data_path[i]);</span><br><span class="line">        <span class="keyword">if</span> (src.cols &amp;&amp; src.rows){</span><br><span class="line">            MESSAGE_COUT(<span class="string">&quot;PROCESS&quot;</span>, FileOperation::findFileName(data_path[i]) &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; success++)</span><br><span class="line">            Mat post = ExtractFeature(src, Size(<span class="number">64</span>, <span class="number">64</span>));</span><br><span class="line">            data_mat.push_back(post);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return data_mat;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">Mat HOG_SVM::GetDataSet(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; data_path, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;GroundTruth&gt;&amp; gt, <span class="keyword">int</span> c)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">int</span> nImgNum = data_path.size();</span><br><span class="line">    <span class="keyword">int</span> success = <span class="number">0</span>;</span><br><span class="line">    Mat data_mat;	<span class="comment">//feature matrix</span></span><br><span class="line">    Mat src;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> imgname;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nImgNum; i++){</span><br><span class="line">        src = imread(data_path[i]);</span><br><span class="line">        <span class="keyword">if</span> (src.cols &amp;&amp; src.rows){</span><br><span class="line">            imgname = FileOperation::findFileName(data_path[i]);</span><br><span class="line">            MESSAGE_COUT(<span class="string">&quot;PROCESS&quot;</span>, imgname &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; success++)</span><br><span class="line">            Mat post = ExtractFeature(src, Size(<span class="number">64</span>, <span class="number">64</span>));</span><br><span class="line">            data_mat.push_back(post);</span><br><span class="line">            gt.push_back(GroundTruth(c, imgname));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return data_mat;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> HOG_SVM::SetSvmParameter(<span class="keyword">int</span> sv_num, <span class="keyword">int</span> c_r_type, <span class="keyword">int</span> kernel, <span class="keyword">double</span> gamma)</span><br><span class="line">{</span><br><span class="line">    TermCriteria criteria = TermCriteria(CV_TERMCRIT_EPS, sv_num, FLT_EPSILON);	<span class="comment">//max support vectocr 200</span></span><br><span class="line">    svm-&gt;setType(c_r_type);</span><br><span class="line">    svm-&gt;setKernel(kernel);</span><br><span class="line">    <span class="keyword">if</span> (kernel == SVM::RBF)	svm-&gt;setGamma(gamma);</span><br><span class="line">    svm-&gt;setTermCriteria(criteria);</span><br><span class="line">    return <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> HOG_SVM::Training(Mat&amp; trainSet, Mat&amp; label, <span class="keyword">bool</span> save,<span class="built_in">std</span>::<span class="built_in">string</span> dir)</span><br><span class="line">{</span><br><span class="line">    SetSvmParameter(<span class="number">200</span>, SVM::C_SVC, SVM::LINEAR, <span class="number">0</span>);</span><br><span class="line">    Ptr&lt;TrainData&gt; traindata = ml::TrainData::create(trainSet, ROW_SAMPLE, label);</span><br><span class="line">    svm-&gt;train(traindata);</span><br><span class="line">    <span class="keyword">if</span> (save){</span><br><span class="line">        svm-&gt;save(dir+<span class="string">&quot;HOG-SVM-MODEL.xml&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    return <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> HOG_SVM::Testing(Mat&amp; testSet, <span class="keyword">float</span> gt)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">int</span> error = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> postnum = testSet.rows;</span><br><span class="line">    Mat res = Mat::zeros(postnum, <span class="number">1</span>, CV_32FC1);</span><br><span class="line">    svm-&gt;predict(testSet, res);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; postnum; i++)</span><br><span class="line">        <span class="keyword">if</span> (res.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">0</span>) != gt)</span><br><span class="line">            error++;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; error &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; postnum &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    return error;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> HOG_SVM::Testing(Mat&amp; testSet, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;GroundTruth&gt; gt)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">int</span> error = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> postnum = testSet.rows;</span><br><span class="line">    Mat res = Mat::zeros(postnum, <span class="number">1</span>, CV_32FC1);</span><br><span class="line">    svm-&gt;predict(testSet, res);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; postnum; i++)</span><br><span class="line">        <span class="keyword">if</span> (res.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">0</span>) != gt[i].label){</span><br><span class="line">            MESSAGE_COUT(<span class="string">&quot;ERROR&quot;</span>, gt[i].imgname &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; gt[i].label)</span><br><span class="line">            error++;</span><br><span class="line">        }</span><br><span class="line">    MESSAGE_COUT(<span class="string">&quot;RESULT&quot;</span>, error &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; postnum)</span><br><span class="line">    return error;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> HOG_SVM::Predict(Mat&amp; image)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (!image.rows)	return	<span class="number">-1</span>;</span><br><span class="line">    Mat gray;</span><br><span class="line">    cvtColor(image, gray, CV_BGR2GRAY);</span><br><span class="line">    Mat post = ExtractFeature(gray, Size(<span class="number">64</span>, <span class="number">64</span>));</span><br><span class="line">    gray.release();</span><br><span class="line">    return svm-&gt;predict(post);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> HOG_SVM::EndToEnd(<span class="built_in">std</span>::<span class="built_in">string</span> data_path)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">//Trainset path</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> trainPath = data_path + <span class="string">&quot;train\\&quot;</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; trainPathPositive = <span class="keyword">this</span>-&gt;getFilepath(trainPath + <span class="string">&quot;1\\&quot;</span>);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; trainPathNegative = <span class="keyword">this</span>-&gt;getFilepath(trainPath + <span class="string">&quot;-1\\&quot;</span>);</span><br><span class="line">    <span class="comment">//Testset path</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> testPath = data_path + <span class="string">&quot;test\\&quot;</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; testPathPositive = FileOperation::getCurrentDir(testPath + <span class="string">&quot;1\\&quot;</span>);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; testPathNegative = FileOperation::getCurrentDir(testPath + <span class="string">&quot;-1\\&quot;</span>);</span><br><span class="line">    <span class="comment">//Get trainset</span></span><br><span class="line">    Mat trainSet, label;</span><br><span class="line">    Mat trainSetP = GetDataSet(trainPathPositive);</span><br><span class="line">    Mat labelP = Mat::ones(trainSetP.rows, <span class="number">1</span>, CV_32SC1);</span><br><span class="line">    Mat trainSetN = GetDataSet(trainPathNegative);</span><br><span class="line">    Mat labelN = Mat::ones(trainSetN.rows, <span class="number">1</span>, CV_32SC1)*(<span class="number">-1</span>);</span><br><span class="line">    trainSet.push_back(trainSetP);</span><br><span class="line">    trainSet.push_back(trainSetN);</span><br><span class="line">    label.push_back(labelP);</span><br><span class="line">    label.push_back(labelN);</span><br><span class="line">    <span class="comment">//Training model</span></span><br><span class="line">    Training(trainSet, label, <span class="literal">true</span>, data_path);</span><br><span class="line">    <span class="comment">//Testing mode</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;GroundTruth&gt; gtP, gtN;</span><br><span class="line">    Mat testSetP = GetDataSet(testPathPositive, gtP, <span class="number">1</span>);</span><br><span class="line">    Mat testSetN = GetDataSet(testPathNegative, gtN, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">int</span> error = Testing(testSetP, gtP) + Testing(testSetN, gtN);</span><br><span class="line">    return <span class="number">1.0f</span>*error / (testSetP.rows + testSetN.rows);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h4 id="FileOperation-cpp"><a href="#FileOperation-cpp" class="headerlink" title="FileOperation.cpp"></a>FileOperation.cpp</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;FileOperation.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __linux</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; FileOperation::getFilename(<span class="keyword">const</span> <span class="built_in">string</span>&amp; dirPath)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">char</span> buff[<span class="number">1024</span>];</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; fileNames;</span><br><span class="line">    <span class="built_in">string</span> cmd = <span class="string">&quot;ls &quot;</span> + dirPath;</span><br><span class="line">    FILE* fstream = popen (cmd.c_str(), <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (fgets(buff, sizeof(buff), fstream)) {</span><br><span class="line">        fileNames.push_back(<span class="built_in">string</span>(buff));</span><br><span class="line">        fileNames.back().back() = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    return fileNames;</span><br><span class="line">}</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; FileOperation::getFilepath(<span class="keyword">const</span> <span class="built_in">string</span>&amp; dirPath)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">long</span>  hFile = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">struct</span> <span class="keyword">_finddata_t</span> fileinfo;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> p;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; files;</span><br><span class="line">    <span class="keyword">if</span> ((hFile = _findfirst(p.assign(dirPath).append(<span class="string">&quot;\\*&quot;</span>).c_str(), &amp;fileinfo)) != <span class="number">-1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (!(fileinfo.attrib &amp; _A_SUBDIR))</span><br><span class="line">                files.push_back(p.assign(dirPath).append(<span class="string">&quot;\\&quot;</span>).append(fileinfo.name));</span><br><span class="line">        } <span class="keyword">while</span> (_findnext(hFile, &amp;fileinfo) == <span class="number">0</span>);</span><br><span class="line">        _findclose(hFile);</span><br><span class="line">    }</span><br><span class="line">    return files;</span><br><span class="line">}</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; FileOperation::getFilepath(<span class="keyword">const</span> <span class="built_in">string</span>&amp; dirPath)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">char</span> buff[<span class="number">1024</span>];</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; filePaths;</span><br><span class="line">    <span class="built_in">string</span> cmd = <span class="string">&quot;ls &quot;</span> + dirPath;</span><br><span class="line">    FILE* fstream = popen (cmd.c_str(), <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (fgets(buff, sizeof(buff), fstream)) {</span><br><span class="line">        <span class="function"><span class="built_in">string</span> <span class="title">filename</span><span class="params">(buff)</span></span>;</span><br><span class="line">        filename.back() = <span class="number">0</span>;</span><br><span class="line">        filePaths.push_back(dirPath + filename);</span><br><span class="line">    }</span><br><span class="line">    return filePaths;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> FileOperation::findFileName(<span class="keyword">const</span> <span class="built_in">string</span>&amp; path)</span><br><span class="line">{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = path.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (path[i] == <span class="string">&apos;/&apos;</span>)</span><br><span class="line">            return path.substr(i + <span class="number">1</span>);</span><br><span class="line">    return <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    <span class="keyword">int</span> i, last;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; path[i]; i++)</span><br><span class="line">        <span class="keyword">if</span> (path[i] == <span class="string">&apos;/&apos;</span>)</span><br><span class="line">            last = i;</span><br><span class="line">    return path.substr(last + <span class="number">1</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Capture picture with camera]]></title>
      <url>http://idler1229.github.io/2016/04/26/CV/Capture-picture-with-camera/</url>
      <content type="html"><![CDATA[<h2 id="Capture-data-with-camera"><a href="#Capture-data-with-camera" class="headerlink" title="Capture data with camera"></a>Capture data with camera</h2><p>Press $Space$ to capture<br>Press $ESC$ to exit<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************************************************************</span><br><span class="line">	&gt; File Name: SplitVideo.cpp</span><br><span class="line">	&gt; Author: zyy</span><br><span class="line">	&gt; Mail: zyy34472@gmail.com</span><br><span class="line"> ************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">getCurrentTime</span><span class="params">()</span></span><br><span class="line"></span>{</span><br><span class="line">	<span class="keyword">time_t</span> t = time(<span class="number">0</span>); </span><br><span class="line">	<span class="keyword">char</span> tmp[<span class="number">64</span>]; </span><br><span class="line">	strftime( tmp, <span class="keyword">sizeof</span>(tmp), <span class="string">&quot;%Y-%m-%d-%X&quot;</span>,localtime(&amp;t) ); </span><br><span class="line">	mkdir(tmp, S_IRWXU); </span><br><span class="line">	return <span class="built_in">string</span>(tmp);	</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span><br><span class="line"></span>{</span><br><span class="line">	Mat frame;</span><br><span class="line">	<span class="function">VideoCapture <span class="title">vc</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="keyword">int</span> i, fps, mykey;</span><br><span class="line">	<span class="built_in">string</span> now = getCurrentTime();</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>, fps = <span class="number">30</span>; mykey = waitKey(<span class="number">1000</span>/fps); i++) {</span><br><span class="line">		vc &gt;&gt; frame;</span><br><span class="line">		imshow(<span class="string">&quot;test&quot;</span>, frame);</span><br><span class="line">		<span class="keyword">if</span> (mykey == <span class="number">32</span>) </span><br><span class="line">			imwrite(<span class="string">&quot;./&quot;</span> + now + <span class="string">&quot;/&quot;</span> + to_string(i) + <span class="string">&quot;.jpg&quot;</span>, frame);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (mykey == <span class="number">27</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">	return <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Split Video]]></title>
      <url>http://idler1229.github.io/2016/04/26/CV/Split-Video/</url>
      <content type="html"><![CDATA[<h2 id="Split-Video-to-a-batch-of-pictures"><a href="#Split-Video-to-a-batch-of-pictures" class="headerlink" title="Split Video to a batch of pictures"></a>Split Video to a batch of pictures</h2><p>Input&#xFF1A; Video file path, Output directory<br>Output&#xFF1A; png from frame to frame<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************************************************************</span><br><span class="line">	&gt; File Name: SplitVideo.cpp</span><br><span class="line">	&gt; Author: zyy</span><br><span class="line">	&gt; Mail: zyy34472@gmail.com</span><br><span class="line"> ************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;video.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span><br><span class="line"></span>{</span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">3</span>) {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;[Usage] &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t ./SplitVideo filename outputdir&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        return  <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">string</span> outdir = <span class="built_in">string</span>(argv[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">string</span> cmd = <span class="string">&quot;mkdir &quot;</span> + outdir +<span class="string">&quot; 2&gt;/dev/null&quot;</span>;</span><br><span class="line">    system(cmd.c_str());</span><br><span class="line">    VideoCapture vc;</span><br><span class="line">    vc.open(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (!vc.isOpened()) {</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Cann&apos;t open &quot;</span> &lt;&lt; argv[<span class="number">1</span>] &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        return <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    Mat frame;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; vc.read(frame); i++)</span><br><span class="line">        imwrite(outdir+ <span class="string">&quot;/&quot;</span> + to_string(i) + <span class="string">&quot;.png&quot;</span>, frame);</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[STL ALGO SET OPERATION]]></title>
      <url>http://idler1229.github.io/2016/04/26/STL/STL-ALGO-SET-OP/</url>
      <content type="html"><![CDATA[<h2 id="Five-Type-of-Set-algorithms"><a href="#Five-Type-of-Set-algorithms" class="headerlink" title="Five Type of  Set algorithms"></a>Five Type of  Set algorithms</h2><pre><code>In &lt;stl_algo.h&gt;
</code></pre><p>Set algorithms: includes, set_union, set_intersection, set_difference, set_symmetric_difference. All of these algorithms have the precondition that their input ranges are sorted and the postcondition that their output ranges are sorted.</p>
<p>Each algorithm has two impletementation, one of them with user-defined Compare function. In this article, we just list the first one and annotate requirement check code.<br><a id="more"></a></p>
<h3 id="Includes"><a href="#Includes" class="headerlink" title="Includes"></a>Includes</h3><h4 id="Prototype"><a href="#Prototype" class="headerlink" title="Prototype"></a>Prototype</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">includes</span><span class="params">(_InputIter1 __first1, _InputIter1 __last1,</span><br><span class="line">              _InputIter2 __first2, _InputIter2 __last2)</span></span></span><br></pre></td></tr></table></figure>
<h4 id="Impletementation"><a href="#Impletementation" class="headerlink" title="Impletementation"></a>Impletementation</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIter1, <span class="keyword">class</span> _InputIter2&gt;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">includes</span><span class="params">(_InputIter1 __first1, _InputIter1 __last1,</span><br><span class="line">              _InputIter2 __first2, _InputIter2 __last2)</span> </span>{</span><br><span class="line"><span class="comment">/*</span><br><span class="line">  __STL_REQUIRES(_InputIter1, _InputIterator);</span><br><span class="line">  __STL_REQUIRES(_InputIter2, _InputIterator);</span><br><span class="line">  __STL_REQUIRES_SAME_TYPE(</span><br><span class="line">       typename iterator_traits&lt;_InputIter1&gt;::value_type,</span><br><span class="line">       typename iterator_traits&lt;_InputIter2&gt;::value_type);</span><br><span class="line">  __STL_REQUIRES(typename iterator_traits&lt;_InputIter1&gt;::value_type,</span><br><span class="line">                 _LessThanComparable);</span><br><span class="line">*/</span></span><br><span class="line">  <span class="keyword">while</span> (__first1 != __last1 &amp;&amp; __first2 != __last2)</span><br><span class="line">    <span class="keyword">if</span> (*__first2 &lt; *__first1)</span><br><span class="line">      return <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(*__first1 &lt; *__first2) </span><br><span class="line">      ++__first1;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      ++__first1, ++__first2;</span><br><span class="line"></span><br><span class="line">  return __first2 == __last2;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h3 id="Set-Union"><a href="#Set-Union" class="headerlink" title="Set Union"></a>Set Union</h3><h4 id="Prototype-1"><a href="#Prototype-1" class="headerlink" title="Prototype"></a>Prototype</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_<span class="function">OutputIter <span class="title">set_union</span><span class="params">(_InputIter1 __first1, _InputIter1 __last1,</span><br><span class="line">                      _InputIter2 __first2, _InputIter2 __last2,</span><br><span class="line">                      _OutputIter __result)</span></span></span><br></pre></td></tr></table></figure>
<h4 id="Impletementation-1"><a href="#Impletementation-1" class="headerlink" title="Impletementation"></a>Impletementation</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIter1, <span class="keyword">class</span> _InputIter2, <span class="keyword">class</span> _OutputIter&gt;</span><br><span class="line">_<span class="function">OutputIter <span class="title">set_union</span><span class="params">(_InputIter1 __first1, _InputIter1 __last1,</span><br><span class="line">                      _InputIter2 __first2, _InputIter2 __last2,</span><br><span class="line">                      _OutputIter __result)</span> </span>{</span><br><span class="line"><span class="comment">/*</span><br><span class="line">  __STL_REQUIRES(_InputIter1, _InputIterator);</span><br><span class="line">  __STL_REQUIRES(_InputIter2, _InputIterator);</span><br><span class="line">  __STL_REQUIRES(_OutputIter, _OutputIterator);</span><br><span class="line">  __STL_REQUIRES_SAME_TYPE(</span><br><span class="line">       typename iterator_traits&lt;_InputIter1&gt;::value_type,</span><br><span class="line">       typename iterator_traits&lt;_InputIter2&gt;::value_type);</span><br><span class="line">  __STL_REQUIRES(typename iterator_traits&lt;_InputIter1&gt;::value_type,</span><br><span class="line">                 _LessThanComparable);</span><br><span class="line">*/</span></span><br><span class="line">  <span class="keyword">while</span> (__first1 != __last1 &amp;&amp; __first2 != __last2) {</span><br><span class="line">    <span class="keyword">if</span> (*__first1 &lt; *__first2) {</span><br><span class="line">      *__result = *__first1;</span><br><span class="line">      ++__first1;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (*__first2 &lt; *__first1) {</span><br><span class="line">      *__result = *__first2;</span><br><span class="line">      ++__first2;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">      *__result = *__first1;</span><br><span class="line">      ++__first1;</span><br><span class="line">      ++__first2;</span><br><span class="line">    }</span><br><span class="line">    ++__result;</span><br><span class="line">  }</span><br><span class="line">  return copy(__first2, __last2, copy(__first1, __last1, __result));</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h3 id="Set-Intersection"><a href="#Set-Intersection" class="headerlink" title="Set Intersection"></a>Set Intersection</h3><h4 id="Prototype-2"><a href="#Prototype-2" class="headerlink" title="Prototype"></a>Prototype</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_<span class="function">OutputIter <span class="title">set_intersection</span><span class="params">(_InputIter1 __first1, _InputIter1 __last1,</span><br><span class="line">                             _InputIter2 __first2, _InputIter2 __last2,</span><br><span class="line">                             _OutputIter __result)</span></span></span><br></pre></td></tr></table></figure>
<h4 id="Impletementation-2"><a href="#Impletementation-2" class="headerlink" title="Impletementation"></a>Impletementation</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIter1, <span class="keyword">class</span> _InputIter2, <span class="keyword">class</span> _OutputIter&gt;</span><br><span class="line">_<span class="function">OutputIter <span class="title">set_intersection</span><span class="params">(_InputIter1 __first1, _InputIter1 __last1,</span><br><span class="line">                             _InputIter2 __first2, _InputIter2 __last2,</span><br><span class="line">                             _OutputIter __result)</span> </span>{</span><br><span class="line"><span class="comment">/*</span><br><span class="line">  __STL_REQUIRES(_InputIter1, _InputIterator);</span><br><span class="line">  __STL_REQUIRES(_InputIter2, _InputIterator);</span><br><span class="line">  __STL_REQUIRES(_OutputIter, _OutputIterator);</span><br><span class="line">  __STL_REQUIRES_SAME_TYPE(</span><br><span class="line">       typename iterator_traits&lt;_InputIter1&gt;::value_type,</span><br><span class="line">       typename iterator_traits&lt;_InputIter2&gt;::value_type);</span><br><span class="line">  __STL_REQUIRES(typename iterator_traits&lt;_InputIter1&gt;::value_type,</span><br><span class="line">                 _LessThanComparable);</span><br><span class="line">*/</span></span><br><span class="line">  <span class="keyword">while</span> (__first1 != __last1 &amp;&amp; __first2 != __last2) </span><br><span class="line">    <span class="keyword">if</span> (*__first1 &lt; *__first2) </span><br><span class="line">      ++__first1;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (*__first2 &lt; *__first1) </span><br><span class="line">      ++__first2;</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">      *__result = *__first1;</span><br><span class="line">      ++__first1;</span><br><span class="line">      ++__first2;</span><br><span class="line">      ++__result;</span><br><span class="line">    }</span><br><span class="line">  return __result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h3 id="Set-Difference"><a href="#Set-Difference" class="headerlink" title="Set Difference"></a>Set Difference</h3><h4 id="Prototype-3"><a href="#Prototype-3" class="headerlink" title="Prototype"></a>Prototype</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_<span class="function">OutputIter <span class="title">set_difference</span><span class="params">(_InputIter1 __first1, _InputIter1 __last1,</span><br><span class="line">                           _InputIter2 __first2, _InputIter2 __last2, </span><br><span class="line">                           _OutputIter __result)</span></span></span><br></pre></td></tr></table></figure>
<h4 id="Impletementation-3"><a href="#Impletementation-3" class="headerlink" title="Impletementation"></a>Impletementation</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIter1, <span class="keyword">class</span> _InputIter2, <span class="keyword">class</span> _OutputIter&gt;</span><br><span class="line">_<span class="function">OutputIter <span class="title">set_difference</span><span class="params">(_InputIter1 __first1, _InputIter1 __last1,</span><br><span class="line">                           _InputIter2 __first2, _InputIter2 __last2,</span><br><span class="line">                           _OutputIter __result)</span> </span>{</span><br><span class="line"><span class="comment">/*</span><br><span class="line">  __STL_REQUIRES(_InputIter1, _InputIterator);</span><br><span class="line">  __STL_REQUIRES(_InputIter2, _InputIterator);</span><br><span class="line">  __STL_REQUIRES(_OutputIter, _OutputIterator);</span><br><span class="line">  __STL_REQUIRES_SAME_TYPE(</span><br><span class="line">       typename iterator_traits&lt;_InputIter1&gt;::value_type,</span><br><span class="line">       typename iterator_traits&lt;_InputIter2&gt;::value_type);</span><br><span class="line">  __STL_REQUIRES(typename iterator_traits&lt;_InputIter1&gt;::value_type,</span><br><span class="line">                 _LessThanComparable);</span><br><span class="line">*/</span></span><br><span class="line">  <span class="keyword">while</span> (__first1 != __last1 &amp;&amp; __first2 != __last2)</span><br><span class="line">    <span class="keyword">if</span> (*__first1 &lt; *__first2) {</span><br><span class="line">      *__result = *__first1;</span><br><span class="line">      ++__first1;</span><br><span class="line">      ++__result;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (*__first2 &lt; *__first1)</span><br><span class="line">      ++__first2;</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">      ++__first1;</span><br><span class="line">      ++__first2;</span><br><span class="line">    }</span><br><span class="line">  return copy(__first1, __last1, __result);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h3 id="Set-Symmetric-Difference"><a href="#Set-Symmetric-Difference" class="headerlink" title="Set Symmetric Difference"></a>Set Symmetric Difference</h3><h4 id="Prototype-4"><a href="#Prototype-4" class="headerlink" title="Prototype"></a>Prototype</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_<span class="function">OutputIter <span class="title">set_symmetric_difference</span><span class="params">(_InputIter1 __first1, _InputIter1 __last1,</span><br><span class="line">                         _InputIter2 __first2, _InputIter2 __last2,</span><br><span class="line">                         _OutputIter __result)</span></span></span><br></pre></td></tr></table></figure>
<h4 id="Impletementation-4"><a href="#Impletementation-4" class="headerlink" title="Impletementation"></a>Impletementation</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> _InputIter1, <span class="keyword">class</span> _InputIter2, <span class="keyword">class</span> _OutputIter&gt;</span><br><span class="line">_<span class="function">OutputIter </span><br><span class="line"><span class="title">set_symmetric_difference</span><span class="params">(_InputIter1 __first1, _InputIter1 __last1,</span><br><span class="line">                         _InputIter2 __first2, _InputIter2 __last2,</span><br><span class="line">                         _OutputIter __result)</span> </span>{</span><br><span class="line"><span class="comment">/*</span><br><span class="line">  __STL_REQUIRES(_InputIter1, _InputIterator);</span><br><span class="line">  __STL_REQUIRES(_InputIter2, _InputIterator);</span><br><span class="line">  __STL_REQUIRES(_OutputIter, _OutputIterator);</span><br><span class="line">  __STL_REQUIRES_SAME_TYPE(</span><br><span class="line">       typename iterator_traits&lt;_InputIter1&gt;::value_type,</span><br><span class="line">       typename iterator_traits&lt;_InputIter2&gt;::value_type);</span><br><span class="line">  __STL_REQUIRES(typename iterator_traits&lt;_InputIter1&gt;::value_type,</span><br><span class="line">                 _LessThanComparable);</span><br><span class="line">*/</span></span><br><span class="line">  <span class="keyword">while</span> (__first1 != __last1 &amp;&amp; __first2 != __last2)</span><br><span class="line">    <span class="keyword">if</span> (*__first1 &lt; *__first2) {</span><br><span class="line">      *__result = *__first1;</span><br><span class="line">      ++__first1;</span><br><span class="line">      ++__result;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (*__first2 &lt; *__first1) {</span><br><span class="line">      *__result = *__first2;</span><br><span class="line">      ++__first2;</span><br><span class="line">      ++__result;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">      ++__first1;</span><br><span class="line">      ++__first2;</span><br><span class="line">    }</span><br><span class="line">  return copy(__first2, __last2, copy(__first1, __last1, __result));</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Reading Books]]></title>
      <url>http://idler1229.github.io/2016/04/26/Books/Reading-Books/</url>
      <content type="html"><![CDATA[<h2 id="Book-List"><a href="#Book-List" class="headerlink" title="Book List"></a>Book List</h2><h3 id="&#x3010;Reading&#x3011;"><a href="#&#x3010;Reading&#x3011;" class="headerlink" title="&#x3010;Reading&#x3011;"></a>&#x3010;Reading&#x3011;</h3><h5 id="&#x3010;Linux&#x3011;"><a href="#&#x3010;Linux&#x3011;" class="headerlink" title="&#x3010;Linux&#x3011;"></a>&#x3010;Linux&#x3011;</h5><pre><code>Linux&#x5185;&#x6838;&#x8BBE;&#x8BA1;&#x4E0E;&#x5B9E;&#x73B0;
Linux&#x5185;&#x6838;&#x8BBE;&#x8BA1;&#x7684;&#x827A;&#x672F;
&#x6DF1;&#x5EA6;&#x63A2;&#x7D22;Linux&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF1A;&#x7CFB;&#x7EDF;&#x6784;&#x5EFA;&#x548C;&#x539F;&#x7406;&#x89E3;&#x6790;
&#x6DF1;&#x5165;&#x7406;&#x89E3;Linux&#x5185;&#x6838;
&#x6DF1;&#x5165;Linux&#x5185;&#x6838;&#x67B6;&#x6784;

&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;:&#x4F7F;&#x7528;Linux&#x6C47;&#x7F16;&#x8BED;&#x8A00;
Linux&#x7CFB;&#x7EDF;&#x7F16;&#x7A0B;
Linux&#x9AD8;&#x6027;&#x80FD;&#x670D;&#x52A1;&#x5668;&#x7F16;&#x7A0B;    
APUE
UNP-V1
UNP-V2
</code></pre><h5 id="&#x3010;Machine-Learning&#x3011;"><a href="#&#x3010;Machine-Learning&#x3011;" class="headerlink" title="&#x3010;Machine Learning&#x3011;"></a>&#x3010;Machine Learning&#x3011;</h5><pre><code>PRML
ESL
Data Mining: Practical Machine Learning Tools and Techniques
Ensemble Methods: Foundations and Algorithms
Understanding Machine Learning: From Theory To Algorithm
&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5B9E;&#x6218;

&#x673A;&#x5668;&#x5B66;&#x4E60;(&#x897F;&#x74DC;&#x4E66;)
</code></pre><h5 id="&#x3010;Computer-Vision&#x3011;"><a href="#&#x3010;Computer-Vision&#x3011;" class="headerlink" title="&#x3010;Computer Vision&#x3011;"></a>&#x3010;Computer Vision&#x3011;</h5><pre><code>&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x4E0E;&#x56FE;&#x50CF;&#x5904;&#x7406;
&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x2014;&#x2014;&#x7B97;&#x6CD5;&#x4E0E;&#x5E94;&#x7528;
&#x6570;&#x5B57;&#x56FE;&#x50CF;&#x5904;&#x7406;
</code></pre><h5 id="&#x3010;Algorithm&#x3011;"><a href="#&#x3010;Algorithm&#x3011;" class="headerlink" title="&#x3010;Algorithm&#x3011;"></a>&#x3010;Algorithm&#x3011;</h5><pre><code>&#x7F16;&#x7A0B;&#x73E0;&#x7391;&#xFF08;&#x7EED;&#xFF09;
&#x7B97;&#x6CD5;&#x8C1C;&#x9898;

&#x5177;&#x4F53;&#x6570;&#x5B66;
&#x8FF7;&#x832B;&#x7684;&#x65C5;&#x884C;&#x5546;&#xFF1A;&#x4E00;&#x4E2A;&#x65E0;&#x5904;&#x4E0D;&#x5728;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x7B97;&#x6CD5;&#x95EE;&#x9898;
</code></pre><h5 id="&#x3010;Basic&#x3011;"><a href="#&#x3010;Basic&#x3011;" class="headerlink" title="&#x3010;Basic&#x3011;"></a>&#x3010;Basic&#x3011;</h5><pre><code>&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;
</code></pre><h5 id="&#x3010;Network&#x3011;"><a href="#&#x3010;Network&#x3011;" class="headerlink" title="&#x3010;Network&#x3011;"></a>&#x3010;Network&#x3011;</h5><pre><code>&#x7269;&#x8054;&#x7F51;&#x5BFC;&#x8BBA;(&#x5218;&#x4E91;&#x6D69; &#x7F16;&#x8457;)    
Wireshark&#x7F51;&#x7EDC;&#x5206;&#x6790;
Nmap&#x626B;&#x63CF;&#x539F;&#x7406;&#x548C;&#x5E94;&#x7528;

TCP/IP&#x8BE6;&#x89E3;-V3
HTTP&#x6743;&#x5A01;&#x6307;&#x5357;
Wireshark&#x7F51;&#x7EDC;&#x5206;&#x6790;
&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;
&#x6DF1;&#x5165;&#x7406;&#x89E3;Nginx
</code></pre><h5 id="&#x3010;HTML&#x3011;"><a href="#&#x3010;HTML&#x3011;" class="headerlink" title="&#x3010;HTML&#x3011;"></a>&#x3010;HTML&#x3011;</h5><pre><code>Headfirst html + css
</code></pre><h5 id="&#x3010;Programming&#x3011;"><a href="#&#x3010;Programming&#x3011;" class="headerlink" title="&#x3010;Programming&#x3011;"></a>&#x3010;Programming&#x3011;</h5><pre><code>Effective C++
More Effective C++
Effective Modern C++
Think in C++
Effective STL
STL&#x6E90;&#x4EE3;&#x7801;&#x5206;&#x6790;
&#x6DF1;&#x5EA6;&#x63A2;&#x7D22;C++&#x5BF9;&#x8C61;&#x6A21;&#x578B;
C++&#x7F16;&#x7A0B;&#x89C4;&#x8303;101&#x6761;

Think in Java
Effective Java
&#x6DF1;&#x5165;&#x7406;&#x89E3;Java&#x865A;&#x62DF;&#x673A;

Java&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x5B9E;&#x6218;

Haskell&#x8DA3;&#x5B66;&#x6307;&#x5357;
&#x8BA1;&#x7B97;&#x673A;&#x7A0B;&#x5E8F;&#x7684;&#x6784;&#x9020;&#x548C;&#x89E3;&#x91CA; 

The Awk Programming Language       
</code></pre><h5 id="&#x3010;History&#x3011;"><a href="#&#x3010;History&#x3011;" class="headerlink" title="&#x3010;History&#x3011;"></a>&#x3010;History&#x3011;</h5><pre><code>&#x4FE1;&#x606F;&#x7B80;&#x53F2;
&#x65F6;&#x95F4;&#x7B80;&#x53F2;
&#x6587;&#x660E;&#x4E4B;&#x5149;
Unix&#x7F16;&#x7A0B;&#x827A;&#x672F;

&#x903B;&#x8F91;&#x7684;&#x5F15;&#x64CE;
&#x96C6;&#x5F02;&#x74A7;
</code></pre><h5 id="&#x3010;Thinking&#x3011;"><a href="#&#x3010;Thinking&#x3011;" class="headerlink" title="&#x3010;Thinking&#x3011;"></a>&#x3010;Thinking&#x3011;</h5><pre><code>&#x8BBE;&#x8BA1;&#x539F;&#x672C;
&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF1A;&#x53EF;&#x590D;&#x7528;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x8F6F;&#x4EF6;&#x7684;&#x57FA;&#x7840;
&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x601D;&#x7EF4;&#x4FEE;&#x70BC;&#xFF1A;&#x5F00;&#x53D1;&#x8BA4;&#x77E5;&#x6F5C;&#x80FD;&#x7684;&#x4E5D;&#x5802;&#x8BFE;
&#x9AD8;&#x6548;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x56DB;&#x5341;&#x4E94;&#x4E2A;&#x4E60;&#x60EF;&#xFF1A;&#x654F;&#x6377;&#x5F00;&#x53D1;&#x4FEE;&#x70BC;&#x4E4B;&#x9053;

&#x6784;&#x5EFA;&#x4E4B;&#x6CD5;&#xFF1A;&#x73B0;&#x4EE3;&#x8F6F;&#x4EF6;&#x5DE5;&#x7A0B;

&#x7F16;&#x7801;&#xFF1A;&#x9690;&#x533F;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x786C;&#x4EF6;&#x80CC;&#x540E;&#x7684;&#x8BED;&#x8A00;

&#x4EE3;&#x7801;&#x6574;&#x6D01;&#x4E4B;&#x9053;    

&#x4EE3;&#x7801;&#x5927;&#x5168;
</code></pre><h5 id="&#x3010;Hacker&#x3011;"><a href="#&#x3010;Hacker&#x3011;" class="headerlink" title="&#x3010;Hacker&#x3011;"></a>&#x3010;Hacker&#x3011;</h5><pre><code>&#x7070;&#x5E3D;&#x9ED1;&#x5BA2;
&#x6B3A;&#x9A97;&#x7684;&#x827A;&#x672F;
web&#x4E4B;&#x56F0;&#xFF1A;&#x73B0;&#x4EE3;web&#x5E94;&#x7528;&#x5B89;&#x5168;&#x6307;&#x5357;
web&#x6E17;&#x900F;&#x6D4B;&#x8BD5;&#xFF1A;&#x4F7F;&#x7528;Kali Linux
&#x9ED1;&#x5BA2;&#x6280;&#x672F;&#x653B;&#x9632;&#x5B9D;&#x5178;&#xFF1A;web&#x5B9E;&#x6218;&#x7BC7;
&#x767D;&#x5E3D;&#x5B50;&#x8BB2;web&#x5B89;&#x5168;

Metasploit&#x6E17;&#x900F;&#x6D4B;&#x8BD5;&#x9B54;&#x9B3C;&#x8BAD;&#x7EC3;&#x8425;
</code></pre><h5 id="&#x3010;Psychology&#x3011;"><a href="#&#x3010;Psychology&#x3011;" class="headerlink" title="&#x3010;Psychology&#x3011;"></a>&#x3010;Psychology&#x3011;</h5><pre><code>&#x4E60;&#x60EF;&#x7684;&#x529B;&#x91CF;
&#x60C5;&#x5546;
</code></pre><h5 id="&#x3010;Other&#x3011;"><a href="#&#x3010;Other&#x3011;" class="headerlink" title="&#x3010;Other&#x3011;"></a>&#x3010;Other&#x3011;</h5><pre><code>&#x7EA2;&#x592A;&#x9633;&#x662F;&#x600E;&#x6837;&#x5347;&#x8D77;&#x7684;
</code></pre><hr>
<h3 id="&#x3010;Finish&#x3011;"><a href="#&#x3010;Finish&#x3011;" class="headerlink" title="&#x3010;Finish&#x3011;"></a>&#x3010;Finish&#x3011;</h3><h5 id="&#x3010;Thinking&#x3011;-1"><a href="#&#x3010;Thinking&#x3011;-1" class="headerlink" title="&#x3010;Thinking&#x3011;"></a>&#x3010;Thinking&#x3011;</h5><pre><code>&#x4EBA;&#x6708;&#x795E;&#x8BDD;
&#x6570;&#x5B66;&#x4E4B;&#x7F8E;
&#x7F16;&#x5199;&#x53EF;&#x8BFB;&#x4EE3;&#x7801;&#x7684;&#x827A;&#x672F;
&#x6697;&#x65F6;&#x95F4;
</code></pre><h5 id="&#x3010;History-amp-Biography&#x3011;"><a href="#&#x3010;History-amp-Biography&#x3011;" class="headerlink" title="&#x3010;History &amp; Biography&#x3011;"></a>&#x3010;History &amp; Biography&#x3011;</h5><pre><code>&#x6D6A;&#x6F6E;&#x4E4B;&#x5DC5;
&#x5927;&#x5B66;&#x4E4B;&#x8DEF;
Just For Fun
&#x5927;&#x6559;&#x5802;&#x4E0E;&#x5E02;&#x96C6;
&#x9ED1;&#x5BA2;&#x4E0E;&#x753B;&#x5BB6;
&#x4ECE;0&#x5230;1
&#x8F6F;&#x4EF6;&#x968F;&#x60F3;&#x5F55;

&#x4E2D;&#x534E;&#x53F2;
</code></pre><h5 id="&#x3010;Technique&#x3011;"><a href="#&#x3010;Technique&#x3011;" class="headerlink" title="&#x3010;Technique&#x3011;"></a>&#x3010;Technique&#x3011;</h5><pre><code>&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x5FC3;&#x667A;: &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E4B;&#x54F2;&#x5B66;&#x539F;&#x7406;
C&#x9677;&#x9631;&#x4E0E;&#x7F3A;&#x9677;
</code></pre><h5 id="&#x3010;Machine-Learning&#x3011;-1"><a href="#&#x3010;Machine-Learning&#x3011;-1" class="headerlink" title="&#x3010;Machine Learning&#x3011;"></a>&#x3010;Machine Learning&#x3011;</h5><pre><code>&#x7EDF;&#x8BA1;&#x5B66;&#x4E60;&#x65B9;&#x6CD5;
</code></pre><h5 id="&#x3010;Computer-Vision&#x3011;-1"><a href="#&#x3010;Computer-Vision&#x3011;-1" class="headerlink" title="&#x3010;Computer Vision&#x3011;"></a>&#x3010;Computer Vision&#x3011;</h5><pre><code>Learning Opencv
OpenCV.2.Computer.Vision.Application.Programming.Cookbook
</code></pre><h5 id="&#x3010;Trick&#x3011;"><a href="#&#x3010;Trick&#x3011;" class="headerlink" title="&#x3010;Trick&#x3011;"></a>&#x3010;Trick&#x3011;</h5><pre><code>&#x7F16;&#x7A0B;&#x73E0;&#x7391;
&#x7F16;&#x7A0B;&#x4E4B;&#x7F8E;
&#x5251;&#x6307;Offer
</code></pre><h5 id="&#x3010;Psychology&#x3011;-1"><a href="#&#x3010;Psychology&#x3011;-1" class="headerlink" title="&#x3010;Psychology&#x3011;"></a>&#x3010;Psychology&#x3011;</h5><pre><code>&#x5F71;&#x54CD;&#x529B;
&#x610F;&#x5FD7;&#x529B;
&#x81EA;&#x63A7;&#x529B;
</code></pre><h5 id="&#x3010;Novel&#x3011;"><a href="#&#x3010;Novel&#x3011;" class="headerlink" title="&#x3010;Novel&#x3011;"></a>&#x3010;Novel&#x3011;</h5><pre><code>&#x96CD;&#x6B63;&#x5251;&#x4FA0;&#x56FE;&#x5341;&#x4E09;&#x90E8;
&#x9EC4;&#x91D1;&#x65F6;&#x4EE3;    
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[OpenCV3.0-RealSense-Configuration]]></title>
      <url>http://idler1229.github.io/2016/04/26/CV/OpenCV3-0-RealSense-Configuration/</url>
      <content type="html"><![CDATA[<h2 id="1-Configure-RealSense"><a href="#1-Configure-RealSense" class="headerlink" title="1. Configure RealSense"></a>1. Configure RealSense</h2><h3 id="Install-the-driver-of-RealSense-F200-R200"><a href="#Install-the-driver-of-RealSense-F200-R200" class="headerlink" title="Install the driver of RealSense F200/R200"></a>Install the driver of RealSense F200/R200</h3><pre><code>EX:   
    intel_rs_dcm_f200_1.4.27.41944.exe
    intel_rs_dcm_r200_2.0.3.39488.exe
</code></pre><h4 id="RSSDK-DIR-props"><a href="#RSSDK-DIR-props" class="headerlink" title="$ (RSSDK_DIR) / props"></a>$ (RSSDK_DIR) / props</h4><pre><code>VS2010-13.Integration.MD.props
VS2010-13.Integration.MT.props
</code></pre><h4 id="Visual-Studio-2010-2013-Integration"><a href="#Visual-Studio-2010-2013-Integration" class="headerlink" title="Visual Studio 2010-2013 Integration:"></a>Visual Studio 2010-2013 Integration:</h4><pre><code>Open property manager in view-&gt;PropertyManager. 

For multi-threaded runtime projects, add property sheet
  VS2010-13.Integration.MT.props to all Debug/Release builds
For multi-threaded DLL runtime projects,
  Add property sheet VS2010-13.Integration.MD.props to all Debug/Release builds.

Build your SDK projects
</code></pre><h2 id="2-Configure-OpenCV-3-0"><a href="#2-Configure-OpenCV-3-0" class="headerlink" title="2. Configure OpenCV 3.0"></a>2. Configure OpenCV 3.0</h2><h3 id="Install-the-Opencv-3-0-for-Windows-to"><a href="#Install-the-Opencv-3-0-for-Windows-to" class="headerlink" title="Install the Opencv 3.0 for Windows to"></a>Install the Opencv 3.0 for Windows to</h3><pre><code>EX:    
    D:\OpenCV3.0
</code></pre><h4 id="Configure-environment-variables"><a href="#Configure-environment-variables" class="headerlink" title="Configure environment variables"></a>Configure environment variables</h4><h5 id="System-variables"><a href="#System-variables" class="headerlink" title="System variables:"></a>System variables:</h5><pre><code>[Path] add D:\OpenCV3.0\opencv\build\x86\vc12\bin
</code></pre><h5 id="User-variables"><a href="#User-variables" class="headerlink" title="User variables:"></a>User variables:</h5><pre><code>new [opencv] = D:\OpenCV3.0\opencv\build\x86
</code></pre><h4 id="New-VS2013-Project"><a href="#New-VS2013-Project" class="headerlink" title="New VS2013 Project"></a>New VS2013 Project</h4><h5 id="Include-directory"><a href="#Include-directory" class="headerlink" title="Include directory:"></a>Include directory:</h5><pre><code>EX:
    D:\OpenCV3.0\opencv\build\include
    D:\OpenCV3.0\opencv\build\include\opencv
    D:\OpenCV3.0\opencv\build\include\opencv2
</code></pre><h5 id="Library-directory"><a href="#Library-directory" class="headerlink" title="Library directory:"></a>Library directory:</h5><pre><code>EX:
    D:\OpenCV3.0\opencv\build\x86\vc12\lib
</code></pre><h5 id="Linker-gt-Input-gt-Additional-dependencies"><a href="#Linker-gt-Input-gt-Additional-dependencies" class="headerlink" title="Linker-&gt;Input-&gt;Additional dependencies"></a>Linker-&gt;Input-&gt;Additional dependencies</h5><pre><code>opencv_ts300d.lib
opencv_world300d.lib
libjasperd.lib
libjpegd.lib
libpngd.lib
libtiffd.lib
libwebpd.lib
opencv_calib3d300d.lib
opencv_core300d.lib
opencv_features2d300d.lib
opencv_flann300d.lib
opencv_highgui300d.lib
opencv_imgcodecs300d.lib
opencv_imgproc300d.lib
opencv_ml300d.lib
opencv_objdetect300d.lib
opencv_photo300d.lib
opencv_shape300d.lib
opencv_stitching300d.lib
opencv_superres300d.lib
opencv_video300d.lib
opencv_videoio300d.lib
opencv_videostab300d.lib
zlibd.lib
msvcrtd.lib
libcmtd.lib
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Gedit Garbled]]></title>
      <url>http://idler1229.github.io/2016/04/26/Linux/Solution/Gedit-gibberish-onscreen/</url>
      <content type="html"><![CDATA[<h2 id="Gedit-Garbled"><a href="#Gedit-Garbled" class="headerlink" title="Gedit Garbled"></a>Gedit Garbled</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gsettings set org.gnome.gedit.preferences.encodings auto-detected &quot;[&apos;GB18030&apos;, &apos;GB2312&apos;, &apos;GBK&apos;, &apos;UTF-8&apos;, &apos;BIG5&apos;, &apos;CURRENT&apos;, &apos;UTF-16&apos;]&quot;</span><br><span class="line"></span><br><span class="line">gsettings set org.gnome.gedit.preferences.encodings shown-in-menu  &quot;[&apos;GB18030&apos;, &apos;GB2312&apos;, &apos;GBK&apos;, &apos;UTF-8&apos;, &apos;BIG5&apos;, &apos;CURRENT&apos;, &apos;UTF-16&apos;]&quot;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Configure JDK on Linux]]></title>
      <url>http://idler1229.github.io/2016/04/26/Programming/JAVA/Configure-JDK-on-Linux/</url>
      <content type="html"><![CDATA[<h2 id="Configure-JDK"><a href="#Configure-JDK" class="headerlink" title="Configure JDK"></a>Configure JDK</h2><h3 id="Decompression-JDK-to"><a href="#Decompression-JDK-to" class="headerlink" title="Decompression JDK to"></a>Decompression JDK to</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/lib/jvm</span><br></pre></td></tr></table></figure>
<h3 id="See-if-there-is-other-optional-Java"><a href="#See-if-there-is-other-optional-Java" class="headerlink" title="See if there is other optional Java"></a>See if there is other optional Java</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --list java</span><br></pre></td></tr></table></figure>
<h3 id="Configure-environment-varible&#xFF1A;"><a href="#Configure-environment-varible&#xFF1A;" class="headerlink" title="Configure environment varible&#xFF1A;"></a>Configure environment varible&#xFF1A;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br><span class="line"><span class="comment">## copy and paste </span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/jdk1.7.0_55   </span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">${JAVA_HOME}</span>/jre  </span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:{JRE_HOME}/lib  </span><br><span class="line"><span class="built_in">export</span> PATH=PATH</span><br></pre></td></tr></table></figure>
<h3 id="Success-or-Fail"><a href="#Success-or-Fail" class="headerlink" title="Success or Fail"></a>Success or Fail</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux Add Fonts]]></title>
      <url>http://idler1229.github.io/2016/04/26/Linux/Solution/Linux-Add-Fonts/</url>
      <content type="html"><![CDATA[<h2 id="Add-fonts-on-Linux"><a href="#Add-fonts-on-Linux" class="headerlink" title="Add fonts on Linux"></a>Add fonts on Linux</h2><h3 id="Step-1&#xFF1A;"><a href="#Step-1&#xFF1A;" class="headerlink" title="Step 1&#xFF1A;"></a>Step 1&#xFF1A;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Copy and  authorize</span></span><br><span class="line">sudo cp <span class="variable">$fontspath</span> /usr/share/fonts/</span><br><span class="line">sudo chmod u+rwx /usr/share/fonts/xpfonts/*</span><br></pre></td></tr></table></figure>
<h3 id="Step-2&#xFF1A;"><a href="#Step-2&#xFF1A;" class="headerlink" title="Step 2&#xFF1A;"></a>Step 2&#xFF1A;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Make font cache</span></span><br><span class="line"><span class="built_in">cd</span> /usr/share/fonts/xpfonts</span><br><span class="line">sudo mkfontscale</span><br><span class="line">sudo mkfontdir</span><br><span class="line">sudo <span class="built_in">fc</span>-cache -fv</span><br></pre></td></tr></table></figure>
<h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3:"></a>Step 3:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[C Trick]]></title>
      <url>http://idler1229.github.io/2016/04/26/Programming/C/C-Trick/</url>
      <content type="html"><![CDATA[<h2 id="C-Trick"><a href="#C-Trick" class="headerlink" title="C Trick"></a>C Trick</h2><h3 id="BASIC"><a href="#BASIC" class="headerlink" title="BASIC"></a>BASIC</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scanf( &quot;%[^\n]&quot;, str );     &#x56DE;&#x8F66;&#x624D;&#x8FD4;&#x56DE;</span><br><span class="line">printf&#x4E2D; %zu &#x53EF;&#x8F93;&#x51FA;size_t&#x7C7B;&#x578B;&#x4E14;&#x4E0D;&#x62A5;&#x8B66;&#x544A;</span><br></pre></td></tr></table></figure>
<hr>
<p>&#x5E95;&#x5C42;&#x662F;&#x6307;&#x9488;&#x5B9E;&#x73B0;<br>a[5] == 5[a];<br>&#x201C;ABCD&#x201D;[2] == 2[&#x201C;ABCD&#x201D;] == &#x2018;C&#x2019;;<br>&#x76F8;&#x5F53;&#x4E8E;<em>(a + 5) == </em>(5 + a)</p>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void){</span><br><span class="line">    int x = 5;</span><br><span class="line">    printf(&quot;%d and &quot;, sizeof(x++)); // note 1</span><br><span class="line">    printf(&quot;%d\n&quot;, x); // note 2</span><br><span class="line">    return 0;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<hr>
<p>result&#xFF1A;4 and 5&#xFF0C; &#x56E0;&#x4E3A; sizeof &#x662F;&#x7F16;&#x8BD1;&#x65F6;&#x884C;&#x4E3A;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;&#x4E0D;&#x4F1A;&#x6267;&#x884C;</p>
<hr>
<h3 id="MACRO"><a href="#MACRO" class="headerlink" title="MACRO"></a>MACRO</h3><hr>
<p><strong>#pragma once</strong>&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x76F8;&#x5173;&#x7684;&#xFF0C;&#x6709;&#x7684;&#x7F16;&#x8BD1;&#x5668;&#x652F;&#x6301;&#xFF0C;&#x6709;&#x7684;&#x7F16;&#x8BD1;&#x5668;&#x4E0D;&#x652F;&#x6301;&#xFF0C;&#x5177;&#x4F53;&#x60C5;&#x51B5;&#x8BF7;&#x67E5;&#x770B;&#x7F16;&#x8BD1;&#x5668;API&#x6587;&#x6863;&#xFF0C;&#x4E0D;&#x8FC7;&#x73B0;&#x5728;&#x5927;&#x90E8;&#x5206;&#x7F16;&#x8BD1;&#x5668;&#x90FD;&#x6709;&#x8FD9;&#x4E2A;&#x6742;&#x6CE8;&#x4E86;&#x3002;<strong>#ifndef&#xFF0C;#define&#xFF0C;#endif</strong>&#x662F;C/C++&#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x5B8F;&#x5B9A;&#x4E49;&#xFF0C;&#x901A;&#x8FC7;&#x5B8F;&#x5B9A;&#x4E49;&#x907F;&#x514D;&#x6587;&#x4EF6;&#x591A;&#x6B21;&#x7F16;&#x8BD1;&#x3002;&#x6240;&#x4EE5;&#x5728;&#x6240;&#x6709;&#x652F;&#x6301;C++&#x8BED;&#x8A00;&#x7684;&#x7F16;&#x8BD1;&#x5668;&#x4E0A;&#x90FD;&#x662F;&#x6709;&#x6548;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x5199;&#x7684;&#x7A0B;&#x5E8F;&#x8981;&#x8DE8;&#x5E73;&#x53F0;&#xFF0C;&#x6700;&#x597D;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x3002;</p>
<hr>
<p>&#x4E0B;&#x5212;&#x7EBF;&#x662F;&#x53D8;&#x91CF;<br><em>(<strong>, </strong>);<br>__</em>[<strong>];<br>__</strong>=&amp;__;</p>
<hr>
<h3 id="GNU-C-EXTEND"><a href="#GNU-C-EXTEND" class="headerlink" title="GNU C EXTEND"></a>GNU C EXTEND</h3><hr>
<p>gcc&#x7684;C&#x6269;&#x5C55;&#x652F;&#x6301;&#x5D4C;&#x5957;&#x51FD;&#x6570;&#xFF08;&#x51FD;&#x6570;&#x91CC;&#x53EF;&#x4EE5;&#x518D;&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#xFF09;. clang&#x7684;C&#x597D;&#x50CF;&#x8FD8;&#x6709;&#x95ED;&#x5305;..<br><a href="http://www.anwcl.com/wordpress/c%E8%AF%AD%E8%A8%80%E7%9A%84tricks%E4%B8%8E%E6%9C%AA%E5%AE%9A%E4%B9%89%E8%A1%8C%E4%B8%BA-undefined-behavior/" target="_blank" rel="external">http://www.anwcl.com/wordpress/c%E8%AF%AD%E8%A8%80%E7%9A%84tricks%E4%B8%8E%E6%9C%AA%E5%AE%9A%E4%B9%89%E8%A1%8C%E4%B8%BA-undefined-behavior/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">static const unsigned char a[] = {</span><br><span class="line">#include &quot;values.txt&quot;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">int main(int argc, char *argv[])</span><br><span class="line">{</span><br><span class="line">    int i;</span><br><span class="line">  </span><br><span class="line">    for (i = 0; i &lt; sizeof(a); ++i)</span><br><span class="line">        printf(&quot;a[%d] = %d\n&quot;, i, a[i]);</span><br><span class="line">    return 0;</span><br><span class="line">} </span><br><span class="line"></span><br><span class="line">values.txt</span><br><span class="line">1,2,3,4,5,</span><br><span class="line">6,7,8,9,0,</span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x6765;&#x81EA;Linux Kernel&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x4E00;&#x822C;&#x7528;&#x5F97;&#x6BD4;&#x8F83;&#x5C11;</span><br><span class="line">static struct usb_driver usb_storage_driver = {   .owner = THIS_MODULE,</span><br><span class="line">                                                  .name = &quot;usb-storage&quot;,</span><br><span class="line">                                                  .probe = storage_probe,</span><br><span class="line">                                                  .disconnect = storage_disconnect,</span><br><span class="line">                                                  .id_table = storage_usb_ids,    };</span><br></pre></td></tr></table></figure>
<hr>
<p>&#x533F;&#x540D;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1A;&#x533F;&#x540D;&#x6570;&#x7EC4;&#x3001;&#x533F;&#x540D;&#x7ED3;&#x6784;&#x4F53;&#x7B49;&#x3002;&#x5B9E;&#x73B0;Lisp&#x7684;List</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int main() {</span><br><span class="line">    struct mylist {int a; struct mylist* next;};</span><br><span class="line">    #define cons(x, y) (struct mylist[]){{x, y}}</span><br><span class="line">    struct mylist *list = cons(1, cons(2, cons(3, NULL)));</span><br><span class="line">    struct mylist *p = list;</span><br><span class="line">    while(p != 0) {</span><br><span class="line">        printf(&quot;%d\n&quot;, p-&gt;a);</span><br><span class="line">        p = p -&gt; next;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="TRICK"><a href="#TRICK" class="headerlink" title="TRICK"></a>TRICK</h3><p>C++1x &#x53EF;&#x4EE5;&#x7528; auto &#x6765;&#x7701;&#x7565;&#x7C7B;&#x578B;&#x58F0;&#x660E;, &#x800C; C &#x7684; auto &#x5173;&#x952E;&#x5B57;&#x610F;&#x601D;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x4F46;&#x660E;&#x663E;&#x662F;&#x4E2A;&#x5E9F;&#x8BDD;(auto &#x7684;&#x610F;&#x601D;&#x662F;&#x975E; static, &#x548C;&#x4E0D;&#x5199;&#x4E00;&#x6837;), &#x8FD8;&#x597D;&#x6709; C &#x6709; <strong>typeof</strong></p>
<p>&#x5F02;&#x6216;&#x5B9E;&#x73B0;&#x53CC;&#x94FE;&#x8868;<br><a href="https://en.wikipedia.org/wiki/XOR_linked_list" target="_blank" rel="external">https://en.wikipedia.org/wiki/XOR_linked_list</a></p>
<h3 id="STUDY-SOURCE"><a href="#STUDY-SOURCE" class="headerlink" title="STUDY SOURCE"></a>STUDY SOURCE</h3><p>duff&#x2018;s device<br><a href="https://en.wikipedia.org/wiki/Duff%27s_device" target="_blank" rel="external">https://en.wikipedia.org/wiki/Duff%27s_device</a><br>trigraph<br><a href="http://blog.sina.com.cn/s/blog_4b687eac01008ice.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_4b687eac01008ice.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[C++ Trick]]></title>
      <url>http://idler1229.github.io/2016/04/26/Programming/C++/CPP-Trick/</url>
      <content type="html"><![CDATA[<h2 id="C-Trick"><a href="#C-Trick" class="headerlink" title="C++ Trick"></a>C++ Trick</h2><p>1.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C++ 11</span><br><span class="line">std::to_string() &#x8981; g++ -std=c++11</span><br><span class="line">g++ -std=c++11 -w file.cpp -o file  &#x4F7F;&#x7528;c++11&#x6807;&#x51C6;&#xFF0C;&#x5E76;&#x4E14;&#x5FFD;&#x7565;&#x6240;&#x6709;&#x8B66;&#x544A;</span><br></pre></td></tr></table></figure></p>
<p>2.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x6709;&#x4EBA;&#x4E5F;&#x8BB8;&#x4EE5;&#x4E3A;i++&#x6216;&#x8005;++i&#x7684;&#x6548;&#x7387;&#x6BD4;&#x62C6;&#x5F00;&#x4E4B;&#x540E;&#x8981;&#x9AD8;&#xFF0C;&#x8FD9;&#x53EA;&#x662F;&#x4E00;&#x79CD;&#x9519;&#x89C9;&#x3002;&#x8FD9;&#x4E9B;&#x4EE3;&#x7801;&#x7ECF;&#x8FC7;&#x57FA;&#x672C;&#x7684;&#x7F16;&#x8BD1;&#x5668;&#x4F18;&#x5316;&#x4E4B;&#x540E;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x673A;&#x5668;&#x4EE3;&#x7801;&#x662F;&#x5B8C;&#x5168;&#x6CA1;&#x6709;&#x533A;&#x522B;&#x7684;&#x3002;&#x81EA;&#x589E;&#x51CF;&#x8868;&#x8FBE;&#x5F0F;&#x53EA;&#x6709;&#x5728;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x53EF;&#x4EE5;&#x5B89;&#x5168;&#x7684;&#x4F7F;&#x7528;&#x3002;&#x4E00;&#x79CD;&#x662F;&#x5728;for&#x5FAA;&#x73AF;&#x7684;update&#x90E8;&#x5206;&#xFF0C;&#x6BD4;&#x5982;for(int i = 0; i &lt; 5; i++)&#x3002;&#x53E6;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#x662F;&#x5199;&#x6210;&#x5355;&#x72EC;&#x7684;&#x4E00;&#x884C;&#xFF0C;&#x6BD4;&#x5982;i++;&#x3002;&#x8FD9;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x662F;&#x5B8C;&#x5168;&#x6CA1;&#x6709;&#x6B67;&#x4E49;&#x7684;&#x3002;&#x4F60;&#x9700;&#x8981;&#x907F;&#x514D;&#x5176;&#x5B83;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x6BD4;&#x5982;&#x7528;&#x5728;&#x590D;&#x6742;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x91CC;&#x9762;&#xFF0C;&#x6BD4;&#x5982;foo(i++)&#xFF0C;foo(++i) + foo(i)&#xFF0C;&#x2026;&#x2026; &#x6CA1;&#x6709;&#x4EBA;&#x5E94;&#x8BE5;&#x77E5;&#x9053;&#xFF0C;&#x6216;&#x8005;&#x53BB;&#x8FFD;&#x7A76;&#x8FD9;&#x4E9B;&#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#x3002;</span><br></pre></td></tr></table></figure></p>
<p>3.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x6709;&#x4EBA;&#x53EF;&#x80FD;&#x4F1A;&#x8BF4;&#xFF0C;&#x5168;&#x90FD;&#x6253;&#x4E0A;&#x82B1;&#x62EC;&#x53F7;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x53E5;&#x8BDD;&#x4E5F;&#x6253;&#x4E0A;&#xFF0C;&#x591A;&#x788D;&#x773C;&#x554A;&#xFF1F;&#x7136;&#x800C;&#x7ECF;&#x8FC7;&#x5B9E;&#x884C;&#x8FD9;&#x79CD;&#x7F16;&#x7801;&#x89C4;&#x8303;&#x51E0;&#x5E74;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x5E76;&#x6CA1;&#x6709;&#x53D1;&#x73B0;&#x8FD9;&#x79CD;&#x5199;&#x6CD5;&#x66F4;&#x52A0;&#x788D;&#x773C;&#xFF0C;&#x53CD;&#x800C;&#x7531;&#x4E8E;&#x82B1;&#x62EC;&#x53F7;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x4F7F;&#x5F97;&#x4EE3;&#x7801;&#x754C;&#x9650;&#x660E;&#x786E;&#xFF0C;&#x8BA9;&#x6211;&#x7684;&#x773C;&#x775B;&#x8D1F;&#x62C5;&#x66F4;&#x5C0F;&#x4E86;&#x3002;</span><br></pre></td></tr></table></figure></p>
<p>4.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x907F;&#x514D;&#x4F7F;&#x7528;continue&#x548C;break&#x3002;&#x5FAA;&#x73AF;&#x8BED;&#x53E5;&#xFF08;for&#xFF0C;while&#xFF09;&#x91CC;&#x9762;&#x51FA;&#x73B0;return&#x662F;&#x6CA1;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x7136;&#x800C;&#x5982;&#x679C;&#x4F60;&#x4F7F;&#x7528;&#x4E86;continue&#x6216;&#x8005;break&#xFF0C;&#x5C31;&#x4F1A;&#x8BA9;&#x5FAA;&#x73AF;&#x7684;&#x903B;&#x8F91;&#x548C;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;&#x53D8;&#x5F97;&#x590D;&#x6742;&#xFF0C;&#x96BE;&#x4EE5;&#x786E;&#x4FDD;&#x6B63;&#x786E;&#x3002;</span><br><span class="line">&#x51FA;&#x73B0;continue&#x6216;&#x8005;break&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x5F80;&#x5F80;&#x662F;&#x5BF9;&#x5FAA;&#x73AF;&#x7684;&#x903B;&#x8F91;&#x6CA1;&#x6709;&#x60F3;&#x6E05;&#x695A;&#x3002;&#x5982;&#x679C;&#x4F60;&#x8003;&#x8651;&#x5468;&#x5168;&#x4E86;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x51E0;&#x4E4E;&#x4E0D;&#x9700;&#x8981;continue&#x6216;&#x8005;break&#x7684;&#x3002;&#x5982;&#x679C;&#x4F60;&#x7684;&#x5FAA;&#x73AF;&#x91CC;&#x51FA;&#x73B0;&#x4E86;continue&#x6216;&#x8005;break&#xFF0C;&#x4F60;&#x5C31;&#x5E94;&#x8BE5;&#x8003;&#x8651;&#x6539;&#x5199;&#x8FD9;&#x4E2A;&#x5FAA;&#x73AF;&#x3002;&#x6539;&#x5199;&#x5FAA;&#x73AF;&#x7684;&#x529E;&#x6CD5;&#x6709;&#x591A;&#x79CD;&#xFF1A;</span><br><span class="line"></span><br><span class="line">&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;continue&#xFF0C;&#x4F60;&#x5F80;&#x5F80;&#x53EA;&#x9700;&#x8981;&#x628A;continue&#x7684;&#x6761;&#x4EF6;&#x53CD;&#x5411;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x6D88;&#x9664;continue&#x3002;</span><br><span class="line">&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;break&#xFF0C;&#x4F60;&#x5F80;&#x5F80;&#x53EF;&#x4EE5;&#x628A;break&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x5408;&#x5E76;&#x5230;&#x5FAA;&#x73AF;&#x5934;&#x90E8;&#x7684;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;&#x91CC;&#xFF0C;&#x4ECE;&#x800C;&#x53BB;&#x6389;break&#x3002;</span><br><span class="line">&#x6709;&#x65F6;&#x5019;&#x4F60;&#x53EF;&#x4EE5;&#x628A;break&#x66FF;&#x6362;&#x6210;return&#xFF0C;&#x4ECE;&#x800C;&#x53BB;&#x6389;break&#x3002;</span><br><span class="line">&#x5982;&#x679C;&#x4EE5;&#x4E0A;&#x90FD;&#x5931;&#x8D25;&#x4E86;&#xFF0C;&#x4F60;&#x4E5F;&#x8BB8;&#x53EF;&#x4EE5;&#x628A;&#x5FAA;&#x73AF;&#x91CC;&#x9762;&#x590D;&#x6742;&#x7684;&#x90E8;&#x5206;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x505A;&#x6210;&#x51FD;&#x6570;&#x8C03;&#x7528;&#xFF0C;&#x4E4B;&#x540E;continue&#x6216;&#x8005;break&#x5C31;&#x53EF;&#x4EE5;&#x53BB;&#x6389;&#x4E86;&#x3002;</span><br></pre></td></tr></table></figure></p>
<p>5.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x5982;&#x679C;&#x4F60;&#x628A;&#x5F02;&#x5E38;catch&#x4E86;&#xFF0C;&#x5FFD;&#x7565;&#x6389;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x5C31;&#x4E0D;&#x77E5;&#x9053;foo&#x5176;&#x5B9E;&#x5931;&#x8D25;&#x4E86;&#x3002;&#x8FD9;&#x5C31;&#x50CF;&#x5F00;&#x8F66;&#x65F6;&#x770B;&#x5230;&#x8DEF;&#x53E3;&#x5199;&#x7740;&#x201C;&#x524D;&#x65B9;&#x65BD;&#x5DE5;&#xFF0C;&#x9053;&#x8DEF;&#x5173;&#x95ED;&#x201D;&#xFF0C;&#x8FD8;&#x7EE7;&#x7EED;&#x5F80;&#x524D;&#x5F00;&#x3002;&#x8FD9;&#x5F53;&#x7136;&#x8FDF;&#x65E9;&#x4F1A;&#x51FA;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;&#x4F60;&#x6839;&#x672C;&#x4E0D;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x5728;&#x5E72;&#x4EC0;&#x4E48;&#x3002;catch&#x5F02;&#x5E38;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x4E0D;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;Exception&#x8FD9;&#x4E48;&#x5BBD;&#x6CDB;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x4F60;&#x5E94;&#x8BE5;&#x6B63;&#x597D;catch&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x7684;&#x90A3;&#x79CD;&#x5F02;&#x5E38;A&#x3002;&#x4F7F;&#x7528;&#x5BBD;&#x6CDB;&#x7684;&#x5F02;&#x5E38;&#x7C7B;&#x578B;&#x6709;&#x5F88;&#x5927;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4F1A;&#x4E0D;&#x7ECF;&#x610F;&#x7684;catch&#x4F4F;&#x53E6;&#x5916;&#x7684;&#x5F02;&#x5E38;&#xFF08;&#x6BD4;&#x5982;B&#xFF09;&#x3002;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x903B;&#x8F91;&#x662F;&#x57FA;&#x4E8E;&#x5224;&#x65AD;A&#x662F;&#x5426;&#x51FA;&#x73B0;&#xFF0C;&#x53EF;&#x4F60;&#x5374;catch&#x6240;&#x6709;&#x7684;&#x5F02;&#x5E38;&#xFF08;Exception&#x7C7B;&#xFF09;&#xFF0C;&#x6240;&#x4EE5;&#x5F53;&#x5176;&#x5B83;&#x7684;&#x5F02;&#x5E38;B&#x51FA;&#x73B0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x83AB;&#x540D;&#x5176;&#x5999;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;&#x4F60;&#x4EE5;&#x4E3A;A&#x51FA;&#x73B0;&#x4E86;&#xFF0C;&#x800C;&#x5176;&#x5B9E;&#x5B83;&#x6CA1;&#x6709;&#x3002;&#x8FD9;&#x79CD;bug&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x751A;&#x81F3;&#x4F7F;&#x7528;debugger&#x90FD;&#x96BE;&#x4EE5;&#x53D1;&#x73B0;&#x3002;</span><br></pre></td></tr></table></figure></p>
<p>6.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x4E0D;&#x8981;&#x628A;null&#x653E;&#x8FDB;&#x201C;&#x5BB9;&#x5668;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x201D;&#x91CC;&#x9762;&#x3002;&#x6240;&#x8C13;&#x5BB9;&#x5668;&#xFF08;collection&#xFF09;&#xFF0C;&#x662F;&#x6307;&#x4E00;&#x4E9B;&#x5BF9;&#x8C61;&#x4EE5;&#x67D0;&#x79CD;&#x65B9;&#x5F0F;&#x96C6;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x6240;&#x4EE5;null&#x4E0D;&#x5E94;&#x8BE5;&#x88AB;&#x653E;&#x8FDB;Array&#xFF0C;List&#xFF0C;Set&#x7B49;&#x7ED3;&#x6784;&#xFF0C;&#x4E0D;&#x5E94;&#x8BE5;&#x51FA;&#x73B0;&#x5728;Map&#x7684;key&#x6216;&#x8005;value&#x91CC;&#x9762;&#x3002;&#x628A;null&#x653E;&#x8FDB;&#x5BB9;&#x5668;&#x91CC;&#x9762;&#xFF0C;&#x662F;&#x4E00;&#x4E9B;&#x83AB;&#x540D;&#x5176;&#x5999;&#x9519;&#x8BEF;&#x7684;&#x6765;&#x6E90;&#x3002;&#x56E0;&#x4E3A;&#x5BF9;&#x8C61;&#x5728;&#x5BB9;&#x5668;&#x91CC;&#x7684;&#x4F4D;&#x7F6E;&#x4E00;&#x822C;&#x662F;&#x52A8;&#x6001;&#x51B3;&#x5B9A;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x65E6;null&#x4ECE;&#x67D0;&#x4E2A;&#x5165;&#x53E3;&#x8DD1;&#x8FDB;&#x53BB;&#x4E86;&#xFF0C;&#x4F60;&#x5C31;&#x5F88;&#x96BE;&#x518D;&#x641E;&#x660E;&#x767D;&#x5B83;&#x53BB;&#x4E86;&#x54EA;&#x91CC;&#xFF0C;&#x4F60;&#x5C31;&#x5F97;&#x88AB;&#x8FEB;&#x5728;&#x6240;&#x6709;&#x4ECE;&#x8FD9;&#x4E2A;&#x5BB9;&#x5668;&#x91CC;&#x53D6;&#x503C;&#x7684;&#x4F4D;&#x7F6E;&#x68C0;&#x67E5;null&#x3002;&#x4F60;&#x4E5F;&#x5F88;&#x96BE;&#x77E5;&#x9053;&#x5230;&#x5E95;&#x662F;&#x8C01;&#x628A;&#x5B83;&#x653E;&#x8FDB;&#x53BB;&#x7684;&#xFF0C;&#x4EE3;&#x7801;&#x591A;&#x4E86;&#x5C31;&#x5BFC;&#x81F4;&#x8C03;&#x8BD5;&#x6781;&#x5176;&#x56F0;&#x96BE;&#x3002;</span><br><span class="line">&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x662F;&#xFF1A;&#x5982;&#x679C;&#x4F60;&#x771F;&#x8981;&#x8868;&#x793A;&#x201C;&#x6CA1;&#x6709;&#x201D;&#xFF0C;&#x90A3;&#x4F60;&#x5C31;&#x5E72;&#x8106;&#x4E0D;&#x8981;&#x628A;&#x5B83;&#x653E;&#x8FDB;&#x53BB;&#xFF08;Array&#xFF0C;List&#xFF0C;Set&#x6CA1;&#x6709;&#x5143;&#x7D20;&#xFF0C;Map&#x6839;&#x672C;&#x6CA1;&#x90A3;&#x4E2A;entry&#xFF09;&#xFF0C;&#x6216;&#x8005;&#x4F60;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#xFF0C;&#x771F;&#x6B63;&#x5408;&#x6CD5;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x6765;&#x8868;&#x793A;&#x201C;&#x6CA1;&#x6709;&#x201D;&#x3002;</span><br><span class="line">``` </span><br><span class="line">7.</span><br><span class="line">```C++</span><br><span class="line">char num[128];</span><br><span class="line">cin &gt;&gt; setw(127) &gt;&gt; ... &#x9650;&#x5B9A;&#x8F93;&#x5165;&#x5B57;&#x7B26;&#x6570;</span><br></pre></td></tr></table></figure></p>
<p>8.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">inline&#x672C;&#x8EAB;&#x8FD8;&#x662F;&#x6709;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x610F;&#x4E49;&#xFF1A; </span><br><span class="line">&#x4E00;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x7684;cpp&#x6587;&#x4EF6;&#x4E2D;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x53EA;&#x80FD;&#x88AB;&#x5B9A;&#x4E49;&#x4E00;&#x6B21;&#x3002;&#x5982;&#x679C;&#x4F60;&#x628A;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x5728;&#x4E00;&#x4E2A;.h&#x6587;&#x4EF6;&#x4E2D;&#x5E76;&#x8BA9;&#x4E24;&#x4E2A;cpp&#x5305;&#x542B;&#x5C31;&#x4F1A;&#x9020;&#x6210;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5206;&#x522B;&#x5728;&#x4E24;&#x4E2A;cpp&#x4E2D;&#x88AB;&#x5B9A;&#x4E49;&#x4EA7;&#x751F;&#x9519;&#x8BEF;&#x3002;&#x4F46;&#x662F;inline&#x51FD;&#x6570;&#x662F;&#x5141;&#x8BB8;&#x5728;&#x591A;&#x4E2A;cpp&#x4E2D;&#x591A;&#x6B21;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x5C31;&#x89E3;&#x51B3;&#x4E86;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Laptop cannot wakeup]]></title>
      <url>http://idler1229.github.io/2016/04/26/Linux/Solution/Laptop-cannot-wakeup/</url>
      <content type="html"><![CDATA[<p>##ubuntu&#x6302;&#x8D77;&#x540E;&#x4E0D;&#x80FD;&#x5524;&#x9192;&#x89E3;&#x51B3;</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##&#x5B89;&#x88C5;pm-utils  </span></span><br><span class="line">sudo apt-get install pm-utils  </span><br><span class="line"><span class="comment">##&#x5B89;&#x88C5;laptop-mode-tools</span></span><br><span class="line">sudo apt-get install laptop-mode-tools </span><br><span class="line"><span class="comment">##&#x67E5;&#x770B;&#x662F;&#x5426;&#x542F;&#x52A8;laptop_mode</span></span><br><span class="line">cat /proc/sys/vm/laptop_mode <span class="comment">#&#x5982;&#x679C;&#x663E;&#x793A;&#x7ED3;&#x679C;&#x4E3A;0&#xFF0C;&#x5219;&#x8868;&#x793A;&#x672A;&#x542F;&#x52A8;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##&#x89E3;&#x51B3;&#x65B9;&#x6848;</span></span><br><span class="line">&#x66F4;&#x6539;/etc/default/acpi-support&#x4E2D;ENABLE_LAPTOP_MODE=<span class="literal">true</span> </span><br><span class="line">sudo gedit /etc/default/acpi-support </span><br><span class="line"><span class="comment">##&#x60F3;&#x542F;&#x52A8;laptop_mode&#x6A21;&#x5F0F;</span></span><br><span class="line">sudo laptop_mode start</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Split Screen]]></title>
      <url>http://idler1229.github.io/2016/04/26/Linux/Software/Split-Screen/</url>
      <content type="html"><![CDATA[<h2 id="&#x4F7F;&#x7528;-wmctrl-&#x548C;&#x4E00;&#x6BB5;&#x811A;&#x672C;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x57FA;&#x672C;&#x7684;&#x5C4F;&#x5E55;&#x5BF9;&#x5207;&#x7684;&#x529F;&#x80FD;"><a href="#&#x4F7F;&#x7528;-wmctrl-&#x548C;&#x4E00;&#x6BB5;&#x811A;&#x672C;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x57FA;&#x672C;&#x7684;&#x5C4F;&#x5E55;&#x5BF9;&#x5207;&#x7684;&#x529F;&#x80FD;" class="headerlink" title="&#x4F7F;&#x7528; wmctrl &#x548C;&#x4E00;&#x6BB5;&#x811A;&#x672C;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x57FA;&#x672C;&#x7684;&#x5C4F;&#x5E55;&#x5BF9;&#x5207;&#x7684;&#x529F;&#x80FD;:"></a>&#x4F7F;&#x7528; wmctrl &#x548C;&#x4E00;&#x6BB5;&#x811A;&#x672C;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x57FA;&#x672C;&#x7684;&#x5C4F;&#x5E55;&#x5BF9;&#x5207;&#x7684;&#x529F;&#x80FD;:</h2><h3 id="&#x5B89;&#x88C5;-wmctrl"><a href="#&#x5B89;&#x88C5;-wmctrl" class="headerlink" title="&#x5B89;&#x88C5; wmctrl"></a>&#x5B89;&#x88C5; wmctrl</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install wmctrl</span><br></pre></td></tr></table></figure>
<h3 id="&#x5B89;&#x88C5;-shell-&#x811A;&#x672C;"><a href="#&#x5B89;&#x88C5;-shell-&#x811A;&#x672C;" class="headerlink" title="&#x5B89;&#x88C5; shell &#x811A;&#x672C;"></a>&#x5B89;&#x88C5; shell &#x811A;&#x672C;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">set</span> -- $(xwininfo -root| awk -F <span class="string">&apos;[ :]+&apos;</span> <span class="string">&apos;/ (Width|Height):/ { print $3 }&apos;</span>)</span><br><span class="line">width=<span class="variable">$1</span></span><br><span class="line">height=<span class="variable">$2</span></span><br><span class="line">win1=$(xwininfo| awk <span class="string">&apos;/^xwininfo: W/ { print $4 }&apos;</span>)</span><br><span class="line">win2=$(xwininfo| awk <span class="string">&apos;/^xwininfo: W/ { print $4 }&apos;</span>)</span><br><span class="line">wmctrl -i -r <span class="variable">$win1</span> <span class="_">-e</span> 0,0,0,$((width/2)),<span class="variable">$height</span></span><br><span class="line">wmctrl -i -r <span class="variable">$win2</span> <span class="_">-e</span> 0,$((width/2)),0,$((width/2)),<span class="variable">$height</span></span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Take A Break]]></title>
      <url>http://idler1229.github.io/2016/04/26/Linux/Software/Take-a-Break/</url>
      <content type="html"><![CDATA[<p>&#x7528;&#x7535;&#x8111;&#x5DE5;&#x4F5C;&#x65F6;&#x5E94;&#x9002;&#x5F53;&#x4F11;&#x606F;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x4EBA;&#x90FD;&#x4E0D;&#x662F;&#x81EA;&#x89C9;&#x201C;&#x4F11;&#x606F;&#x201D;&#x3002;&#x73B0;&#x5728;&#x6709;&#x4E00;&#x4E2A;&#x6B3E;&#x8F6F;&#x4EF6;&#x53EF;&#x5E2E;&#x52A9;&#x4F60;&#x2014;&#x2014;&#x201C;Take a Break&#x201D;&#xFF0C;&#x8F6F;&#x4EF6;&#x63D0;&#x4F9B;&#x8BBE;&#x7F6E;&#x5DE5;&#x4F5C;&#x65F6;&#x95F4;&#x548C;&#x4F11;&#x606F;&#x65F6;&#x95F4;&#xFF0C;&#x4EE5;&#x53CA;&#x4E0D;&#x540C;&#x4EFB;&#x52A1;&#x671F;&#x95F4;&#x663E;&#x793A;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x5982;&#x5728;&#x4F11;&#x606F;&#x65F6;&#x8BA9;&#x7535;&#x8111;&#x8FDB;&#x5165;&#x9501;&#x5C4F;&#x6A21;&#x5F0F;&#x3002; PPA:vlijm/takeabreak&#xFF0C;update&#x540E;&#x201D;sudo apt-get install takeabreak&#x201D;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[What the fuck on Ubuntu]]></title>
      <url>http://idler1229.github.io/2016/04/26/Linux/Solution/What-the-fuck-on-Ubuntu/</url>
      <content type="html"><![CDATA[<h2 id="&#x5751;&#x7239;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;"><a href="#&#x5751;&#x7239;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;" class="headerlink" title="&#x5751;&#x7239;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;"></a>&#x5751;&#x7239;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;</h2><h3 id="&#x5DE6;&#x4E0A;&#x89D2;&#x201D;&#x7F51;&#x7EDC;&#x201D;&#x56FE;&#x6807;&#x4E0D;&#x89C1;"><a href="#&#x5DE6;&#x4E0A;&#x89D2;&#x201D;&#x7F51;&#x7EDC;&#x201D;&#x56FE;&#x6807;&#x4E0D;&#x89C1;" class="headerlink" title="&#x5DE6;&#x4E0A;&#x89D2;&#x201D;&#x7F51;&#x7EDC;&#x201D;&#x56FE;&#x6807;&#x4E0D;&#x89C1;"></a>&#x5DE6;&#x4E0A;&#x89D2;&#x201D;&#x7F51;&#x7EDC;&#x201D;&#x56FE;&#x6807;&#x4E0D;&#x89C1;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install indicator-applet</span><br><span class="line">sudo apt-get install network-manager-gnome</span><br><span class="line">sudo killall unity-panel-service <span class="comment">#&#x91CD;&#x542F;&#x663E;&#x793A;&#x680F;</span></span><br></pre></td></tr></table></figure>
<h3 id="&#x5F00;&#x673A;&#x7981;&#x6B62;&#x84DD;&#x7259;&#x542F;&#x52A8;"><a href="#&#x5F00;&#x673A;&#x7981;&#x6B62;&#x84DD;&#x7259;&#x542F;&#x52A8;" class="headerlink" title="&#x5F00;&#x673A;&#x7981;&#x6B62;&#x84DD;&#x7259;&#x542F;&#x52A8;"></a>&#x5F00;&#x673A;&#x7981;&#x6B62;&#x84DD;&#x7259;&#x542F;&#x52A8;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/rc.local &#x4E2D;&#x52A0;&#x5165; rfkill block bluetooth</span><br></pre></td></tr></table></figure>
<h3 id="&#x7981;&#x6B62;&#x79FB;&#x52A8;&#x8BBE;&#x5907;&#x81EA;&#x52A8;&#x5F39;&#x51FA;"><a href="#&#x7981;&#x6B62;&#x79FB;&#x52A8;&#x8BBE;&#x5907;&#x81EA;&#x52A8;&#x5F39;&#x51FA;" class="headerlink" title="&#x7981;&#x6B62;&#x79FB;&#x52A8;&#x8BBE;&#x5907;&#x81EA;&#x52A8;&#x5F39;&#x51FA;"></a>&#x7981;&#x6B62;&#x79FB;&#x52A8;&#x8BBE;&#x5907;&#x81EA;&#x52A8;&#x5F39;&#x51FA;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system-setting &#x91CC; detail&#x53EF;&#x4EE5;&#x7981;&#x6B62;, &#x53E6;&#x5916;&#x5728;safe&amp;privacy&#x91CC;&#x53EF;&#x4EE5;&#x6E05;&#x9664;&#x7F13;&#x5B58;</span><br></pre></td></tr></table></figure>
<h3 id="&#x89E6;&#x6478;&#x677F;&#x5F00;&#x5173;"><a href="#&#x89E6;&#x6478;&#x677F;&#x5F00;&#x5173;" class="headerlink" title="&#x89E6;&#x6478;&#x677F;&#x5F00;&#x5173;"></a>&#x89E6;&#x6478;&#x677F;&#x5F00;&#x5173;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x5F00;&#x542F;&#x89E6;&#x6478;&#x677F;    modprobe psmouse</span><br><span class="line">&#x7981;&#x6B62;&#x89E6;&#x6478;&#x677F;    modprobe -r psmouse</span><br><span class="line">&#x6709;&#x7684;&#x7B14;&#x8BB0;&#x672C;FN+Z&#x4E5F;&#x53EF;&#x4EE5;&#x5F53;&#x89E6;&#x6478;&#x677F;&#x5F00;&#x5173;&#xFF0C;&#x4F46;&#x662F;&#x6548;&#x7387;&#x5F88;&#x4F4E;&#xFF0C;&#x6709;&#x65F6;&#x4F1A;&#x5361;&#x6B7B;</span><br></pre></td></tr></table></figure>
<h3 id="&#x5C4F;&#x5E55;&#x4EAE;&#x5EA6;&#x65E0;&#x6CD5;&#x8C03;&#x8282;"><a href="#&#x5C4F;&#x5E55;&#x4EAE;&#x5EA6;&#x65E0;&#x6CD5;&#x8C03;&#x8282;" class="headerlink" title="&#x5C4F;&#x5E55;&#x4EAE;&#x5EA6;&#x65E0;&#x6CD5;&#x8C03;&#x8282;"></a>&#x5C4F;&#x5E55;&#x4EAE;&#x5EA6;&#x65E0;&#x6CD5;&#x8C03;&#x8282;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fn&#x65E0;&#x6CD5;&#x8C03;&#x8282;&#x65F6;,</span><br><span class="line">&#x5728;/etc/default/grub&#x4E2D;&#x4FEE;&#x6539; GRUBCOMPILE&#x4E3A;acpi_backlight=vendor</span><br><span class="line">sudo update-grub</span><br><span class="line">&#x6216;&#x8005;</span><br><span class="line"><span class="built_in">echo</span> xxx &gt;  /sys/class/backlight/intel_backlight/brightness</span><br></pre></td></tr></table></figure>
<h3 id="zip&#x89E3;&#x538B;&#x7F29;&#x4E71;&#x7801;"><a href="#zip&#x89E3;&#x538B;&#x7F29;&#x4E71;&#x7801;" class="headerlink" title="zip&#x89E3;&#x538B;&#x7F29;&#x4E71;&#x7801;"></a>zip&#x89E3;&#x538B;&#x7F29;&#x4E71;&#x7801;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -O cp936 filename.zip</span><br></pre></td></tr></table></figure>
<h3 id="&#x53D6;&#x6D88;&#x58F0;&#x97F3;&#x83DC;&#x5355;"><a href="#&#x53D6;&#x6D88;&#x58F0;&#x97F3;&#x83DC;&#x5355;" class="headerlink" title="&#x53D6;&#x6D88;&#x58F0;&#x97F3;&#x83DC;&#x5355;"></a>&#x53D6;&#x6D88;&#x58F0;&#x97F3;&#x83DC;&#x5355;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x4F7F;&#x7528; dconf-editor</span><br><span class="line">com &gt; canonical &gt; indicator &gt; sound.</span><br></pre></td></tr></table></figure>
<h3 id="&#x7981;&#x6B62;Guest"><a href="#&#x7981;&#x6B62;Guest" class="headerlink" title="&#x7981;&#x6B62;Guest"></a>&#x7981;&#x6B62;Guest</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</span><br><span class="line">/usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf </span><br><span class="line">&#x5728;&#x6587;&#x4EF6;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A;</span><br><span class="line">greeter-show-manual-login=<span class="literal">true</span></span><br><span class="line">allow-guest=<span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h3 id="&#x9F20;&#x6807;&#x95F4;&#x6B47;&#x5931;&#x7075;"><a href="#&#x9F20;&#x6807;&#x95F4;&#x6B47;&#x5931;&#x7075;" class="headerlink" title="&#x9F20;&#x6807;&#x95F4;&#x6B47;&#x5931;&#x7075;"></a>&#x9F20;&#x6807;&#x95F4;&#x6B47;&#x5931;&#x7075;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##&#x5B8C;&#x5168;&#x7981;&#x7528;usb-autosuspend&#x529F;&#x80FD;</span></span><br><span class="line">sudo vim /etc/laptop-mode/conf.d/usb-autosuspend.conf</span><br><span class="line">BATT_SUSPEND_USB</span><br><span class="line">LM_AC_SUSPEND_USB</span><br><span class="line">NOLM_AC_SUSPEND_USB</span><br><span class="line">&#x5747;&#x6539;&#x4E3A;0, &#x5373;&#x53EF;&#x7981;&#x7528;</span><br></pre></td></tr></table></figure>
<h3 id="&#x5B89;&#x5168;&#x79FB;&#x9664;-&#x5220;&#x9664;-&#x786C;&#x76D8;&#x3002;"><a href="#&#x5B89;&#x5168;&#x79FB;&#x9664;-&#x5220;&#x9664;-&#x786C;&#x76D8;&#x3002;" class="headerlink" title="&#x5B89;&#x5168;&#x79FB;&#x9664;(&#x5220;&#x9664;)&#x786C;&#x76D8;&#x3002;"></a>&#x5B89;&#x5168;&#x79FB;&#x9664;(&#x5220;&#x9664;)&#x786C;&#x76D8;&#x3002;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">## &#x56FE;&#x5F62;&#x5316;&#x64CD;&#x4F5C;&#xFF1A;</span><br><span class="line">&#x5728;&#x5DE6;&#x4FA7;Unity&#x680F;&#xFF0C;&#x53F3;&#x952E;&#x51FB;&#x56FE;&#x6807;&#x5E76;&#x70B9;&#x51FB;&#x201C;&#x5B89;&#x5168;&#x5220;&#x9664;&#x201D;&#x3002;</span><br><span class="line">&#x6253;&#x5F00;&#x201C;&#x78C1;&#x76D8;(gnome-disks)&#x201D;&#xFF0C;&#x9009;&#x62E9;&#x60F3;&#x8981;&#x5B89;&#x5168;&#x5220;&#x9664;&#x7684;&#x786C;&#x76D8;&#x5E76;&#x70B9;&#x51FB;&#x201C;&#x7535;&#x6E90;&#x201D;&#x6309;&#x94AE;&#x5B89;&#x5168;&#x5220;&#x9664;&#x78C1;&#x76D8;&#x3002;</span><br><span class="line">## &#x547D;&#x4EE4;&#x884C;&#x64CD;&#x4F5C;&#xFF1A;</span><br><span class="line">$ udisksctl power-off -b /dev/sdX</span><br><span class="line">$ udisks --detach /dev/sdX</span><br><span class="line"># echo 1 &gt; /sys/class/block/sdX/device/delete</span><br><span class="line"># echo scsi remove-single-device X X X X &gt; /proc/scsi/scsi</span><br></pre></td></tr></table></figure>
<h3 id="Unknown-media-type-in-type&#xFF1A;"><a href="#Unknown-media-type-in-type&#xFF1A;" class="headerlink" title="Unknown media type in type&#xFF1A;"></a>Unknown media type in type&#xFF1A;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Unknown media <span class="built_in">type</span> <span class="keyword">in</span> <span class="built_in">type</span> <span class="string">&apos;all/all&apos;</span></span><br><span class="line">Unknown media <span class="built_in">type</span> <span class="keyword">in</span> <span class="built_in">type</span> <span class="string">&apos;all/allfiles&apos;</span></span><br><span class="line">Unknown media <span class="built_in">type</span> <span class="keyword">in</span> <span class="built_in">type</span> <span class="string">&apos;uri/mms&apos;</span></span><br><span class="line">Unknown media <span class="built_in">type</span> <span class="keyword">in</span> <span class="built_in">type</span> <span class="string">&apos;uri/mmst&apos;</span></span><br><span class="line">Unknown media <span class="built_in">type</span> <span class="keyword">in</span> <span class="built_in">type</span> <span class="string">&apos;uri/mmsu&apos;</span></span><br><span class="line">Unknown media <span class="built_in">type</span> <span class="keyword">in</span> <span class="built_in">type</span> <span class="string">&apos;uri/pnm&apos;</span></span><br><span class="line">Unknown media <span class="built_in">type</span> <span class="keyword">in</span> <span class="built_in">type</span> <span class="string">&apos;uri/rtspt&apos;</span></span><br><span class="line">Unknown media <span class="built_in">type</span> <span class="keyword">in</span> <span class="built_in">type</span> <span class="string">&apos;uri/rtspu&apos;</span></span><br><span class="line"><span class="comment">## &#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF1A;</span></span><br><span class="line"><span class="built_in">cd</span> /usr/share/mime/packages/</span><br><span class="line"><span class="comment">## &#x4FEE;&#x6539;&#x76EE;&#x5F55;&#x4E0B;&#x7684; kde.xml&#xFF0C;&#x53EF;&#x4EE5;&#x4E8B;&#x5148;&#x5907;&#x4EFD;&#x3002;&#x5C06;&#x91CC;&#x9762;&lt;mime-type type=&quot;xxxx/xxxx&quot;&gt; to &lt;/mime-type&gt;&#x683C;&#x5F0F;&#x7684;&#x8BED;&#x53E5;&#x5168;&#x90E8;&#x5220;&#x9664;&#x3002;&#x5982;&#xFF1A;</span></span><br><span class="line">&lt;mime-type <span class="built_in">type</span>=<span class="string">&quot;all/all&quot;</span>&gt; </span><br><span class="line">&lt;comment&gt;all files and folders&lt;/comment&gt;  </span><br><span class="line">&lt;/mime-type</span><br><span class="line">&lt;mime-type <span class="built_in">type</span>=<span class="string">&quot;all/allfiles&quot;</span>&gt; </span><br><span class="line">&lt;comment&gt;all files&lt;/comment&gt; </span><br><span class="line">&lt;/mime-type&gt;</span><br></pre></td></tr></table></figure>
<h3 id="SUDO"><a href="#SUDO" class="headerlink" title="SUDO"></a>SUDO</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo&#x8F93;&#x5165;&#x53E3;&#x4EE4;&#x540E;&#xFF0C;&#x9ED8;&#x8BA4;&#x5341;&#x4E94;&#x5206;&#x949F;&#x5185;&#x65E0;&#x9700;&#x518D;&#x8F93;</span><br><span class="line"></span><br><span class="line">sudo -i &#x4F1A;&#x6D3E;&#x751F;&#x51FA;root shell &#x6267;&#x884C;&#x591A;&#x6761;root&#x547D;&#x4EE4;&#x65F6;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#xFF0C;&#x4F46;&#x662F;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#x4F1A;&#x5207;&#x6362;&#x5230;/root&#x4E0B;</span><br><span class="line"></span><br><span class="line">&#x53E6;&#x5916;&#x5C31;&#x662F;&#x53EF;&#x4EE5;&#x5BF9;root&#x6743;&#x9650;&#x7684;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;</span><br></pre></td></tr></table></figure>
<h3 id="APT"><a href="#APT" class="headerlink" title="APT"></a>APT</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-cache pkgnames|wc <span class="_">-l</span>     <span class="comment">#&#x67E5;&#x770B;&#x5305;&#x7684;&#x4E2A;&#x6570;</span></span><br><span class="line"></span><br><span class="line">sudo apt-cache pkgnames    <span class="comment">#&#x67E5;&#x770B;&#x5305;&#x540D;</span></span><br><span class="line"></span><br><span class="line">sudo apt-cache show     <span class="comment">#&#x67E5;&#x770B;&#x8F6F;&#x4EF6;&#x8BF4;&#x660E;&#x4FE1;&#x606F;</span></span><br><span class="line"></span><br><span class="line">sudo apt-add-repository ppa:xxxx/ppa    <span class="comment">#&#x6DFB;&#x52A0;ppa</span></span><br><span class="line"></span><br><span class="line">sudo apt-get clean    <span class="comment">#&#x6E05;&#x7406;&#x672C;&#x5730;&#x7F13;&#x5B58;</span></span><br><span class="line"></span><br><span class="line">/etc/apt/sources.list      <span class="comment">#&#x4FEE;&#x6539;&#x6E90;</span></span><br><span class="line"></span><br><span class="line">sudo apt-get update    <span class="comment">#&#x5C31;&#x662F;&#x904D;&#x5386;sources.list&#x4EE5;&#x751F;&#x6210;&#x7D22;&#x5F15;</span></span><br></pre></td></tr></table></figure>
<h3 id="DPKG"><a href="#DPKG" class="headerlink" title="DPKG"></a>DPKG</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg <span class="_">-l</span> | wc <span class="_">-l</span>    <span class="comment">#&#x7EDF;&#x8BA1;&#x5DF2;&#x5B89;&#x88C5;&#x7684;deb</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dpkg&#xFF1A; Debian Package Management System</span><br><span class="line"></span><br><span class="line">dpkg 		</span><br><span class="line">            -i 			&#x88C5; </span><br><span class="line">            -r 			&#x5220;</span><br><span class="line">            -info       &#x6587;&#x4EF6;&#x5F52;&#x5C5E;</span><br><span class="line">            -status     &#x7CFB;&#x7EDF;&#x5305;&#xFF08;&#x5B89;&#x88C5;&#x597D;&#x7684;&#x8F6F;&#x4EF6;&#xFF09;</span><br><span class="line">            --listfile  &#x5305;&#x542B;&#x7684;&#x6587;&#x4EF6;</span><br><span class="line">            --contens    </span><br><span class="line">            -I          &#x67E5;&#x770B;&#x5305;&#x7684;&#x4FE1;&#x606F;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux Command Miscellaneous]]></title>
      <url>http://idler1229.github.io/2016/04/26/Linux/Shell/Linux-cmd/</url>
      <content type="html"><![CDATA[<h2 id="&#x5E38;&#x7528;&#x547D;&#x4EE4;"><a href="#&#x5E38;&#x7528;&#x547D;&#x4EE4;" class="headerlink" title="&#x5E38;&#x7528;&#x547D;&#x4EE4;"></a>&#x5E38;&#x7528;&#x547D;&#x4EE4;</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##&#x6CE8;&#xFF1A;&#x53D8;&#x91CF;&#x8D4B;&#x503C;&#x7B49;&#x53F7;&#x4E0D;&#x80FD;&#x542B;&#x7A7A;&#x683C;</span></span><br><span class="line"></span><br><span class="line">cat -n file  or cat -b file    <span class="comment">#&#x663E;&#x793A;&#x6587;&#x4EF6;&#x6587;&#x4EF6;&#x65F6;&#x5019;&#x5E26;&#x4E0A;&#x884C;&#x53F7;</span></span><br><span class="line"></span><br><span class="line">find . -print -exec chmod 777 {} \;    <span class="comment">#&#x9012;&#x5F52;&#x4FEE;&#x6539;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x6743;&#x9650;&#x4E3A;777</span></span><br><span class="line"></span><br><span class="line">lshw -C display    <span class="comment">#&#x83B7;&#x53D6;&#x56FE;&#x5F62;&#x82AF;&#x7247;&#x4FE1;&#x606F;</span></span><br><span class="line"></span><br><span class="line">lsusb <span class="_">-d</span> &#x4EA7;&#x54C1;ID -v     <span class="comment">#&#x67E5;&#x770B;&#x786C;&#x4EF6;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;</span></span><br><span class="line">lsusb <span class="_">-s</span> devnum -v    </span><br><span class="line"></span><br><span class="line">find -type l -xtype d     <span class="comment">#&#x5BFB;&#x627E;&#x6240;&#x6709;&#x6307;&#x5411;&#x76EE;&#x5F55;&#x7684;&#x8F6F;link                        </span></span><br><span class="line"></span><br><span class="line">find /path/to/dir -type f | grep -o <span class="string">&apos;\.[^./]*$&apos;</span> | sort | uniq     <span class="comment">#&#x5217;&#x51FA;&#x76EE;&#x5F55;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x6269;&#x5C55;&#x540D;                        </span></span><br><span class="line"></span><br><span class="line">du -h /path | sort -h     <span class="comment">#&#x67E5;&#x770B;&#x6240;&#x6709;&#x76EE;&#x5F55;&#x5927;&#x5C0F;</span></span><br><span class="line"></span><br><span class="line">du <span class="_">-d</span> /path     <span class="comment">#&#x67E5;&#x770B;path&#x76EE;&#x5F55;&#x7684;&#x5360;&#x7528;&#x7A7A;&#x95F4;&#x5927;&#x5C0F;</span></span><br><span class="line"></span><br><span class="line">free -m | awk <span class="string">&apos;/cache:/ { printf(&quot;%d%\n&quot;,$3/($3+$4)*100)}&apos;</span> &#x7A7A;&#x95F2;&#x5185;&#x5B58;&#x767E;&#x5206;&#x6BD4;</span><br><span class="line"></span><br><span class="line">pgrep <span class="_">-f</span> <span class="string">&apos;process.*argument.*&apos;</span>     <span class="comment">#&#x6839;&#x636E;&#x540D;&#x79F0;&#x548C;&#x53C2;&#x6570;&#x83B7;&#x53D6;&#x8FDB;&#x7A0B;id       </span></span><br><span class="line"></span><br><span class="line">ps auxf <span class="comment">#&#x5E26;&#x7236;&#x5B50;&#x8FDB;&#x7A0B;&#x6811;&#x7684;ps&#x8F93;&#x51FA;</span></span><br><span class="line"></span><br><span class="line">find . -mtime +30 -exec mv {} old/ \;     <span class="comment">#&#x628A;30&#x5929;&#x524D;&#x4FEE;&#x6539;&#x7684;&#x6587;&#x4EF6;&#x79FB;&#x52A8;&#x5230; old &#x76EE;&#x5F55;     </span></span><br><span class="line"></span><br><span class="line">find . -name <span class="string">&quot;*.cpp&quot;</span> |xargs cat|wc <span class="_">-l</span> <span class="comment">#&#x5F53;&#x524D;&#x76EE;&#x5F55;cpp&#x6E90;&#x6587;&#x4EF6;&#x4EE3;&#x7801;&#x884C;&#x6570;</span></span><br><span class="line"></span><br><span class="line">find . -name <span class="string">&quot;*.cpp&quot;</span>|xargs cat|grep -v ^$|wc <span class="_">-l</span> <span class="comment">#&#x5F53;&#x524D;&#x76EE;&#x5F55;cpp&#x6E90;&#x6587;&#x4EF6;&#x975E;&#x7A7A;&#x884C;&#x4EE3;&#x7801;&#x6570;</span></span><br><span class="line"></span><br><span class="line">find . -type f -name <span class="string">&apos;*.pm&apos;</span> -printf <span class="string">&apos;%6s %p\n&apos;</span> | sort -nr | head -n 50     <span class="comment">#&#x5217;&#x51FA;50&#x4E2A;&#x5927;&#x6587;&#x4EF6; </span></span><br><span class="line"></span><br><span class="line">find -iname \*.pdf -print0 | xargs -0 pdfgrep -i <span class="string">&quot;my search text&quot;</span>     <span class="comment">#&#x5728;pdf&#x4E2D;&#x67E5;&#x627E; </span></span><br><span class="line"></span><br><span class="line">pwdx pid     <span class="comment">#&#x663E;&#x793A;&#x8FDB;&#x7A0B;&#x7684;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55; </span></span><br><span class="line"></span><br><span class="line">ps -ef | grep [f]oo | awk <span class="string">&apos;{print $2}&apos;</span> | xargs <span class="built_in">kill</span> -9  <span class="comment">#&#x6E05;&#x7406;&#x6240;&#x6709;&#x53EB;foo&#x7684;&#x8FDB;&#x7A0B;(killall)</span></span><br><span class="line"></span><br><span class="line">du -sm /home/* | sort -n | tail -10    <span class="comment">#&#x67E5;&#x627E;10&#x4E2A;home&#x76EE;&#x5F55;&#x5927;&#x7684;&#x7528;&#x6237;</span></span><br><span class="line"></span><br><span class="line">ls -1 | rename <span class="string">&apos;s/\ /_/&apos;</span>  <span class="comment">#&#x628A;&#x6587;&#x4EF6;&#x540D;&#x4E2D;&#x7684;&#x7A7A;&#x683C;&#x66FF;&#x6362;&#x6210;&#x4E0B;&#x5212;&#x7EBF;</span></span><br><span class="line"></span><br><span class="line">find / -iname <span class="string">&apos;*.pdf&apos;</span> -print -exec pdftotext <span class="string">&apos;{}&apos;</span> - \; | grep --color -i <span class="string">&quot;unix&quot;</span> <span class="comment"># &#x5728;pdf&#x4E2D;grep</span></span><br><span class="line"></span><br><span class="line">sed <span class="string">&apos;/^ #.*DEBUG.*/ s/^# //&apos;</span> <span class="variable">$FILE</span> <span class="comment"># &#x4F7F;&#x7528; sed &#x6253;&#x5F00;&#x5173;&#x95ED;&#x6CE8;&#x91CA;</span></span><br><span class="line"></span><br><span class="line">pv file1 &gt; file2	<span class="comment">#&#x5E26;&#x8FDB;&#x5EA6;&#x6761;&#x7684;&#x590D;&#x5236;&#x6587;&#x4EF6;</span></span><br><span class="line"></span><br><span class="line">rename -v <span class="string">&apos;s/ /_/g&apos;</span> *	<span class="comment"># &#x66FF;&#x6362;&#x6587;&#x4EF6;&#x540D;&#x4E2D;&#x7684;&#x7A7A;&#x683C;&#x4E3A;&#x4E0B;&#x5212;&#x7EBF;</span></span><br><span class="line"></span><br><span class="line">vim -c new myfile	<span class="comment"># &#x7528;vim&#x540C;&#x65F6;&#x6253;&#x5F00;&#x591A;&#x4E2A;&#x6587;&#x4EF6;</span></span><br><span class="line"></span><br><span class="line">rm **/*(-@)	<span class="comment"># &#x6E05;&#x7406;&#x6389;&#x65E0;&#x6548;&#x7684;&#x7B26;&#x53F7;link</span></span><br></pre></td></tr></table></figure>
<h2 id="&#x76D1;&#x63A7;"><a href="#&#x76D1;&#x63A7;" class="headerlink" title="&#x76D1;&#x63A7;"></a>&#x76D1;&#x63A7;</h2><a id="more"></a>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x76D1;&#x63A7;&#x8FDB;&#x7A0B;&#x4FE1;&#x606F;&#x5E76;&#x5B9E;&#x65F6;&#x8F93;&#x51FA;</span></span><br><span class="line">top -b <span class="_">-d</span> 1 | sed <span class="string">&apos;s/^/varName schoolId/&apos;</span> | awk <span class="string">&apos;{print $1,$2,$3,$4,$11,$12,systime(),$14}&apos;</span> | grep --line-buffered firefox</span><br><span class="line"></span><br><span class="line">tcpdump -w - |pv -bert &gt;/dev/null  <span class="comment">#&#x67E5;&#x770B;&#x7F51;&#x7EDC;&#x541E;&#x5410;&#x91CF;</span></span><br><span class="line"></span><br><span class="line">ps axu | grep [a]pache2 <span class="comment">#&#x67E5;&#x770B;&#x8FDB;&#x7A0B;&#x65F6;&#x5019;&#x907F;&#x514D;&#x81EA;&#x5DF1;&#x88AB;grep &#x5230;</span></span><br><span class="line"></span><br><span class="line">ifconfig <span class="_">-a</span>| grep -o -E <span class="string">&apos;([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}&apos;</span> <span class="comment">#&#x83B7;&#x53D6;&#x6240;&#x6709;mac&#x5730;&#x5740;</span></span><br><span class="line"></span><br><span class="line">PID=httpd ; ps aux | grep <span class="variable">$PID</span> | grep -v grep | awk <span class="string">&apos;{print $2}&apos;</span> | xargs <span class="built_in">kill</span> -9 &#x6740;&#x6B7B;&#x6240;&#x6709; <span class="variable">$PID</span> &#x7684;&#x5B50;&#x8FDB;&#x7A0B;</span><br></pre></td></tr></table></figure>
<h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x8F6C;&#x6362;&#x4E3A;&#x5408;&#x9002;&#x7684;md&#x683C;&#x5F0F;</span></span><br><span class="line">awk -F <span class="string">&apos;|&apos;</span> <span class="string">&apos;{print &quot;|&quot;$2&quot;|&quot; &quot;[&quot;$3&quot;](&quot;$5&quot;)|&quot;$4&quot;|&quot;}&apos;</span>  filename   </span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x53BB;&#x9664;md&#x683C;&#x5F0F;&#x4E2D;&#x8868;&#x683C;&#x5185;&#x90E8;&#x7684;&#x7A7A;&#x683C;</span></span><br><span class="line">awk <span class="string">&apos;gsub(/^ *| *$/,&quot;&quot;)&apos;</span> filename</span><br></pre></td></tr></table></figure>
<p>##&#x5173;&#x95ED;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x968F;&#x673A;&#x5316;(ASLR)<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/kernel/randomize_va_space</span><br></pre></td></tr></table></figure></p>
<h2 id="curl&#x722C;&#x866B;"><a href="#curl&#x722C;&#x866B;" class="headerlink" title="curl&#x722C;&#x866B;"></a>curl&#x722C;&#x866B;</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl url | egrep -o <span class="string">&apos;(http|https)://[a-z0-9]*\.[a-z0-9]*\.[a-z0-9]*&apos;</span>|sort |uniq    <span class="comment">#&#x7F51;&#x9875;&#x4E2D;&#x63D0;&#x53D6;url</span></span><br></pre></td></tr></table></figure>
<h2 id="curl&#x2013;&#x6A21;&#x62DF;post&#x767B;&#x9646;"><a href="#curl&#x2013;&#x6A21;&#x62DF;post&#x767B;&#x9646;" class="headerlink" title="curl&#x2013;&#x6A21;&#x62DF;post&#x767B;&#x9646;"></a>curl&#x2013;&#x6A21;&#x62DF;post&#x767B;&#x9646;</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ACCOUNT=xxx</span><br><span class="line">PASS=xxx</span><br><span class="line">curl <span class="_">-d</span> <span class="string">&quot;username=<span class="variable">$ACCOUNT</span>&amp;password=<span class="variable">$PASS</span>&quot;</span> http://p.nju.edu.cn/portal_io/login</span><br></pre></td></tr></table></figure>
<h2 id="Transform"><a href="#Transform" class="headerlink" title="Transform"></a>Transform</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">convert example.png -resize 100x100! output.png &#x7F29;&#x653E;&#x56FE;&#x7247;</span><br><span class="line"></span><br><span class="line">ffmpeg -i initial.mkv -acodec libvorbis -ab 128k -ac 2 -vcodec libx264 -vpre max -crf 22 -threads 0 final.mkv <span class="comment">#&#x5C06;mkv&#x6587;&#x4EF6;&#x7F16;&#x7801;&#x6210;ogg+h264+mkv&#x683C;&#x5F0F;</span></span><br><span class="line"></span><br><span class="line">mencoder mf://*.jpg -mf fps=50:<span class="built_in">type</span>=jpg -ovc raw -oac copy -o out50fps.avi  <span class="comment">#&#x6309;&#x7167;&#x5B57;&#x6BCD;&#x8868;&#x987A;&#x5E8F;&#x5C06;&#x6240;&#x6709;jpeg&#x6587;&#x4EF6;&#x5408;&#x5E76;&#x6210;&#x4E00;&#x4E2A;50&#x5E27;&#x6BCF;&#x79D2;&#x7684;&#x89C6;&#x9891;</span></span><br><span class="line"></span><br><span class="line">gs -q <span class="_">-d</span>NOPAUSE <span class="_">-d</span>BATCH <span class="_">-s</span>DEVICE=pdfwrite <span class="_">-s</span>OutputFile=<span class="variable">${out}</span>.pdf <span class="variable">${filename1}</span> <span class="variable">${filename2}</span> ... <span class="comment">#&#x5408;&#x5E76;pdf</span></span><br></pre></td></tr></table></figure>
<h3 id="&#x89E3;&#x538B;&#x547D;&#x4EE4;"><a href="#&#x89E3;&#x538B;&#x547D;&#x4EE4;" class="headerlink" title="&#x89E3;&#x538B;&#x547D;&#x4EE4;"></a>&#x89E3;&#x538B;&#x547D;&#x4EE4;</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar jxvf </span><br><span class="line">tar -xvf</span><br><span class="line">bzip2 <span class="_">-d</span> </span><br><span class="line">&#x89E3;&#x538B;tar.bz2</span><br></pre></td></tr></table></figure>
<h2 id="&#x673A;&#x5668;&#x76F8;&#x5173;"><a href="#&#x673A;&#x5668;&#x76F8;&#x5173;" class="headerlink" title="&#x673A;&#x5668;&#x76F8;&#x5173;"></a>&#x673A;&#x5668;&#x76F8;&#x5173;</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo dmidecode <span class="_">-s</span> system-product-name <span class="comment">#&#x673A;&#x5668;&#x578B;&#x53F7; </span></span><br><span class="line">sudo dmidecode --type=processor | grep -i -A 1 charac <span class="comment">#&#x68C0;&#x67E5;cpu&#x662F;&#x5426;&#x652F;&#x6301;64&#x4F4D;&#x6307;&#x4EE4;         </span></span><br><span class="line">pacmd <span class="built_in">set</span>-sink-volume 0 0x10000 <span class="comment">#&#x547D;&#x4EE4;&#x884C;&#x8C03;&#x8282;&#x97F3;&#x91CF;</span></span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Linux&#x5236;&#x4F5C;&#x542F;&#x52A8;&#x76D8;</span></span><br><span class="line">```sh</span><br><span class="line">&#x78C1;&#x76D8;&#x590D;&#x5236; dd <span class="keyword">if</span>=/dev/sda of=/dev/sdb</span><br><span class="line">&#x523B;&#x5F55;&#x5149;&#x76D8; dd <span class="keyword">if</span>=XXXX.iso of=/dev/sdb</span><br><span class="line">&#x70E7;&#x5F55;<span class="built_in">cd</span> cdrecord -v dev=/dev/cdrom yourimage.iso</span><br></pre></td></tr></table></figure>
<h2 id="sendmail&#x547D;&#x4EE4;&#x2013;cmd&#x4E0B;&#x53D1;&#x9001;&#x90AE;&#x4EF6;"><a href="#sendmail&#x547D;&#x4EE4;&#x2013;cmd&#x4E0B;&#x53D1;&#x9001;&#x90AE;&#x4EF6;" class="headerlink" title="sendmail&#x547D;&#x4EE4;&#x2013;cmd&#x4E0B;&#x53D1;&#x9001;&#x90AE;&#x4EF6;"></a>sendmail&#x547D;&#x4EE4;&#x2013;cmd&#x4E0B;&#x53D1;&#x9001;&#x90AE;&#x4EF6;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sendemail 	-s ${mail-server}</span><br><span class="line">			-f ${my_email} </span><br><span class="line">			-t ${dst-email} </span><br><span class="line">			-u WTF </span><br><span class="line">			-m &quot;Utilize command line tools - [sendemail] to send an e-mail to you.&quot; </span><br><span class="line">			-xu ${username} </span><br><span class="line">			-xp ${password} </span><br><span class="line">			-o tls=auto </span><br><span class="line">			-a ${attatch-file}</span><br><span class="line">ex:</span><br><span class="line">sendemail 	-s smtp.nju.edu.cn </span><br><span class="line">			-f mg1433094@smail.nju.edu.cn </span><br><span class="line">			-t 1826588117@qq.com </span><br><span class="line">			-u WTF </span><br><span class="line">			-m &quot;Utilize command line tools - [sendemail] to send an e-mail to you.&quot; </span><br><span class="line">			-xu mg1433094@smail.nju.edu.cn </span><br><span class="line">			-xp password </span><br><span class="line">			-o tls=auto</span><br></pre></td></tr></table></figure>
<h2 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p -N <span class="_">-e</span><span class="string">&quot;show processlist\G;&quot;</span> | egrep <span class="string">&quot;Host\:&quot;</span> | awk -F: <span class="string">&apos;{ print $2 }&apos;</span> | sort | uniq -c   <span class="comment">#&#x663E;&#x793A;MySQL&#x7684;&#x94FE;&#x63A5;&#x6570;</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PCL Configuration]]></title>
      <url>http://idler1229.github.io/2016/04/16/CV/PCL-Configuration/</url>
      <content type="html"><![CDATA[<h2 id="Configure-PCL-on-WIN10"><a href="#Configure-PCL-on-WIN10" class="headerlink" title="Configure PCL on WIN10"></a>Configure PCL on WIN10</h2><h3 id="Download-Packages"><a href="#Download-Packages" class="headerlink" title="Download Packages"></a>Download Packages</h3><p><em>url</em>: <a href="http://pan.baidu.com/s/1c3FU3c" target="_blank" rel="external">http://pan.baidu.com/s/1c3FU3c</a><br><em>passwd</em>: wubh</p>
<h3 id="System-Varibles"><a href="#System-Varibles" class="headerlink" title="System Varibles"></a>System Varibles</h3><h4 id="Add-PCL-ROOT-Path"><a href="#Add-PCL-ROOT-Path" class="headerlink" title="Add PCL_ROOT Path"></a>Add <em>PCL_ROOT</em> Path</h4><p>PCL_ROOT = <em>Files-Location</em></p>
<h4 id="Append-Path"><a href="#Append-Path" class="headerlink" title="Append Path"></a>Append Path</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;%PCL_ROOT%\bin;%PCL_ROOT%\3rdParty\FLANN\bin;%PCL_ROOT%\3rdParty\VTK\bin</span><br></pre></td></tr></table></figure>
<h3 id="Visual-Studio-2013"><a href="#Visual-Studio-2013" class="headerlink" title="Visual Studio 2013"></a>Visual Studio 2013</h3><h4 id="Add-PCL-props-to-Project"><a href="#Add-PCL-props-to-Project" class="headerlink" title="Add PCL.props to Project"></a>Add PCL.props to Project</h4><h5 id="PCL-props"><a href="#PCL-props" class="headerlink" title="PCL.props"></a>PCL.props</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;Project DefaultTargets=&quot;Build&quot; ToolsVersion=&quot;4.0&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;ImportGroup Label=&quot;PropertySheets&quot;/&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- User Macros --&gt;</span><br><span class="line">  &lt;PropertyGroup Label=&quot;UserMacros&quot;&gt;</span><br><span class="line">    &lt;PCL_ROOT Condition=&quot;&apos;$(Platform)&apos;==&apos;Win32&apos;&quot;&gt;$(ProgramFiles)\PCL 1.7.2&lt;/PCL_ROOT&gt;</span><br><span class="line">    &lt;PCL_ROOT Condition=&quot;&apos;$(Platform)&apos;==&apos;x64&apos;&quot;&gt;$(ProgramW6432)\PCL 1.7.2&lt;/PCL_ROOT&gt;</span><br><span class="line">  &lt;/PropertyGroup&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- Debug|Win32 --&gt;</span><br><span class="line">  &lt;PropertyGroup Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;&quot;&gt;</span><br><span class="line">  &lt;/PropertyGroup&gt;</span><br><span class="line">  &lt;ItemDefinitionGroup Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;&quot;&gt;</span><br><span class="line">    &lt;ClCompile&gt;</span><br><span class="line">      &lt;AdditionalIncludeDirectories&gt;$(PCL_ROOT)\include\pcl-1.7;$(PCL_ROOT)\3rdParty\Boost\include\boost-1_57;$(PCL_ROOT)\3rdParty\Eigen\eigen3;$(PCL_ROOT)\3rdParty\FLANN\include;$(PCL_ROOT)\3rdParty\QHull\include;$(PCL_ROOT)\3rdParty\VTK\include\vtk-6.2;%(AdditionalIncludeDirectories)&lt;/AdditionalIncludeDirectories&gt;</span><br><span class="line">    &lt;/ClCompile&gt;</span><br><span class="line">    &lt;Link&gt;</span><br><span class="line">      &lt;AdditionalLibraryDirectories&gt;$(PCL_ROOT)\lib;$(PCL_ROOT)\3rdParty\Boost\lib;$(PCL_ROOT)\3rdParty\FLANN\lib;$(PCL_ROOT)\3rdParty\QHull\lib;$(PCL_ROOT)\3rdParty\VTK\lib;%(AdditionalLibraryDirectories)&lt;/AdditionalLibraryDirectories&gt;</span><br><span class="line">      &lt;AdditionalDependencies Condition=&quot;&apos;$(PlatformToolset)&apos;==&apos;v110&apos;&quot;&gt;pcl_common_debug.lib;pcl_features_debug.lib;pcl_filters_debug.lib;pcl_io_debug.lib;pcl_io_ply_debug.lib;pcl_kdtree_debug.lib;pcl_keypoints_debug.lib;pcl_octree_debug.lib;pcl_outofcore_debug.lib;pcl_people_debug.lib;pcl_recognition_debug.lib;pcl_registration_debug.lib;pcl_sample_consensus_debug.lib;pcl_search_debug.lib;pcl_segmentation_debug.lib;pcl_surface_debug.lib;pcl_tracking_debug.lib;pcl_visualization_debug.lib;libboost_atomic-vc110-mt-gd-1_57.lib;libboost_chrono-vc110-mt-gd-1_57.lib;libboost_container-vc110-mt-gd-1_57.lib;libboost_context-vc110-mt-gd-1_57.lib;libboost_coroutine-vc110-mt-gd-1_57.lib;libboost_date_time-vc110-mt-gd-1_57.lib;libboost_exception-vc110-mt-gd-1_57.lib;libboost_filesystem-vc110-mt-gd-1_57.lib;libboost_graph-vc110-mt-gd-1_57.lib;libboost_iostreams-vc110-mt-gd-1_57.lib;libboost_locale-vc110-mt-gd-1_57.lib;libboost_log-vc110-mt-gd-1_57.lib;libboost_log_setup-vc110-mt-gd-1_57.lib;libboost_math_c99-vc110-mt-gd-1_57.lib;libboost_math_c99f-vc110-mt-gd-1_57.lib;libboost_math_c99l-vc110-mt-gd-1_57.lib;libboost_math_tr1-vc110-mt-gd-1_57.lib;libboost_math_tr1f-vc110-mt-gd-1_57.lib;libboost_math_tr1l-vc110-mt-gd-1_57.lib;libboost_mpi-vc110-mt-gd-1_57.lib;libboost_prg_exec_monitor-vc110-mt-gd-1_57.lib;libboost_program_options-vc110-mt-gd-1_57.lib;libboost_random-vc110-mt-gd-1_57.lib;libboost_regex-vc110-mt-gd-1_57.lib;libboost_serialization-vc110-mt-gd-1_57.lib;libboost_signals-vc110-mt-gd-1_57.lib;libboost_system-vc110-mt-gd-1_57.lib;libboost_test_exec_monitor-vc110-mt-gd-1_57.lib;libboost_thread-vc110-mt-gd-1_57.lib;libboost_timer-vc110-mt-gd-1_57.lib;libboost_unit_test_framework-vc110-mt-gd-1_57.lib;libboost_wave-vc110-mt-gd-1_57.lib;libboost_wserialization-vc110-mt-gd-1_57.lib;flann_cpp_s-gd.lib;qhullstatic_d.lib;vtkalglib-6.2-gd.lib;vtkChartsCore-6.2-gd.lib;vtkCommonColor-6.2-gd.lib;vtkCommonComputationalGeometry-6.2-gd.lib;vtkCommonCore-6.2-gd.lib;vtkCommonDataModel-6.2-gd.lib;vtkCommonExecutionModel-6.2-gd.lib;vtkCommonMath-6.2-gd.lib;vtkCommonMisc-6.2-gd.lib;vtkCommonSystem-6.2-gd.lib;vtkCommonTransforms-6.2-gd.lib;vtkDICOMParser-6.2-gd.lib;vtkDomainsChemistry-6.2-gd.lib;vtkexoIIc-6.2-gd.lib;vtkexpat-6.2-gd.lib;vtkFiltersAMR-6.2-gd.lib;vtkFiltersCore-6.2-gd.lib;vtkFiltersExtraction-6.2-gd.lib;vtkFiltersFlowPaths-6.2-gd.lib;vtkFiltersGeneral-6.2-gd.lib;vtkFiltersGeneric-6.2-gd.lib;vtkFiltersGeometry-6.2-gd.lib;vtkFiltersHybrid-6.2-gd.lib;vtkFiltersHyperTree-6.2-gd.lib;vtkFiltersImaging-6.2-gd.lib;vtkFiltersModeling-6.2-gd.lib;vtkFiltersParallel-6.2-gd.lib;vtkFiltersParallelImaging-6.2-gd.lib;vtkFiltersProgrammable-6.2-gd.lib;vtkFiltersSelection-6.2-gd.lib;vtkFiltersSMP-6.2-gd.lib;vtkFiltersSources-6.2-gd.lib;vtkFiltersStatistics-6.2-gd.lib;vtkFiltersTexture-6.2-gd.lib;vtkFiltersVerdict-6.2-gd.lib;vtkfreetype-6.2-gd.lib;vtkftgl-6.2-gd.lib;vtkGeovisCore-6.2-gd.lib;vtkgl2ps-6.2-gd.lib;vtkhdf5-6.2-gd.lib;vtkhdf5_hl-6.2-gd.lib;vtkImagingColor-6.2-gd.lib;vtkImagingCore-6.2-gd.lib;vtkImagingFourier-6.2-gd.lib;vtkImagingGeneral-6.2-gd.lib;vtkImagingHybrid-6.2-gd.lib;vtkImagingMath-6.2-gd.lib;vtkImagingMorphological-6.2-gd.lib;vtkImagingSources-6.2-gd.lib;vtkImagingStatistics-6.2-gd.lib;vtkImagingStencil-6.2-gd.lib;vtkInfovisCore-6.2-gd.lib;vtkInfovisLayout-6.2-gd.lib;vtkInteractionImage-6.2-gd.lib;vtkInteractionStyle-6.2-gd.lib;vtkInteractionWidgets-6.2-gd.lib;vtkIOAMR-6.2-gd.lib;vtkIOCore-6.2-gd.lib;vtkIOEnSight-6.2-gd.lib;vtkIOExodus-6.2-gd.lib;vtkIOExport-6.2-gd.lib;vtkIOGeometry-6.2-gd.lib;vtkIOImage-6.2-gd.lib;vtkIOImport-6.2-gd.lib;vtkIOInfovis-6.2-gd.lib;vtkIOLegacy-6.2-gd.lib;vtkIOLSDyna-6.2-gd.lib;vtkIOMINC-6.2-gd.lib;vtkIOMovie-6.2-gd.lib;vtkIONetCDF-6.2-gd.lib;vtkIOParallel-6.2-gd.lib;vtkIOParallelXML-6.2-gd.lib;vtkIOPLY-6.2-gd.lib;vtkIOSQL-6.2-gd.lib;vtkIOVideo-6.2-gd.lib;vtkIOXML-6.2-gd.lib;vtkIOXMLParser-6.2-gd.lib;vtkjpeg-6.2-gd.lib;vtkjsoncpp-6.2-gd.lib;vtklibxml2-6.2-gd.lib;vtkmetaio-6.2-gd.lib;vtkNetCDF-6.2-gd.lib;vtkNetCDF_cxx-6.2-gd.lib;vtkoggtheora-6.2-gd.lib;vtkParallelCore-6.2-gd.lib;vtkpng-6.2-gd.lib;vtkproj4-6.2-gd.lib;vtkRenderingAnnotation-6.2-gd.lib;vtkRenderingContext2D-6.2-gd.lib;vtkRenderingContextOpenGL-6.2-gd.lib;vtkRenderingCore-6.2-gd.lib;vtkRenderingFreeType-6.2-gd.lib;vtkRenderingFreeTypeOpenGL-6.2-gd.lib;vtkRenderingGL2PS-6.2-gd.lib;vtkRenderingImage-6.2-gd.lib;vtkRenderingLabel-6.2-gd.lib;vtkRenderingLIC-6.2-gd.lib;vtkRenderingLOD-6.2-gd.lib;vtkRenderingOpenGL-6.2-gd.lib;vtkRenderingVolume-6.2-gd.lib;vtkRenderingVolumeOpenGL-6.2-gd.lib;vtksqlite-6.2-gd.lib;vtksys-6.2-gd.lib;vtktiff-6.2-gd.lib;vtkverdict-6.2-gd.lib;vtkViewsContext2D-6.2-gd.lib;vtkViewsCore-6.2-gd.lib;vtkViewsInfovis-6.2-gd.lib;vtkzlib-6.2-gd.lib;%(AdditionalDependencies)&lt;/AdditionalDependencies&gt;</span><br><span class="line">      &lt;AdditionalDependencies Condition=&quot;&apos;$(PlatformToolset)&apos;==&apos;v120&apos;&quot;&gt;pcl_common_debug.lib;pcl_features_debug.lib;pcl_filters_debug.lib;pcl_io_debug.lib;pcl_io_ply_debug.lib;pcl_kdtree_debug.lib;pcl_keypoints_debug.lib;pcl_octree_debug.lib;pcl_outofcore_debug.lib;pcl_people_debug.lib;pcl_recognition_debug.lib;pcl_registration_debug.lib;pcl_sample_consensus_debug.lib;pcl_search_debug.lib;pcl_segmentation_debug.lib;pcl_surface_debug.lib;pcl_tracking_debug.lib;pcl_visualization_debug.lib;libboost_atomic-vc120-mt-gd-1_57.lib;libboost_chrono-vc120-mt-gd-1_57.lib;libboost_container-vc120-mt-gd-1_57.lib;libboost_context-vc120-mt-gd-1_57.lib;libboost_coroutine-vc120-mt-gd-1_57.lib;libboost_date_time-vc120-mt-gd-1_57.lib;libboost_exception-vc120-mt-gd-1_57.lib;libboost_filesystem-vc120-mt-gd-1_57.lib;libboost_graph-vc120-mt-gd-1_57.lib;libboost_iostreams-vc120-mt-gd-1_57.lib;libboost_locale-vc120-mt-gd-1_57.lib;libboost_log-vc120-mt-gd-1_57.lib;libboost_log_setup-vc120-mt-gd-1_57.lib;libboost_math_c99-vc120-mt-gd-1_57.lib;libboost_math_c99f-vc120-mt-gd-1_57.lib;libboost_math_c99l-vc120-mt-gd-1_57.lib;libboost_math_tr1-vc120-mt-gd-1_57.lib;libboost_math_tr1f-vc120-mt-gd-1_57.lib;libboost_math_tr1l-vc120-mt-gd-1_57.lib;libboost_mpi-vc120-mt-gd-1_57.lib;libboost_prg_exec_monitor-vc120-mt-gd-1_57.lib;libboost_program_options-vc120-mt-gd-1_57.lib;libboost_random-vc120-mt-gd-1_57.lib;libboost_regex-vc120-mt-gd-1_57.lib;libboost_serialization-vc120-mt-gd-1_57.lib;libboost_signals-vc120-mt-gd-1_57.lib;libboost_system-vc120-mt-gd-1_57.lib;libboost_test_exec_monitor-vc120-mt-gd-1_57.lib;libboost_thread-vc120-mt-gd-1_57.lib;libboost_timer-vc120-mt-gd-1_57.lib;libboost_unit_test_framework-vc120-mt-gd-1_57.lib;libboost_wave-vc120-mt-gd-1_57.lib;libboost_wserialization-vc120-mt-gd-1_57.lib;flann_cpp_s-gd.lib;qhullstatic_d.lib;vtkalglib-6.2-gd.lib;vtkChartsCore-6.2-gd.lib;vtkCommonColor-6.2-gd.lib;vtkCommonComputationalGeometry-6.2-gd.lib;vtkCommonCore-6.2-gd.lib;vtkCommonDataModel-6.2-gd.lib;vtkCommonExecutionModel-6.2-gd.lib;vtkCommonMath-6.2-gd.lib;vtkCommonMisc-6.2-gd.lib;vtkCommonSystem-6.2-gd.lib;vtkCommonTransforms-6.2-gd.lib;vtkDICOMParser-6.2-gd.lib;vtkDomainsChemistry-6.2-gd.lib;vtkexoIIc-6.2-gd.lib;vtkexpat-6.2-gd.lib;vtkFiltersAMR-6.2-gd.lib;vtkFiltersCore-6.2-gd.lib;vtkFiltersExtraction-6.2-gd.lib;vtkFiltersFlowPaths-6.2-gd.lib;vtkFiltersGeneral-6.2-gd.lib;vtkFiltersGeneric-6.2-gd.lib;vtkFiltersGeometry-6.2-gd.lib;vtkFiltersHybrid-6.2-gd.lib;vtkFiltersHyperTree-6.2-gd.lib;vtkFiltersImaging-6.2-gd.lib;vtkFiltersModeling-6.2-gd.lib;vtkFiltersParallel-6.2-gd.lib;vtkFiltersParallelImaging-6.2-gd.lib;vtkFiltersProgrammable-6.2-gd.lib;vtkFiltersSelection-6.2-gd.lib;vtkFiltersSMP-6.2-gd.lib;vtkFiltersSources-6.2-gd.lib;vtkFiltersStatistics-6.2-gd.lib;vtkFiltersTexture-6.2-gd.lib;vtkFiltersVerdict-6.2-gd.lib;vtkfreetype-6.2-gd.lib;vtkftgl-6.2-gd.lib;vtkGeovisCore-6.2-gd.lib;vtkgl2ps-6.2-gd.lib;vtkhdf5-6.2-gd.lib;vtkhdf5_hl-6.2-gd.lib;vtkImagingColor-6.2-gd.lib;vtkImagingCore-6.2-gd.lib;vtkImagingFourier-6.2-gd.lib;vtkImagingGeneral-6.2-gd.lib;vtkImagingHybrid-6.2-gd.lib;vtkImagingMath-6.2-gd.lib;vtkImagingMorphological-6.2-gd.lib;vtkImagingSources-6.2-gd.lib;vtkImagingStatistics-6.2-gd.lib;vtkImagingStencil-6.2-gd.lib;vtkInfovisCore-6.2-gd.lib;vtkInfovisLayout-6.2-gd.lib;vtkInteractionImage-6.2-gd.lib;vtkInteractionStyle-6.2-gd.lib;vtkInteractionWidgets-6.2-gd.lib;vtkIOAMR-6.2-gd.lib;vtkIOCore-6.2-gd.lib;vtkIOEnSight-6.2-gd.lib;vtkIOExodus-6.2-gd.lib;vtkIOExport-6.2-gd.lib;vtkIOGeometry-6.2-gd.lib;vtkIOImage-6.2-gd.lib;vtkIOImport-6.2-gd.lib;vtkIOInfovis-6.2-gd.lib;vtkIOLegacy-6.2-gd.lib;vtkIOLSDyna-6.2-gd.lib;vtkIOMINC-6.2-gd.lib;vtkIOMovie-6.2-gd.lib;vtkIONetCDF-6.2-gd.lib;vtkIOParallel-6.2-gd.lib;vtkIOParallelXML-6.2-gd.lib;vtkIOPLY-6.2-gd.lib;vtkIOSQL-6.2-gd.lib;vtkIOVideo-6.2-gd.lib;vtkIOXML-6.2-gd.lib;vtkIOXMLParser-6.2-gd.lib;vtkjpeg-6.2-gd.lib;vtkjsoncpp-6.2-gd.lib;vtklibxml2-6.2-gd.lib;vtkmetaio-6.2-gd.lib;vtkNetCDF-6.2-gd.lib;vtkNetCDF_cxx-6.2-gd.lib;vtkoggtheora-6.2-gd.lib;vtkParallelCore-6.2-gd.lib;vtkpng-6.2-gd.lib;vtkproj4-6.2-gd.lib;vtkRenderingAnnotation-6.2-gd.lib;vtkRenderingContext2D-6.2-gd.lib;vtkRenderingContextOpenGL-6.2-gd.lib;vtkRenderingCore-6.2-gd.lib;vtkRenderingFreeType-6.2-gd.lib;vtkRenderingFreeTypeOpenGL-6.2-gd.lib;vtkRenderingGL2PS-6.2-gd.lib;vtkRenderingImage-6.2-gd.lib;vtkRenderingLabel-6.2-gd.lib;vtkRenderingLIC-6.2-gd.lib;vtkRenderingLOD-6.2-gd.lib;vtkRenderingOpenGL-6.2-gd.lib;vtkRenderingVolume-6.2-gd.lib;vtkRenderingVolumeOpenGL-6.2-gd.lib;vtksqlite-6.2-gd.lib;vtksys-6.2-gd.lib;vtktiff-6.2-gd.lib;vtkverdict-6.2-gd.lib;vtkViewsContext2D-6.2-gd.lib;vtkViewsCore-6.2-gd.lib;vtkViewsInfovis-6.2-gd.lib;vtkzlib-6.2-gd.lib;%(AdditionalDependencies)&lt;/AdditionalDependencies&gt;</span><br><span class="line">    &lt;/Link&gt;</span><br><span class="line">  &lt;/ItemDefinitionGroup&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- Release|Win32 --&gt;</span><br><span class="line">  &lt;PropertyGroup Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Release|Win32&apos;&quot;&gt;</span><br><span class="line">  &lt;/PropertyGroup&gt;</span><br><span class="line">  &lt;ItemDefinitionGroup Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Release|Win32&apos;&quot;&gt;</span><br><span class="line">    &lt;ClCompile&gt;</span><br><span class="line">      &lt;AdditionalIncludeDirectories&gt;$(PCL_ROOT)\include\pcl-1.7;$(PCL_ROOT)\3rdParty\Boost\include\boost-1_57;$(PCL_ROOT)\3rdParty\Eigen\eigen3;$(PCL_ROOT)\3rdParty\FLANN\include;$(PCL_ROOT)\3rdParty\QHull\include;$(PCL_ROOT)\3rdParty\VTK\include\vtk-6.2;%(AdditionalIncludeDirectories)&lt;/AdditionalIncludeDirectories&gt;</span><br><span class="line">    &lt;/ClCompile&gt;</span><br><span class="line">    &lt;Link&gt;</span><br><span class="line">      &lt;AdditionalLibraryDirectories&gt;$(PCL_ROOT)\lib;$(PCL_ROOT)\3rdParty\Boost\lib;$(PCL_ROOT)\3rdParty\FLANN\lib;$(PCL_ROOT)\3rdParty\QHull\lib;$(PCL_ROOT)\3rdParty\VTK\lib;%(AdditionalLibraryDirectories)&lt;/AdditionalLibraryDirectories&gt;</span><br><span class="line">      &lt;AdditionalDependencies Condition=&quot;&apos;$(PlatformToolset)&apos;==&apos;v110&apos;&quot;&gt;pcl_common_release.lib;pcl_features_release.lib;pcl_filters_release.lib;pcl_io_ply_release.lib;pcl_io_release.lib;pcl_kdtree_release.lib;pcl_keypoints_release.lib;pcl_octree_release.lib;pcl_outofcore_release.lib;pcl_people_release.lib;pcl_recognition_release.lib;pcl_registration_release.lib;pcl_sample_consensus_release.lib;pcl_search_release.lib;pcl_segmentation_release.lib;pcl_surface_release.lib;pcl_tracking_release.lib;pcl_visualization_release.lib;libboost_atomic-vc110-mt-1_57.lib;libboost_chrono-vc110-mt-1_57.lib;libboost_container-vc110-mt-1_57.lib;libboost_context-vc110-mt-1_57.lib;libboost_coroutine-vc110-mt-1_57.lib;libboost_date_time-vc110-mt-1_57.lib;libboost_exception-vc110-mt-1_57.lib;libboost_filesystem-vc110-mt-1_57.lib;libboost_graph-vc110-mt-1_57.lib;libboost_iostreams-vc110-mt-1_57.lib;libboost_locale-vc110-mt-1_57.lib;libboost_log-vc110-mt-1_57.lib;libboost_log_setup-vc110-mt-1_57.lib;libboost_math_c99-vc110-mt-1_57.lib;libboost_math_c99f-vc110-mt-1_57.lib;libboost_math_c99l-vc110-mt-1_57.lib;libboost_math_tr1-vc110-mt-1_57.lib;libboost_math_tr1f-vc110-mt-1_57.lib;libboost_math_tr1l-vc110-mt-1_57.lib;libboost_mpi-vc110-mt-1_57.lib;libboost_prg_exec_monitor-vc110-mt-1_57.lib;libboost_program_options-vc110-mt-1_57.lib;libboost_random-vc110-mt-1_57.lib;libboost_regex-vc110-mt-1_57.lib;libboost_serialization-vc110-mt-1_57.lib;libboost_signals-vc110-mt-1_57.lib;libboost_system-vc110-mt-1_57.lib;libboost_test_exec_monitor-vc110-mt-1_57.lib;libboost_thread-vc110-mt-1_57.lib;libboost_timer-vc110-mt-1_57.lib;libboost_unit_test_framework-vc110-mt-1_57.lib;libboost_wave-vc110-mt-1_57.lib;libboost_wserialization-vc110-mt-1_57.lib;flann_cpp_s.lib;qhullstatic.lib;vtkalglib-6.2.lib;vtkChartsCore-6.2.lib;vtkCommonColor-6.2.lib;vtkCommonComputationalGeometry-6.2.lib;vtkCommonCore-6.2.lib;vtkCommonDataModel-6.2.lib;vtkCommonExecutionModel-6.2.lib;vtkCommonMath-6.2.lib;vtkCommonMisc-6.2.lib;vtkCommonSystem-6.2.lib;vtkCommonTransforms-6.2.lib;vtkDICOMParser-6.2.lib;vtkDomainsChemistry-6.2.lib;vtkexoIIc-6.2.lib;vtkexpat-6.2.lib;vtkFiltersAMR-6.2.lib;vtkFiltersCore-6.2.lib;vtkFiltersExtraction-6.2.lib;vtkFiltersFlowPaths-6.2.lib;vtkFiltersGeneral-6.2.lib;vtkFiltersGeneric-6.2.lib;vtkFiltersGeometry-6.2.lib;vtkFiltersHybrid-6.2.lib;vtkFiltersHyperTree-6.2.lib;vtkFiltersImaging-6.2.lib;vtkFiltersModeling-6.2.lib;vtkFiltersParallel-6.2.lib;vtkFiltersParallelImaging-6.2.lib;vtkFiltersProgrammable-6.2.lib;vtkFiltersSelection-6.2.lib;vtkFiltersSMP-6.2.lib;vtkFiltersSources-6.2.lib;vtkFiltersStatistics-6.2.lib;vtkFiltersTexture-6.2.lib;vtkFiltersVerdict-6.2.lib;vtkfreetype-6.2.lib;vtkftgl-6.2.lib;vtkGeovisCore-6.2.lib;vtkgl2ps-6.2.lib;vtkhdf5-6.2.lib;vtkhdf5_hl-6.2.lib;vtkImagingColor-6.2.lib;vtkImagingCore-6.2.lib;vtkImagingFourier-6.2.lib;vtkImagingGeneral-6.2.lib;vtkImagingHybrid-6.2.lib;vtkImagingMath-6.2.lib;vtkImagingMorphological-6.2.lib;vtkImagingSources-6.2.lib;vtkImagingStatistics-6.2.lib;vtkImagingStencil-6.2.lib;vtkInfovisCore-6.2.lib;vtkInfovisLayout-6.2.lib;vtkInteractionImage-6.2.lib;vtkInteractionStyle-6.2.lib;vtkInteractionWidgets-6.2.lib;vtkIOAMR-6.2.lib;vtkIOCore-6.2.lib;vtkIOEnSight-6.2.lib;vtkIOExodus-6.2.lib;vtkIOExport-6.2.lib;vtkIOGeometry-6.2.lib;vtkIOImage-6.2.lib;vtkIOImport-6.2.lib;vtkIOInfovis-6.2.lib;vtkIOLegacy-6.2.lib;vtkIOLSDyna-6.2.lib;vtkIOMINC-6.2.lib;vtkIOMovie-6.2.lib;vtkIONetCDF-6.2.lib;vtkIOParallel-6.2.lib;vtkIOParallelXML-6.2.lib;vtkIOPLY-6.2.lib;vtkIOSQL-6.2.lib;vtkIOVideo-6.2.lib;vtkIOXML-6.2.lib;vtkIOXMLParser-6.2.lib;vtkjpeg-6.2.lib;vtkjsoncpp-6.2.lib;vtklibxml2-6.2.lib;vtkmetaio-6.2.lib;vtkNetCDF-6.2.lib;vtkNetCDF_cxx-6.2.lib;vtkoggtheora-6.2.lib;vtkParallelCore-6.2.lib;vtkpng-6.2.lib;vtkproj4-6.2.lib;vtkRenderingAnnotation-6.2.lib;vtkRenderingContext2D-6.2.lib;vtkRenderingContextOpenGL-6.2.lib;vtkRenderingCore-6.2.lib;vtkRenderingFreeType-6.2.lib;vtkRenderingFreeTypeOpenGL-6.2.lib;vtkRenderingGL2PS-6.2.lib;vtkRenderingImage-6.2.lib;vtkRenderingLabel-6.2.lib;vtkRenderingLIC-6.2.lib;vtkRenderingLOD-6.2.lib;vtkRenderingOpenGL-6.2.lib;vtkRenderingVolume-6.2.lib;vtkRenderingVolumeOpenGL-6.2.lib;vtksqlite-6.2.lib;vtksys-6.2.lib;vtktiff-6.2.lib;vtkverdict-6.2.lib;vtkViewsContext2D-6.2.lib;vtkViewsCore-6.2.lib;vtkViewsInfovis-6.2.lib;vtkzlib-6.2.lib;%(AdditionalDependencies)&lt;/AdditionalDependencies&gt;</span><br><span class="line">      &lt;AdditionalDependencies Condition=&quot;&apos;$(PlatformToolset)&apos;==&apos;v120&apos;&quot;&gt;pcl_common_release.lib;pcl_features_release.lib;pcl_filters_release.lib;pcl_io_ply_release.lib;pcl_io_release.lib;pcl_kdtree_release.lib;pcl_keypoints_release.lib;pcl_octree_release.lib;pcl_outofcore_release.lib;pcl_people_release.lib;pcl_recognition_release.lib;pcl_registration_release.lib;pcl_sample_consensus_release.lib;pcl_search_release.lib;pcl_segmentation_release.lib;pcl_surface_release.lib;pcl_tracking_release.lib;pcl_visualization_release.lib;libboost_atomic-vc120-mt-1_57.lib;libboost_chrono-vc120-mt-1_57.lib;libboost_container-vc120-mt-1_57.lib;libboost_context-vc120-mt-1_57.lib;libboost_coroutine-vc120-mt-1_57.lib;libboost_date_time-vc120-mt-1_57.lib;libboost_exception-vc120-mt-1_57.lib;libboost_filesystem-vc120-mt-1_57.lib;libboost_graph-vc120-mt-1_57.lib;libboost_iostreams-vc120-mt-1_57.lib;libboost_locale-vc120-mt-1_57.lib;libboost_log-vc120-mt-1_57.lib;libboost_log_setup-vc120-mt-1_57.lib;libboost_math_c99-vc120-mt-1_57.lib;libboost_math_c99f-vc120-mt-1_57.lib;libboost_math_c99l-vc120-mt-1_57.lib;libboost_math_tr1-vc120-mt-1_57.lib;libboost_math_tr1f-vc120-mt-1_57.lib;libboost_math_tr1l-vc120-mt-1_57.lib;libboost_mpi-vc120-mt-1_57.lib;libboost_prg_exec_monitor-vc120-mt-1_57.lib;libboost_program_options-vc120-mt-1_57.lib;libboost_random-vc120-mt-1_57.lib;libboost_regex-vc120-mt-1_57.lib;libboost_serialization-vc120-mt-1_57.lib;libboost_signals-vc120-mt-1_57.lib;libboost_system-vc120-mt-1_57.lib;libboost_test_exec_monitor-vc120-mt-1_57.lib;libboost_thread-vc120-mt-1_57.lib;libboost_timer-vc120-mt-1_57.lib;libboost_unit_test_framework-vc120-mt-1_57.lib;libboost_wave-vc120-mt-1_57.lib;libboost_wserialization-vc120-mt-1_57.lib;flann_cpp_s.lib;qhullstatic.lib;vtkalglib-6.2.lib;vtkChartsCore-6.2.lib;vtkCommonColor-6.2.lib;vtkCommonComputationalGeometry-6.2.lib;vtkCommonCore-6.2.lib;vtkCommonDataModel-6.2.lib;vtkCommonExecutionModel-6.2.lib;vtkCommonMath-6.2.lib;vtkCommonMisc-6.2.lib;vtkCommonSystem-6.2.lib;vtkCommonTransforms-6.2.lib;vtkDICOMParser-6.2.lib;vtkDomainsChemistry-6.2.lib;vtkexoIIc-6.2.lib;vtkexpat-6.2.lib;vtkFiltersAMR-6.2.lib;vtkFiltersCore-6.2.lib;vtkFiltersExtraction-6.2.lib;vtkFiltersFlowPaths-6.2.lib;vtkFiltersGeneral-6.2.lib;vtkFiltersGeneric-6.2.lib;vtkFiltersGeometry-6.2.lib;vtkFiltersHybrid-6.2.lib;vtkFiltersHyperTree-6.2.lib;vtkFiltersImaging-6.2.lib;vtkFiltersModeling-6.2.lib;vtkFiltersParallel-6.2.lib;vtkFiltersParallelImaging-6.2.lib;vtkFiltersProgrammable-6.2.lib;vtkFiltersSelection-6.2.lib;vtkFiltersSMP-6.2.lib;vtkFiltersSources-6.2.lib;vtkFiltersStatistics-6.2.lib;vtkFiltersTexture-6.2.lib;vtkFiltersVerdict-6.2.lib;vtkfreetype-6.2.lib;vtkftgl-6.2.lib;vtkGeovisCore-6.2.lib;vtkgl2ps-6.2.lib;vtkhdf5-6.2.lib;vtkhdf5_hl-6.2.lib;vtkImagingColor-6.2.lib;vtkImagingCore-6.2.lib;vtkImagingFourier-6.2.lib;vtkImagingGeneral-6.2.lib;vtkImagingHybrid-6.2.lib;vtkImagingMath-6.2.lib;vtkImagingMorphological-6.2.lib;vtkImagingSources-6.2.lib;vtkImagingStatistics-6.2.lib;vtkImagingStencil-6.2.lib;vtkInfovisCore-6.2.lib;vtkInfovisLayout-6.2.lib;vtkInteractionImage-6.2.lib;vtkInteractionStyle-6.2.lib;vtkInteractionWidgets-6.2.lib;vtkIOAMR-6.2.lib;vtkIOCore-6.2.lib;vtkIOEnSight-6.2.lib;vtkIOExodus-6.2.lib;vtkIOExport-6.2.lib;vtkIOGeometry-6.2.lib;vtkIOImage-6.2.lib;vtkIOImport-6.2.lib;vtkIOInfovis-6.2.lib;vtkIOLegacy-6.2.lib;vtkIOLSDyna-6.2.lib;vtkIOMINC-6.2.lib;vtkIOMovie-6.2.lib;vtkIONetCDF-6.2.lib;vtkIOParallel-6.2.lib;vtkIOParallelXML-6.2.lib;vtkIOPLY-6.2.lib;vtkIOSQL-6.2.lib;vtkIOVideo-6.2.lib;vtkIOXML-6.2.lib;vtkIOXMLParser-6.2.lib;vtkjpeg-6.2.lib;vtkjsoncpp-6.2.lib;vtklibxml2-6.2.lib;vtkmetaio-6.2.lib;vtkNetCDF-6.2.lib;vtkNetCDF_cxx-6.2.lib;vtkoggtheora-6.2.lib;vtkParallelCore-6.2.lib;vtkpng-6.2.lib;vtkproj4-6.2.lib;vtkRenderingAnnotation-6.2.lib;vtkRenderingContext2D-6.2.lib;vtkRenderingContextOpenGL-6.2.lib;vtkRenderingCore-6.2.lib;vtkRenderingFreeType-6.2.lib;vtkRenderingFreeTypeOpenGL-6.2.lib;vtkRenderingGL2PS-6.2.lib;vtkRenderingImage-6.2.lib;vtkRenderingLabel-6.2.lib;vtkRenderingLIC-6.2.lib;vtkRenderingLOD-6.2.lib;vtkRenderingOpenGL-6.2.lib;vtkRenderingVolume-6.2.lib;vtkRenderingVolumeOpenGL-6.2.lib;vtksqlite-6.2.lib;vtksys-6.2.lib;vtktiff-6.2.lib;vtkverdict-6.2.lib;vtkViewsContext2D-6.2.lib;vtkViewsCore-6.2.lib;vtkViewsInfovis-6.2.lib;vtkzlib-6.2.lib;%(AdditionalDependencies)&lt;/AdditionalDependencies&gt;</span><br><span class="line">    &lt;/Link&gt;</span><br><span class="line">  &lt;/ItemDefinitionGroup&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- Debug|x64 --&gt;</span><br><span class="line">  &lt;PropertyGroup Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|x64&apos;&quot;&gt;</span><br><span class="line">  &lt;/PropertyGroup&gt;</span><br><span class="line">  &lt;ItemDefinitionGroup Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|x64&apos;&quot;&gt;</span><br><span class="line">    &lt;ClCompile&gt;</span><br><span class="line">      &lt;AdditionalIncludeDirectories&gt;$(PCL_ROOT)\include\pcl-1.7;$(PCL_ROOT)\3rdParty\Boost\include\boost-1_57;$(PCL_ROOT)\3rdParty\Eigen\eigen3;$(PCL_ROOT)\3rdParty\FLANN\include;$(PCL_ROOT)\3rdParty\QHull\include;$(PCL_ROOT)\3rdParty\VTK\include\vtk-6.2;%(AdditionalIncludeDirectories)&lt;/AdditionalIncludeDirectories&gt;</span><br><span class="line">    &lt;/ClCompile&gt;</span><br><span class="line">    &lt;Link&gt;</span><br><span class="line">      &lt;AdditionalLibraryDirectories&gt;$(PCL_ROOT)\lib;$(PCL_ROOT)\3rdParty\Boost\lib;$(PCL_ROOT)\3rdParty\FLANN\lib;$(PCL_ROOT)\3rdParty\QHull\lib;$(PCL_ROOT)\3rdParty\VTK\lib;%(AdditionalLibraryDirectories)&lt;/AdditionalLibraryDirectories&gt;</span><br><span class="line">      &lt;AdditionalDependencies Condition=&quot;&apos;$(PlatformToolset)&apos;==&apos;v110&apos;&quot;&gt;pcl_common_debug.lib;pcl_features_debug.lib;pcl_filters_debug.lib;pcl_io_debug.lib;pcl_io_ply_debug.lib;pcl_kdtree_debug.lib;pcl_keypoints_debug.lib;pcl_octree_debug.lib;pcl_outofcore_debug.lib;pcl_people_debug.lib;pcl_recognition_debug.lib;pcl_registration_debug.lib;pcl_sample_consensus_debug.lib;pcl_search_debug.lib;pcl_segmentation_debug.lib;pcl_surface_debug.lib;pcl_tracking_debug.lib;pcl_visualization_debug.lib;libboost_atomic-vc110-mt-gd-1_57.lib;libboost_chrono-vc110-mt-gd-1_57.lib;libboost_container-vc110-mt-gd-1_57.lib;libboost_context-vc110-mt-gd-1_57.lib;libboost_coroutine-vc110-mt-gd-1_57.lib;libboost_date_time-vc110-mt-gd-1_57.lib;libboost_exception-vc110-mt-gd-1_57.lib;libboost_filesystem-vc110-mt-gd-1_57.lib;libboost_graph-vc110-mt-gd-1_57.lib;libboost_iostreams-vc110-mt-gd-1_57.lib;libboost_locale-vc110-mt-gd-1_57.lib;libboost_log-vc110-mt-gd-1_57.lib;libboost_log_setup-vc110-mt-gd-1_57.lib;libboost_math_c99-vc110-mt-gd-1_57.lib;libboost_math_c99f-vc110-mt-gd-1_57.lib;libboost_math_c99l-vc110-mt-gd-1_57.lib;libboost_math_tr1-vc110-mt-gd-1_57.lib;libboost_math_tr1f-vc110-mt-gd-1_57.lib;libboost_math_tr1l-vc110-mt-gd-1_57.lib;libboost_mpi-vc110-mt-gd-1_57.lib;libboost_prg_exec_monitor-vc110-mt-gd-1_57.lib;libboost_program_options-vc110-mt-gd-1_57.lib;libboost_random-vc110-mt-gd-1_57.lib;libboost_regex-vc110-mt-gd-1_57.lib;libboost_serialization-vc110-mt-gd-1_57.lib;libboost_signals-vc110-mt-gd-1_57.lib;libboost_system-vc110-mt-gd-1_57.lib;libboost_test_exec_monitor-vc110-mt-gd-1_57.lib;libboost_thread-vc110-mt-gd-1_57.lib;libboost_timer-vc110-mt-gd-1_57.lib;libboost_unit_test_framework-vc110-mt-gd-1_57.lib;libboost_wave-vc110-mt-gd-1_57.lib;libboost_wserialization-vc110-mt-gd-1_57.lib;flann_cpp_s-gd.lib;qhullstatic_d.lib;vtkalglib-6.2-gd.lib;vtkChartsCore-6.2-gd.lib;vtkCommonColor-6.2-gd.lib;vtkCommonComputationalGeometry-6.2-gd.lib;vtkCommonCore-6.2-gd.lib;vtkCommonDataModel-6.2-gd.lib;vtkCommonExecutionModel-6.2-gd.lib;vtkCommonMath-6.2-gd.lib;vtkCommonMisc-6.2-gd.lib;vtkCommonSystem-6.2-gd.lib;vtkCommonTransforms-6.2-gd.lib;vtkDICOMParser-6.2-gd.lib;vtkDomainsChemistry-6.2-gd.lib;vtkexoIIc-6.2-gd.lib;vtkexpat-6.2-gd.lib;vtkFiltersAMR-6.2-gd.lib;vtkFiltersCore-6.2-gd.lib;vtkFiltersExtraction-6.2-gd.lib;vtkFiltersFlowPaths-6.2-gd.lib;vtkFiltersGeneral-6.2-gd.lib;vtkFiltersGeneric-6.2-gd.lib;vtkFiltersGeometry-6.2-gd.lib;vtkFiltersHybrid-6.2-gd.lib;vtkFiltersHyperTree-6.2-gd.lib;vtkFiltersImaging-6.2-gd.lib;vtkFiltersModeling-6.2-gd.lib;vtkFiltersParallel-6.2-gd.lib;vtkFiltersParallelImaging-6.2-gd.lib;vtkFiltersProgrammable-6.2-gd.lib;vtkFiltersSelection-6.2-gd.lib;vtkFiltersSMP-6.2-gd.lib;vtkFiltersSources-6.2-gd.lib;vtkFiltersStatistics-6.2-gd.lib;vtkFiltersTexture-6.2-gd.lib;vtkFiltersVerdict-6.2-gd.lib;vtkfreetype-6.2-gd.lib;vtkftgl-6.2-gd.lib;vtkGeovisCore-6.2-gd.lib;vtkgl2ps-6.2-gd.lib;vtkhdf5-6.2-gd.lib;vtkhdf5_hl-6.2-gd.lib;vtkImagingColor-6.2-gd.lib;vtkImagingCore-6.2-gd.lib;vtkImagingFourier-6.2-gd.lib;vtkImagingGeneral-6.2-gd.lib;vtkImagingHybrid-6.2-gd.lib;vtkImagingMath-6.2-gd.lib;vtkImagingMorphological-6.2-gd.lib;vtkImagingSources-6.2-gd.lib;vtkImagingStatistics-6.2-gd.lib;vtkImagingStencil-6.2-gd.lib;vtkInfovisCore-6.2-gd.lib;vtkInfovisLayout-6.2-gd.lib;vtkInteractionImage-6.2-gd.lib;vtkInteractionStyle-6.2-gd.lib;vtkInteractionWidgets-6.2-gd.lib;vtkIOAMR-6.2-gd.lib;vtkIOCore-6.2-gd.lib;vtkIOEnSight-6.2-gd.lib;vtkIOExodus-6.2-gd.lib;vtkIOExport-6.2-gd.lib;vtkIOGeometry-6.2-gd.lib;vtkIOImage-6.2-gd.lib;vtkIOImport-6.2-gd.lib;vtkIOInfovis-6.2-gd.lib;vtkIOLegacy-6.2-gd.lib;vtkIOLSDyna-6.2-gd.lib;vtkIOMINC-6.2-gd.lib;vtkIOMovie-6.2-gd.lib;vtkIONetCDF-6.2-gd.lib;vtkIOParallel-6.2-gd.lib;vtkIOParallelXML-6.2-gd.lib;vtkIOPLY-6.2-gd.lib;vtkIOSQL-6.2-gd.lib;vtkIOVideo-6.2-gd.lib;vtkIOXML-6.2-gd.lib;vtkIOXMLParser-6.2-gd.lib;vtkjpeg-6.2-gd.lib;vtkjsoncpp-6.2-gd.lib;vtklibxml2-6.2-gd.lib;vtkmetaio-6.2-gd.lib;vtkNetCDF-6.2-gd.lib;vtkNetCDF_cxx-6.2-gd.lib;vtkoggtheora-6.2-gd.lib;vtkParallelCore-6.2-gd.lib;vtkpng-6.2-gd.lib;vtkproj4-6.2-gd.lib;vtkRenderingAnnotation-6.2-gd.lib;vtkRenderingContext2D-6.2-gd.lib;vtkRenderingContextOpenGL-6.2-gd.lib;vtkRenderingCore-6.2-gd.lib;vtkRenderingFreeType-6.2-gd.lib;vtkRenderingFreeTypeOpenGL-6.2-gd.lib;vtkRenderingGL2PS-6.2-gd.lib;vtkRenderingImage-6.2-gd.lib;vtkRenderingLabel-6.2-gd.lib;vtkRenderingLIC-6.2-gd.lib;vtkRenderingLOD-6.2-gd.lib;vtkRenderingOpenGL-6.2-gd.lib;vtkRenderingVolume-6.2-gd.lib;vtkRenderingVolumeOpenGL-6.2-gd.lib;vtksqlite-6.2-gd.lib;vtksys-6.2-gd.lib;vtktiff-6.2-gd.lib;vtkverdict-6.2-gd.lib;vtkViewsContext2D-6.2-gd.lib;vtkViewsCore-6.2-gd.lib;vtkViewsInfovis-6.2-gd.lib;vtkzlib-6.2-gd.lib;%(AdditionalDependencies)&lt;/AdditionalDependencies&gt;</span><br><span class="line">      &lt;AdditionalDependencies Condition=&quot;&apos;$(PlatformToolset)&apos;==&apos;v120&apos;&quot;&gt;pcl_common_debug.lib;pcl_features_debug.lib;pcl_filters_debug.lib;pcl_io_debug.lib;pcl_io_ply_debug.lib;pcl_kdtree_debug.lib;pcl_keypoints_debug.lib;pcl_octree_debug.lib;pcl_outofcore_debug.lib;pcl_people_debug.lib;pcl_recognition_debug.lib;pcl_registration_debug.lib;pcl_sample_consensus_debug.lib;pcl_search_debug.lib;pcl_segmentation_debug.lib;pcl_surface_debug.lib;pcl_tracking_debug.lib;pcl_visualization_debug.lib;libboost_atomic-vc120-mt-gd-1_57.lib;libboost_chrono-vc120-mt-gd-1_57.lib;libboost_container-vc120-mt-gd-1_57.lib;libboost_context-vc120-mt-gd-1_57.lib;libboost_coroutine-vc120-mt-gd-1_57.lib;libboost_date_time-vc120-mt-gd-1_57.lib;libboost_exception-vc120-mt-gd-1_57.lib;libboost_filesystem-vc120-mt-gd-1_57.lib;libboost_graph-vc120-mt-gd-1_57.lib;libboost_iostreams-vc120-mt-gd-1_57.lib;libboost_locale-vc120-mt-gd-1_57.lib;libboost_log-vc120-mt-gd-1_57.lib;libboost_log_setup-vc120-mt-gd-1_57.lib;libboost_math_c99-vc120-mt-gd-1_57.lib;libboost_math_c99f-vc120-mt-gd-1_57.lib;libboost_math_c99l-vc120-mt-gd-1_57.lib;libboost_math_tr1-vc120-mt-gd-1_57.lib;libboost_math_tr1f-vc120-mt-gd-1_57.lib;libboost_math_tr1l-vc120-mt-gd-1_57.lib;libboost_mpi-vc120-mt-gd-1_57.lib;libboost_prg_exec_monitor-vc120-mt-gd-1_57.lib;libboost_program_options-vc120-mt-gd-1_57.lib;libboost_random-vc120-mt-gd-1_57.lib;libboost_regex-vc120-mt-gd-1_57.lib;libboost_serialization-vc120-mt-gd-1_57.lib;libboost_signals-vc120-mt-gd-1_57.lib;libboost_system-vc120-mt-gd-1_57.lib;libboost_test_exec_monitor-vc120-mt-gd-1_57.lib;libboost_thread-vc120-mt-gd-1_57.lib;libboost_timer-vc120-mt-gd-1_57.lib;libboost_unit_test_framework-vc120-mt-gd-1_57.lib;libboost_wave-vc120-mt-gd-1_57.lib;libboost_wserialization-vc120-mt-gd-1_57.lib;flann_cpp_s-gd.lib;qhullstatic_d.lib;vtkalglib-6.2-gd.lib;vtkChartsCore-6.2-gd.lib;vtkCommonColor-6.2-gd.lib;vtkCommonComputationalGeometry-6.2-gd.lib;vtkCommonCore-6.2-gd.lib;vtkCommonDataModel-6.2-gd.lib;vtkCommonExecutionModel-6.2-gd.lib;vtkCommonMath-6.2-gd.lib;vtkCommonMisc-6.2-gd.lib;vtkCommonSystem-6.2-gd.lib;vtkCommonTransforms-6.2-gd.lib;vtkDICOMParser-6.2-gd.lib;vtkDomainsChemistry-6.2-gd.lib;vtkexoIIc-6.2-gd.lib;vtkexpat-6.2-gd.lib;vtkFiltersAMR-6.2-gd.lib;vtkFiltersCore-6.2-gd.lib;vtkFiltersExtraction-6.2-gd.lib;vtkFiltersFlowPaths-6.2-gd.lib;vtkFiltersGeneral-6.2-gd.lib;vtkFiltersGeneric-6.2-gd.lib;vtkFiltersGeometry-6.2-gd.lib;vtkFiltersHybrid-6.2-gd.lib;vtkFiltersHyperTree-6.2-gd.lib;vtkFiltersImaging-6.2-gd.lib;vtkFiltersModeling-6.2-gd.lib;vtkFiltersParallel-6.2-gd.lib;vtkFiltersParallelImaging-6.2-gd.lib;vtkFiltersProgrammable-6.2-gd.lib;vtkFiltersSelection-6.2-gd.lib;vtkFiltersSMP-6.2-gd.lib;vtkFiltersSources-6.2-gd.lib;vtkFiltersStatistics-6.2-gd.lib;vtkFiltersTexture-6.2-gd.lib;vtkFiltersVerdict-6.2-gd.lib;vtkfreetype-6.2-gd.lib;vtkftgl-6.2-gd.lib;vtkGeovisCore-6.2-gd.lib;vtkgl2ps-6.2-gd.lib;vtkhdf5-6.2-gd.lib;vtkhdf5_hl-6.2-gd.lib;vtkImagingColor-6.2-gd.lib;vtkImagingCore-6.2-gd.lib;vtkImagingFourier-6.2-gd.lib;vtkImagingGeneral-6.2-gd.lib;vtkImagingHybrid-6.2-gd.lib;vtkImagingMath-6.2-gd.lib;vtkImagingMorphological-6.2-gd.lib;vtkImagingSources-6.2-gd.lib;vtkImagingStatistics-6.2-gd.lib;vtkImagingStencil-6.2-gd.lib;vtkInfovisCore-6.2-gd.lib;vtkInfovisLayout-6.2-gd.lib;vtkInteractionImage-6.2-gd.lib;vtkInteractionStyle-6.2-gd.lib;vtkInteractionWidgets-6.2-gd.lib;vtkIOAMR-6.2-gd.lib;vtkIOCore-6.2-gd.lib;vtkIOEnSight-6.2-gd.lib;vtkIOExodus-6.2-gd.lib;vtkIOExport-6.2-gd.lib;vtkIOGeometry-6.2-gd.lib;vtkIOImage-6.2-gd.lib;vtkIOImport-6.2-gd.lib;vtkIOInfovis-6.2-gd.lib;vtkIOLegacy-6.2-gd.lib;vtkIOLSDyna-6.2-gd.lib;vtkIOMINC-6.2-gd.lib;vtkIOMovie-6.2-gd.lib;vtkIONetCDF-6.2-gd.lib;vtkIOParallel-6.2-gd.lib;vtkIOParallelXML-6.2-gd.lib;vtkIOPLY-6.2-gd.lib;vtkIOSQL-6.2-gd.lib;vtkIOVideo-6.2-gd.lib;vtkIOXML-6.2-gd.lib;vtkIOXMLParser-6.2-gd.lib;vtkjpeg-6.2-gd.lib;vtkjsoncpp-6.2-gd.lib;vtklibxml2-6.2-gd.lib;vtkmetaio-6.2-gd.lib;vtkNetCDF-6.2-gd.lib;vtkNetCDF_cxx-6.2-gd.lib;vtkoggtheora-6.2-gd.lib;vtkParallelCore-6.2-gd.lib;vtkpng-6.2-gd.lib;vtkproj4-6.2-gd.lib;vtkRenderingAnnotation-6.2-gd.lib;vtkRenderingContext2D-6.2-gd.lib;vtkRenderingContextOpenGL-6.2-gd.lib;vtkRenderingCore-6.2-gd.lib;vtkRenderingFreeType-6.2-gd.lib;vtkRenderingFreeTypeOpenGL-6.2-gd.lib;vtkRenderingGL2PS-6.2-gd.lib;vtkRenderingImage-6.2-gd.lib;vtkRenderingLabel-6.2-gd.lib;vtkRenderingLIC-6.2-gd.lib;vtkRenderingLOD-6.2-gd.lib;vtkRenderingOpenGL-6.2-gd.lib;vtkRenderingVolume-6.2-gd.lib;vtkRenderingVolumeOpenGL-6.2-gd.lib;vtksqlite-6.2-gd.lib;vtksys-6.2-gd.lib;vtktiff-6.2-gd.lib;vtkverdict-6.2-gd.lib;vtkViewsContext2D-6.2-gd.lib;vtkViewsCore-6.2-gd.lib;vtkViewsInfovis-6.2-gd.lib;vtkzlib-6.2-gd.lib;%(AdditionalDependencies)&lt;/AdditionalDependencies&gt;</span><br><span class="line">    &lt;/Link&gt;</span><br><span class="line">  &lt;/ItemDefinitionGroup&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- Release|x64 --&gt;</span><br><span class="line">  &lt;PropertyGroup Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Release|x64&apos;&quot;&gt;</span><br><span class="line">  &lt;/PropertyGroup&gt;</span><br><span class="line">  &lt;ItemDefinitionGroup Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Release|x64&apos;&quot;&gt;</span><br><span class="line">    &lt;ClCompile&gt;</span><br><span class="line">      &lt;AdditionalIncludeDirectories&gt;$(PCL_ROOT)\include\pcl-1.7;$(PCL_ROOT)\3rdParty\Boost\include\boost-1_57;$(PCL_ROOT)\3rdParty\Eigen\eigen3;$(PCL_ROOT)\3rdParty\FLANN\include;$(PCL_ROOT)\3rdParty\QHull\include;$(PCL_ROOT)\3rdParty\VTK\include\vtk-6.2;%(AdditionalIncludeDirectories)&lt;/AdditionalIncludeDirectories&gt;</span><br><span class="line">    &lt;/ClCompile&gt;</span><br><span class="line">    &lt;Link&gt;</span><br><span class="line">      &lt;AdditionalLibraryDirectories&gt;$(PCL_ROOT)\lib;$(PCL_ROOT)\3rdParty\Boost\lib;$(PCL_ROOT)\3rdParty\FLANN\lib;$(PCL_ROOT)\3rdParty\QHull\lib;$(PCL_ROOT)\3rdParty\VTK\lib;%(AdditionalLibraryDirectories)&lt;/AdditionalLibraryDirectories&gt;</span><br><span class="line">      &lt;AdditionalDependencies Condition=&quot;&apos;$(PlatformToolset)&apos;==&apos;v110&apos;&quot;&gt;pcl_common_release.lib;pcl_features_release.lib;pcl_filters_release.lib;pcl_io_ply_release.lib;pcl_io_release.lib;pcl_kdtree_release.lib;pcl_keypoints_release.lib;pcl_octree_release.lib;pcl_outofcore_release.lib;pcl_people_release.lib;pcl_recognition_release.lib;pcl_registration_release.lib;pcl_sample_consensus_release.lib;pcl_search_release.lib;pcl_segmentation_release.lib;pcl_surface_release.lib;pcl_tracking_release.lib;pcl_visualization_release.lib;libboost_atomic-vc110-mt-1_57.lib;libboost_chrono-vc110-mt-1_57.lib;libboost_container-vc110-mt-1_57.lib;libboost_context-vc110-mt-1_57.lib;libboost_coroutine-vc110-mt-1_57.lib;libboost_date_time-vc110-mt-1_57.lib;libboost_exception-vc110-mt-1_57.lib;libboost_filesystem-vc110-mt-1_57.lib;libboost_graph-vc110-mt-1_57.lib;libboost_iostreams-vc110-mt-1_57.lib;libboost_locale-vc110-mt-1_57.lib;libboost_log-vc110-mt-1_57.lib;libboost_log_setup-vc110-mt-1_57.lib;libboost_math_c99-vc110-mt-1_57.lib;libboost_math_c99f-vc110-mt-1_57.lib;libboost_math_c99l-vc110-mt-1_57.lib;libboost_math_tr1-vc110-mt-1_57.lib;libboost_math_tr1f-vc110-mt-1_57.lib;libboost_math_tr1l-vc110-mt-1_57.lib;libboost_mpi-vc110-mt-1_57.lib;libboost_prg_exec_monitor-vc110-mt-1_57.lib;libboost_program_options-vc110-mt-1_57.lib;libboost_random-vc110-mt-1_57.lib;libboost_regex-vc110-mt-1_57.lib;libboost_serialization-vc110-mt-1_57.lib;libboost_signals-vc110-mt-1_57.lib;libboost_system-vc110-mt-1_57.lib;libboost_test_exec_monitor-vc110-mt-1_57.lib;libboost_thread-vc110-mt-1_57.lib;libboost_timer-vc110-mt-1_57.lib;libboost_unit_test_framework-vc110-mt-1_57.lib;libboost_wave-vc110-mt-1_57.lib;libboost_wserialization-vc110-mt-1_57.lib;flann_cpp_s.lib;qhullstatic.lib;vtkalglib-6.2.lib;vtkChartsCore-6.2.lib;vtkCommonColor-6.2.lib;vtkCommonComputationalGeometry-6.2.lib;vtkCommonCore-6.2.lib;vtkCommonDataModel-6.2.lib;vtkCommonExecutionModel-6.2.lib;vtkCommonMath-6.2.lib;vtkCommonMisc-6.2.lib;vtkCommonSystem-6.2.lib;vtkCommonTransforms-6.2.lib;vtkDICOMParser-6.2.lib;vtkDomainsChemistry-6.2.lib;vtkexoIIc-6.2.lib;vtkexpat-6.2.lib;vtkFiltersAMR-6.2.lib;vtkFiltersCore-6.2.lib;vtkFiltersExtraction-6.2.lib;vtkFiltersFlowPaths-6.2.lib;vtkFiltersGeneral-6.2.lib;vtkFiltersGeneric-6.2.lib;vtkFiltersGeometry-6.2.lib;vtkFiltersHybrid-6.2.lib;vtkFiltersHyperTree-6.2.lib;vtkFiltersImaging-6.2.lib;vtkFiltersModeling-6.2.lib;vtkFiltersParallel-6.2.lib;vtkFiltersParallelImaging-6.2.lib;vtkFiltersProgrammable-6.2.lib;vtkFiltersSelection-6.2.lib;vtkFiltersSMP-6.2.lib;vtkFiltersSources-6.2.lib;vtkFiltersStatistics-6.2.lib;vtkFiltersTexture-6.2.lib;vtkFiltersVerdict-6.2.lib;vtkfreetype-6.2.lib;vtkftgl-6.2.lib;vtkGeovisCore-6.2.lib;vtkgl2ps-6.2.lib;vtkhdf5-6.2.lib;vtkhdf5_hl-6.2.lib;vtkImagingColor-6.2.lib;vtkImagingCore-6.2.lib;vtkImagingFourier-6.2.lib;vtkImagingGeneral-6.2.lib;vtkImagingHybrid-6.2.lib;vtkImagingMath-6.2.lib;vtkImagingMorphological-6.2.lib;vtkImagingSources-6.2.lib;vtkImagingStatistics-6.2.lib;vtkImagingStencil-6.2.lib;vtkInfovisCore-6.2.lib;vtkInfovisLayout-6.2.lib;vtkInteractionImage-6.2.lib;vtkInteractionStyle-6.2.lib;vtkInteractionWidgets-6.2.lib;vtkIOAMR-6.2.lib;vtkIOCore-6.2.lib;vtkIOEnSight-6.2.lib;vtkIOExodus-6.2.lib;vtkIOExport-6.2.lib;vtkIOGeometry-6.2.lib;vtkIOImage-6.2.lib;vtkIOImport-6.2.lib;vtkIOInfovis-6.2.lib;vtkIOLegacy-6.2.lib;vtkIOLSDyna-6.2.lib;vtkIOMINC-6.2.lib;vtkIOMovie-6.2.lib;vtkIONetCDF-6.2.lib;vtkIOParallel-6.2.lib;vtkIOParallelXML-6.2.lib;vtkIOPLY-6.2.lib;vtkIOSQL-6.2.lib;vtkIOVideo-6.2.lib;vtkIOXML-6.2.lib;vtkIOXMLParser-6.2.lib;vtkjpeg-6.2.lib;vtkjsoncpp-6.2.lib;vtklibxml2-6.2.lib;vtkmetaio-6.2.lib;vtkNetCDF-6.2.lib;vtkNetCDF_cxx-6.2.lib;vtkoggtheora-6.2.lib;vtkParallelCore-6.2.lib;vtkpng-6.2.lib;vtkproj4-6.2.lib;vtkRenderingAnnotation-6.2.lib;vtkRenderingContext2D-6.2.lib;vtkRenderingContextOpenGL-6.2.lib;vtkRenderingCore-6.2.lib;vtkRenderingFreeType-6.2.lib;vtkRenderingFreeTypeOpenGL-6.2.lib;vtkRenderingGL2PS-6.2.lib;vtkRenderingImage-6.2.lib;vtkRenderingLabel-6.2.lib;vtkRenderingLIC-6.2.lib;vtkRenderingLOD-6.2.lib;vtkRenderingOpenGL-6.2.lib;vtkRenderingVolume-6.2.lib;vtkRenderingVolumeOpenGL-6.2.lib;vtksqlite-6.2.lib;vtksys-6.2.lib;vtktiff-6.2.lib;vtkverdict-6.2.lib;vtkViewsContext2D-6.2.lib;vtkViewsCore-6.2.lib;vtkViewsInfovis-6.2.lib;vtkzlib-6.2.lib;%(AdditionalDependencies)&lt;/AdditionalDependencies&gt;</span><br><span class="line">      &lt;AdditionalDependencies Condition=&quot;&apos;$(PlatformToolset)&apos;==&apos;v120&apos;&quot;&gt;pcl_common_release.lib;pcl_features_release.lib;pcl_filters_release.lib;pcl_io_ply_release.lib;pcl_io_release.lib;pcl_kdtree_release.lib;pcl_keypoints_release.lib;pcl_octree_release.lib;pcl_outofcore_release.lib;pcl_people_release.lib;pcl_recognition_release.lib;pcl_registration_release.lib;pcl_sample_consensus_release.lib;pcl_search_release.lib;pcl_segmentation_release.lib;pcl_surface_release.lib;pcl_tracking_release.lib;pcl_visualization_release.lib;libboost_atomic-vc120-mt-1_57.lib;libboost_chrono-vc120-mt-1_57.lib;libboost_container-vc120-mt-1_57.lib;libboost_context-vc120-mt-1_57.lib;libboost_coroutine-vc120-mt-1_57.lib;libboost_date_time-vc120-mt-1_57.lib;libboost_exception-vc120-mt-1_57.lib;libboost_filesystem-vc120-mt-1_57.lib;libboost_graph-vc120-mt-1_57.lib;libboost_iostreams-vc120-mt-1_57.lib;libboost_locale-vc120-mt-1_57.lib;libboost_log-vc120-mt-1_57.lib;libboost_log_setup-vc120-mt-1_57.lib;libboost_math_c99-vc120-mt-1_57.lib;libboost_math_c99f-vc120-mt-1_57.lib;libboost_math_c99l-vc120-mt-1_57.lib;libboost_math_tr1-vc120-mt-1_57.lib;libboost_math_tr1f-vc120-mt-1_57.lib;libboost_math_tr1l-vc120-mt-1_57.lib;libboost_mpi-vc120-mt-1_57.lib;libboost_prg_exec_monitor-vc120-mt-1_57.lib;libboost_program_options-vc120-mt-1_57.lib;libboost_random-vc120-mt-1_57.lib;libboost_regex-vc120-mt-1_57.lib;libboost_serialization-vc120-mt-1_57.lib;libboost_signals-vc120-mt-1_57.lib;libboost_system-vc120-mt-1_57.lib;libboost_test_exec_monitor-vc120-mt-1_57.lib;libboost_thread-vc120-mt-1_57.lib;libboost_timer-vc120-mt-1_57.lib;libboost_unit_test_framework-vc120-mt-1_57.lib;libboost_wave-vc120-mt-1_57.lib;libboost_wserialization-vc120-mt-1_57.lib;flann_cpp_s.lib;qhullstatic.lib;vtkalglib-6.2.lib;vtkChartsCore-6.2.lib;vtkCommonColor-6.2.lib;vtkCommonComputationalGeometry-6.2.lib;vtkCommonCore-6.2.lib;vtkCommonDataModel-6.2.lib;vtkCommonExecutionModel-6.2.lib;vtkCommonMath-6.2.lib;vtkCommonMisc-6.2.lib;vtkCommonSystem-6.2.lib;vtkCommonTransforms-6.2.lib;vtkDICOMParser-6.2.lib;vtkDomainsChemistry-6.2.lib;vtkexoIIc-6.2.lib;vtkexpat-6.2.lib;vtkFiltersAMR-6.2.lib;vtkFiltersCore-6.2.lib;vtkFiltersExtraction-6.2.lib;vtkFiltersFlowPaths-6.2.lib;vtkFiltersGeneral-6.2.lib;vtkFiltersGeneric-6.2.lib;vtkFiltersGeometry-6.2.lib;vtkFiltersHybrid-6.2.lib;vtkFiltersHyperTree-6.2.lib;vtkFiltersImaging-6.2.lib;vtkFiltersModeling-6.2.lib;vtkFiltersParallel-6.2.lib;vtkFiltersParallelImaging-6.2.lib;vtkFiltersProgrammable-6.2.lib;vtkFiltersSelection-6.2.lib;vtkFiltersSMP-6.2.lib;vtkFiltersSources-6.2.lib;vtkFiltersStatistics-6.2.lib;vtkFiltersTexture-6.2.lib;vtkFiltersVerdict-6.2.lib;vtkfreetype-6.2.lib;vtkftgl-6.2.lib;vtkGeovisCore-6.2.lib;vtkgl2ps-6.2.lib;vtkhdf5-6.2.lib;vtkhdf5_hl-6.2.lib;vtkImagingColor-6.2.lib;vtkImagingCore-6.2.lib;vtkImagingFourier-6.2.lib;vtkImagingGeneral-6.2.lib;vtkImagingHybrid-6.2.lib;vtkImagingMath-6.2.lib;vtkImagingMorphological-6.2.lib;vtkImagingSources-6.2.lib;vtkImagingStatistics-6.2.lib;vtkImagingStencil-6.2.lib;vtkInfovisCore-6.2.lib;vtkInfovisLayout-6.2.lib;vtkInteractionImage-6.2.lib;vtkInteractionStyle-6.2.lib;vtkInteractionWidgets-6.2.lib;vtkIOAMR-6.2.lib;vtkIOCore-6.2.lib;vtkIOEnSight-6.2.lib;vtkIOExodus-6.2.lib;vtkIOExport-6.2.lib;vtkIOGeometry-6.2.lib;vtkIOImage-6.2.lib;vtkIOImport-6.2.lib;vtkIOInfovis-6.2.lib;vtkIOLegacy-6.2.lib;vtkIOLSDyna-6.2.lib;vtkIOMINC-6.2.lib;vtkIOMovie-6.2.lib;vtkIONetCDF-6.2.lib;vtkIOParallel-6.2.lib;vtkIOParallelXML-6.2.lib;vtkIOPLY-6.2.lib;vtkIOSQL-6.2.lib;vtkIOVideo-6.2.lib;vtkIOXML-6.2.lib;vtkIOXMLParser-6.2.lib;vtkjpeg-6.2.lib;vtkjsoncpp-6.2.lib;vtklibxml2-6.2.lib;vtkmetaio-6.2.lib;vtkNetCDF-6.2.lib;vtkNetCDF_cxx-6.2.lib;vtkoggtheora-6.2.lib;vtkParallelCore-6.2.lib;vtkpng-6.2.lib;vtkproj4-6.2.lib;vtkRenderingAnnotation-6.2.lib;vtkRenderingContext2D-6.2.lib;vtkRenderingContextOpenGL-6.2.lib;vtkRenderingCore-6.2.lib;vtkRenderingFreeType-6.2.lib;vtkRenderingFreeTypeOpenGL-6.2.lib;vtkRenderingGL2PS-6.2.lib;vtkRenderingImage-6.2.lib;vtkRenderingLabel-6.2.lib;vtkRenderingLIC-6.2.lib;vtkRenderingLOD-6.2.lib;vtkRenderingOpenGL-6.2.lib;vtkRenderingVolume-6.2.lib;vtkRenderingVolumeOpenGL-6.2.lib;vtksqlite-6.2.lib;vtksys-6.2.lib;vtktiff-6.2.lib;vtkverdict-6.2.lib;vtkViewsContext2D-6.2.lib;vtkViewsCore-6.2.lib;vtkViewsInfovis-6.2.lib;vtkzlib-6.2.lib;%(AdditionalDependencies)&lt;/AdditionalDependencies&gt;</span><br><span class="line">    &lt;/Link&gt;</span><br><span class="line">  &lt;/ItemDefinitionGroup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/Project&gt;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Realsense Q&A]]></title>
      <url>http://idler1229.github.io/2016/04/10/CV/Realsense-Q-A/</url>
      <content type="html"><![CDATA[<h3 id="Configure-on-Linux"><a href="#Configure-on-Linux" class="headerlink" title="Configure on Linux"></a>Configure on Linux</h3><p>1 Cann&#x2019;t find /dev/video0</p>
<pre><code class="sh">modprobe uvcvideo
modprobe -r uvcvideo <span class="comment">#remove module UVC</span>
</code></pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Problems]]></title>
      <url>http://idler1229.github.io/2016/04/10/Problems/Problems/</url>
      <content type="html"><![CDATA[<h2 id="Problems"><a href="#Problems" class="headerlink" title="Problems"></a>Problems</h2><h3 id="Progamming"><a href="#Progamming" class="headerlink" title="Progamming"></a>Progamming</h3><h4 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h4><h5 id="1"><a href="#1" class="headerlink" title="1"></a>1</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;a&apos;</span>==<span class="string">&quot;a&quot;</span>, <span class="string">&quot;a&quot;</span> == <span class="string">&quot;a&quot;</span></span><br></pre></td></tr></table></figure>
<h5 id="2"><a href="#2" class="headerlink" title="2"></a>2</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">new,<span class="built_in">free</span> </span><br><span class="line"><span class="built_in">malloc</span> <span class="keyword">delete</span></span><br></pre></td></tr></table></figure>
<h5 id="3-&#x5185;&#x5B58;&#x7BA1;&#x7406;"><a href="#3-&#x5185;&#x5B58;&#x7BA1;&#x7406;" class="headerlink" title="3 &#x5185;&#x5B58;&#x7BA1;&#x7406;"></a>3 &#x5185;&#x5B58;&#x7BA1;&#x7406;</h5><p>1MB&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;90%&#x7684;&#x65F6;&#x95F4;&#x53EA;&#x7528;&#x4E86;60%&#x7684;&#x7A7A;&#x95F4;<br>&#x5982;&#x4F55;&#x8BBE;&#x8BA1;</p>
<h5 id="4"><a href="#4" class="headerlink" title="4 ++++"></a>4 ++++</h5><p>gcc&#x4E0B;&#x65E0;&#x6CD5;&#x901A;&#x8FC7;, g++&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">++++i;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Beyond Compare Crack]]></title>
      <url>http://idler1229.github.io/2016/04/06/Linux/Solution/Beyond-Compare-Crack/</url>
      <content type="html"><![CDATA[<h2 id="Crack-Beyond-Compare-on-Linux-&#x2265;&#x25C7;&#x2264;"><a href="#Crack-Beyond-Compare-on-Linux-&#x2265;&#x25C7;&#x2264;" class="headerlink" title="Crack Beyond Compare on Linux  (&#x2265;&#x25C7;&#x2264;)"></a>Crack Beyond Compare on Linux  (&#x2265;&#x25C7;&#x2264;)</h2><h3 id="Download-Beyond-Compare-Version-4-for-Linux"><a href="#Download-Beyond-Compare-Version-4-for-Linux" class="headerlink" title="Download Beyond Compare Version 4 for Linux"></a>Download <a href="http://www.scootersoftware.com/download.php" target="_blank" rel="external">Beyond Compare Version 4 for Linux</a></h3><p>Install to  <em>/usr/lib/beyondcompare/</em></p>
<h3 id="Replace-binary-sequence"><a href="#Replace-binary-sequence" class="headerlink" title="Replace binary sequence"></a>Replace binary sequence</h3><p>Replace<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keexjEP3t4Mue23hrnuPtY4TdcsqNiJL-5174TsUdLmJSIXKfG2NGPwBL6vnRPddT7tH29qpkneX63DO9ECSPE9rzY1zhThHERg8lHM9IBFT+rVuiY823aQJuqzxCKIE1bcDqM4wgW01FH6oCBP1G4ub01xmb4BGSUG6ZrjxWHJyNLyIlGvOhoY2HAYzEtzYGwxFZn2JZ66o4RONkXjX0DF9EzsdUef3UAS+JQ+fCYReLawdjEe6tXCv88GKaaPKWxCeaUL9PejICQgRQOLGOZtZQkLgAelrOtehxz5ANOOqCaJgy2mJLQVLM5SJ9Dli909c5ybvEhVmIC0dc9dWH+</span><br></pre></td></tr></table></figure></p>
<p>To<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N9KmiLVlKMU7RJqnE+WXEEPI1SgglmfmLc1yVH7dqBb9ehOoKG9UE+HAE1YvH1XX2XVGeEqYUY-Tsk7YBTz0WpSpoYyPgx6Iki5KLtQ5G-aKP9eysnkuOAkrvHU8bLbGtZteGwJarev03PhfCioJL4OSqsmQGEvDbHFEbNl1qJtdwEriR+VNZts9vNNLk7UGfeNwIiqpxjk4Mn09nmSd8FhM4ifvcaIbNCRoMPGl6KU12iseSe+w+1kFsLhX+OhQM8WXcWV10cGqBzQE9OqOLUcg9n0krrR3KrohstS9smTwEx9olyLYppvC0p5i7dAx2deWvM1ZxKNs0BvcXGukR+</span><br></pre></td></tr></table></figure></p>
<p>With Shell command<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/keexjEP3t4Mue23hrnuPtY4TdcsqNiJL-5174TsUdLmJSIXKfG2NGPwBL6vnRPddT7tH29qpkneX63DO9ECSPE9rzY1zhThHERg8lHM9IBFT+rVuiY823aQJuqzxCKIE1bcDqM4wgW01FH6oCBP1G4ub01xmb4BGSUG6ZrjxWHJyNLyIlGvOhoY2HAYzEtzYGwxFZn2JZ66o4RONkXjX0DF9EzsdUef3UAS+JQ+fCYReLawdjEe6tXCv88GKaaPKWxCeaUL9PejICQgRQOLGOZtZQkLgAelrOtehxz5ANOOqCaJgy2mJLQVLM5SJ9Dli909c5ybvEhVmIC0dc9dWH+/N9KmiLVlKMU7RJqnE+WXEEPI1SgglmfmLc1yVH7dqBb9ehOoKG9UE+HAE1YvH1XX2XVGeEqYUY-Tsk7YBTz0WpSpoYyPgx6Iki5KLtQ5G-aKP9eysnkuOAkrvHU8bLbGtZteGwJarev03PhfCioJL4OSqsmQGEvDbHFEbNl1qJtdwEriR+VNZts9vNNLk7UGfeNwIiqpxjk4Mn09nmSd8FhM4ifvcaIbNCRoMPGl6KU12iseSe+w+1kFsLhX+OhQM8WXcWV10cGqBzQE9OqOLUcg9n0krrR3KrohstS9smTwEx9olyLYppvC0p5i7dAx2deWvM1ZxKNs0BvcXGukR+/g&quot;</span>  BCompare</span><br></pre></td></tr></table></figure></p>
<h3 id="Enter-product-key"><a href="#Enter-product-key" class="headerlink" title="Enter product key"></a>Enter product key</h3><p>If got message with &#x201C;Trial Mode Error&#xFF01;&#x201D;, it has been successful to crack Beyond Compare. And enter the product key below.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--- BEGIN LICENSE KEY ---</span><br><span class="line">GXN1eh9FbDiX1ACdd7XKMV7hL7x0ClBJLUJ-zFfKofjaj2yxE53xauIfkqZ8FoLpcZ0Ux6McTyNmODDSvSIHLYhg1QkTxjCeSCk6ARz0ABJcnUmd3dZYJNWFyJun14rmGByRnVPL49QH+Rs0kjRGKCB-cb8IT4Gf0Ue9WMQ1A6t31MO9jmjoYUeoUmbeAQSofvuK8GN1rLRv7WXfUJ0uyvYlGLqzq1ZoJAJDyo0Kdr4ThF-IXcv2cxVyWVW1SaMq8GFosDEGThnY7C-SgNXW30jqAOgiRjKKRX9RuNeDMFqgP2cuf0NMvyMrMScnM1ZyiAaJJtzbxqN5hZOMClUTE+++</span><br><span class="line">--- END LICENSE KEY -----</span><br></pre></td></tr></table></figure></p>
<h3 id="HAHA-&#x2514;-o-&#x2518;"><a href="#HAHA-&#x2514;-o-&#x2518;" class="headerlink" title="HAHA &#x2514;(^o^)&#x2518;"></a>HAHA &#x2514;(<em>^o</em>^)&#x2518;</h3><p><img src="/2016/04/06/Linux/Solution/Beyond-Compare-Crack/bc.png" alt="bc"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Use f.lux to protect eyes]]></title>
      <url>http://idler1229.github.io/2016/04/04/Linux/Software/Use-f-lux-to-protect-eyes/</url>
      <content type="html"><![CDATA[<h2 id="f-lux-software-to-make-your-life-better"><a href="#f-lux-software-to-make-your-life-better" class="headerlink" title="f.lux: software to make your life better"></a>f.lux: software to make your life better</h2><h3 id="Official-Website"><a href="#Official-Website" class="headerlink" title="Official Website"></a>Official Website</h3><p><a href="https://justgetflux.com/" target="_blank" rel="external">https://justgetflux.com/</a></p>
<h3 id="Install-with-ppa"><a href="#Install-with-ppa" class="headerlink" title="Install with ppa"></a>Install with ppa</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:kilian/f.lux</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install fluxgui</span><br></pre></td></tr></table></figure>
<h3 id="Replace-core"><a href="#Replace-core" class="headerlink" title="Replace core"></a>Replace core</h3><p>If your f.lux does not work, please download core from official website.<br><a href="https://justgetflux.com/linux/xflux-pre.tgz" target="_blank" rel="external">32 bit</a><br><a href="https://justgetflux.com/linux/xflux64.tgz" target="_blank" rel="external">64 bit</a></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -i <span class="variable">${your-xflux-localtion}</span> /usr/bin/</span><br></pre></td></tr></table></figure>
<h3 id="Choose-Latitude-and-Longitude"><a href="#Choose-Latitude-and-Longitude" class="headerlink" title="Choose Latitude and Longitude"></a>Choose Latitude and Longitude</h3><p>You can click <em>Find you latitude annd longitude</em> to select your location, and f.lux will automaticly adjust color temperature.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Pic2Pdf]]></title>
      <url>http://idler1229.github.io/2016/04/02/Linux/Shell/Shell-Maze/</url>
      <content type="html"><![CDATA[<h2 id="Shell-&#x7591;&#x60D1;"><a href="#Shell-&#x7591;&#x60D1;" class="headerlink" title="Shell &#x7591;&#x60D1;"></a>Shell &#x7591;&#x60D1;</h2><h3 id="&#x9012;&#x5F52;&#x8BBF;&#x95EE;&#xFF0C;&#x5982;&#x4F55;&#x7ED9;&#x8DEF;&#x5F84;&#x6807;&#x53F7;"><a href="#&#x9012;&#x5F52;&#x8BBF;&#x95EE;&#xFF0C;&#x5982;&#x4F55;&#x7ED9;&#x8DEF;&#x5F84;&#x6807;&#x53F7;" class="headerlink" title="&#x9012;&#x5F52;&#x8BBF;&#x95EE;&#xFF0C;&#x5982;&#x4F55;&#x7ED9;&#x8DEF;&#x5F84;&#x6807;&#x53F7;"></a>&#x9012;&#x5F52;&#x8BBF;&#x95EE;&#xFF0C;&#x5982;&#x4F55;&#x7ED9;&#x8DEF;&#x5F84;&#x6807;&#x53F7;</h3><h4 id="&#x4F7F;&#x7528;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x6765;&#x89E3;&#x51B3;&#xFF08;&#x4F46;&#x4E0D;&#x4F18;&#x96C5;&#xFF09;"><a href="#&#x4F7F;&#x7528;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x6765;&#x89E3;&#x51B3;&#xFF08;&#x4F46;&#x4E0D;&#x4F18;&#x96C5;&#xFF09;" class="headerlink" title="&#x4F7F;&#x7528;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x6765;&#x89E3;&#x51B3;&#xFF08;&#x4F46;&#x4E0D;&#x4F18;&#x96C5;&#xFF09;"></a>&#x4F7F;&#x7528;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x6765;&#x89E3;&#x51B3;&#xFF08;&#x4F46;&#x4E0D;&#x4F18;&#x96C5;&#xFF09;</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">count=0</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">trimDFS</span></span>() {</span><br><span class="line">    ls <span class="string">&quot;<span class="variable">$1</span>&quot;</span>| <span class="keyword">while</span> <span class="built_in">read</span> file</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="_">-d</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">			<span class="built_in">let</span> count+=1</span><br><span class="line">			<span class="built_in">echo</span> <span class="string">&quot;[<span class="variable">$count</span>] <span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span></span><br><span class="line">            trimDFS <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span></span><br><span class="line">        <span class="comment">#else</span></span><br><span class="line">            <span class="comment">#dos2unix $1&quot;/&quot;$file</span></span><br><span class="line">            <span class="comment">#echo &quot;$1&quot;&quot;/&quot;&quot;$file&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">trimDFS <span class="variable">$1</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Picture batch to Pdf]]></title>
      <url>http://idler1229.github.io/2016/04/02/Linux/Shell/Pic2Pdf/</url>
      <content type="html"><![CDATA[<h2 id="Archive-pictures-to-pdf"><a href="#Archive-pictures-to-pdf" class="headerlink" title="Archive pictures to pdf"></a>Archive pictures to pdf</h2><h3 id="Get-rid-of-filename-blank"><a href="#Get-rid-of-filename-blank" class="headerlink" title="Get rid of filename blank"></a>Get rid of filename blank</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> rm-ALL-<span class="function"><span class="title">blank</span></span>() {</span><br><span class="line">    ls <span class="string">&quot;<span class="variable">$1</span>&quot;</span>| <span class="keyword">while</span> <span class="built_in">read</span> file</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">		<span class="comment">#echo $newfile</span></span><br><span class="line">		<span class="keyword">if</span> [ <span class="_">-d</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">			newfile=`<span class="built_in">echo</span> <span class="variable">$file</span> | sed <span class="string">&apos;s/ //g&apos;</span>`</span><br><span class="line">			mv <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$newfile</span>&quot;</span> 2&gt;/dev/null</span><br><span class="line">			rm-ALL-blank <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">rm-ALL-blank <span class="variable">$1</span></span><br></pre></td></tr></table></figure>
<h3 id="Pictures-to-pdf"><a href="#Pictures-to-pdf" class="headerlink" title="Pictures to pdf"></a>Pictures to pdf</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">myconvert</span></span>() {</span><br><span class="line">    ls <span class="string">&quot;<span class="variable">$1</span>&quot;</span>| <span class="keyword">while</span> <span class="built_in">read</span> file</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="_">-d</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">			find <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span> -maxdepth 1 -name <span class="string">&quot;*.jpg&quot;</span>|sort 1&gt;<span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>/_myTmp_&quot;</span></span><br><span class="line">			<span class="keyword">if</span> [ <span class="_">-s</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>/_myTmp_&quot;</span> ]; <span class="keyword">then</span>  </span><br><span class="line">				<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span>.pdf</span><br><span class="line">				convert @<span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>/_myTmp_&quot;</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span>.pdf</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				myconvert <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>&quot;</span></span><br><span class="line">			<span class="keyword">fi</span></span><br><span class="line">		<span class="keyword">fi</span></span><br><span class="line">		rm <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$file</span>/_myTmp_&quot;</span> 2&gt;/dev/null</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">myconvert <span class="variable">$1</span></span><br></pre></td></tr></table></figure>
<h3 id="Move-pdf"><a href="#Move-pdf" class="headerlink" title="Move pdf"></a>Move pdf</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir ../pdf</span><br><span class="line"><span class="keyword">for</span> pdf <span class="keyword">in</span> `find . -name <span class="string">&quot;*.pdf&quot;</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	mv <span class="variable">$pdf</span> ../pdf/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
  
  
</search>
